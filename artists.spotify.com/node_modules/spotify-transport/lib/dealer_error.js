'use strict';

var Errors = require('../types/errors');

/**
 * Represents a dealer error.
 *
 * @param {?string=} code The error code.
 * @param {?string=} message The error message.
 * @param {?object=} e Remote event from dealer.
 * @constructor
 */
function DealerError(code, message, e) {
  Error.call(this, code);

  var event = e || {};

  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-transport/types/Errors}
   */
  this.code = code || Errors.DEALER_ERROR;

  /**
   * Raw representation of the error that lead to the creation of this
   *     instance.
   *
   * @type {object}
   */
  this.raw = event;

  /**
   * Reason from dealer.
   *
   * @type {string}
   */
  this.wsReason = event.reason || null;

  /**
   * Error errorCode from dealer.
   *
   * @type {number}
   */
  this.wsCode = event.code || null;
}

// Error inheritance.
DealerError.prototype = new Error();
DealerError.prototype.constructor = DealerError;
DealerError.prototype.name = 'DealerError';

module.exports = DealerError;

