'use strict';

/**
 * A class representing an HTTP response.
 *
 * @constructor
 * @param {string} url An optional URL for the response.
 * @param {number} status An optional status for the response;
 */
function HTTPResponse(url, status) {
  /**
   * The URL of the response.
   *
   * @type {string}
   */
  this.url = url || '';

  /**
   * The status code of the response.
   *
   * @type {number}
   */
  this.status = status || 0;

  /**
   * The response headers.
   *
   * @type {Object.<String, String>}
   */
  this.headers = null;

  /**
   * The body of the response.
   *
   * @type {*}
   */
  this.body = null;

  /**
   * A flag that indicates whether the navigator was online when the request
   * response was sent.
   *
   * @type {boolean}
   */
  this.offline = false;

  /**
   * A timers object for the response.
   *
   * @type {Object.<string, number>}
   */
  this.timing = null;

  /**
   * A flag that indicates whether the request is "ok" (i.e., status family of
   * 2).
   *
   * @type {boolean}
   */
  this.ok = this.status >= 200 && this.status <= 299;

  /**
   * Data that was included in the request.
   *
   * @type {Object}
   */
  this.metadata = null;
}

/**
 * Return the status family of the status code.
 *
 * @return {module:spotify-transport/types.StatusFamily} The status family of
 *     the response.
 */
HTTPResponse.prototype.getStatusFamily = function() {
  return 0 | this.status / 100;
};

module.exports = HTTPResponse;
