"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.methodIfFuncProp = methodIfFuncProp;
exports.bindTrailingArgs = bindTrailingArgs;
exports.hasOneOfTwo = hasOneOfTwo;

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isUndefined = _interopRequireDefault(require("lodash/isUndefined"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convenience function for event callbacks... we often want to say
 * "if this.props.onThing is a function, call this.onThing(e), which will do stuff, then call this.props.onThing"
 * @param {String} propName - name of prop (func name)
 * @param {Object} props - props from component
 * @param {Function} context - component context
 * @param
 */
function methodIfFuncProp(propName, props, context) {
  return (0, _isFunction.default)(props[propName]) && (0, _isFunction.default)(context[propName]) ? context[propName] : null;
}
/**
 * Binds arguments to given fn after arguments provided to the fn
 * @param {Function} fn - function to be called
 * @param  {...any} args - arguments to be appended to the function
 */


function bindTrailingArgs(fn, ...boundArgs) {
  return (...args) => {
    return fn(...args, ...boundArgs);
  };
}

function hasOneOfTwo(a, b) {
  return [a, b].some(_isUndefined.default) && [a, b].some(v => !(0, _isUndefined.default)(v));
}
//# sourceMappingURL=util.js.map