'use strict';

var hasDefineProperty = typeof Object.defineProperty === 'function';

var DEFAULT_DESCRIPTOR = {
  value: false,
  writable: true
};

/**
 * Represents an Event.
 *
 * **NOTE**: The Event class is an internal class: you cannot instantiate it
 * directly. Instead, you should use the provided
 * {@link module:spotify-eventemitter.createEvent} function.
 *
 * @constructor
 * @param {string} type The type name of the event object.
 * @param {Object} props An object that will be added as properties of the
 *     event object.
 * @see {@link module:spotify-eventemitter.createEvent}
 */
function Event(type, props) {
  /**
   * The type of the event.
   *
   * @type {string}
   */
  this.type = type;

  // Parse the extra event properties. We do this before setting the internal
  // flags in case `props` is actually an Event instance. It makes it easier for
  // us to override the flags later.
  if (props) {
    for (var key in props) {
      if (!props.hasOwnProperty(key) || key === 'type') {
        continue;
      }
      this[key] = props[key];
    }
  }

  if (hasDefineProperty) {
    Object.defineProperty(this, '_prevented', DEFAULT_DESCRIPTOR);
    Object.defineProperty(this, '_stopped', DEFAULT_DESCRIPTOR);
    Object.defineProperty(this, '_immediateStopped', DEFAULT_DESCRIPTOR);
    Object.defineProperty(this, 'defaultPrevented', {
      get: function() {
        return this._prevented;
      }.bind(this),
      set: function(value) {
        return value;
      }
    });
  } else {
    /**
     * External property that indicates whether the event's `preventDefault`
     * method was called.
     *
     * @type {boolean}
     * @public
     */
    this.defaultPrevented = false;

    /**
     * An internal flag for whether preventDefault was called.
     *
     * @type {boolean}
     * @private
     */
    this._prevented = false;

    /**
     * An internal flag for whether stopPropagation was called
     *
     * @type {boolean}
     * @private
     */
    this._stopped = false;

    /**
     * An internal flag for whether stopImmediatePropagation was called.
     *
     * @type {boolean}
     * @private
     */
    this._immediateStopped = false;
  }
}

/**
 * Returns whether stopPropagation was called on the event.
 *
 * @param {Event} ev The event.
 * @return {boolean} True if stopPropagation was called, false otherwise.
 */
Event.wasPropagationStopped = function(ev) {
  return !!ev._stopped;
};

/**
 * Returns whether stopImmediatePropagation was called on the event.
 *
 * @param {Event} ev The event.
 * @return {boolean} True if stopImmediatePropagation was called, false
 *     otherwise.
 */
Event.wasImmediatePropagationStopped = function(ev) {
  return !!ev._immediateStopped;
};

/**
 * Prevents the default operation for the event.
 */
Event.prototype.preventDefault = function() {
  this._prevented = true;
  if (!hasDefineProperty) {
    this.defaultPrevented = true;
  }
};

/**
 * Stops the propagation of the event.
 */
Event.prototype.stopPropagation = function() {
  this._stopped = true;
};

/**
 * Stops the immediate propagation of the event.
 *
 * Handlers added after any event handler calling this method will not receive
 * the event.
 */
Event.prototype.stopImmediatePropagation = function() {
  this._immediateStopped = true;
};

module.exports = Event;
