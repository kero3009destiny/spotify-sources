"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plot = void 0;
const prop_types_1 = __importDefault(require("prop-types"));
const react_1 = __importStar(require("react"));
const reactochart_1 = require("reactochart");
const global_1 = __importDefault(require("../../styles/global"));
class Plot extends react_1.Component {
    render() {
        const { children, height, width, xScale, yScale, PlotClassName } = this.props;
        const size = { height, width };
        return (react_1.default.createElement(react_1.Fragment, null,
            react_1.default.createElement(reactochart_1.XYPlot, Object.assign({ xDomain: xScale.domain(), yDomain: yScale.domain(), xyPlotClassName: PlotClassName }, size), react_1.default.Children.map(children, child => {
                return child === null || child === undefined
                    ? null
                    : react_1.default.cloneElement(child, this.props);
            })),
            react_1.default.createElement(global_1.default, null)));
    }
}
exports.Plot = Plot;
Plot.propTypes = {
    children: prop_types_1.default.node,
    height: prop_types_1.default.number.isRequired,
    margin: prop_types_1.default.shape({
        top: prop_types_1.default.number,
        left: prop_types_1.default.number,
        right: prop_types_1.default.number,
        bottom: prop_types_1.default.number,
    }),
    xScale: prop_types_1.default.func.isRequired,
    yScale: prop_types_1.default.func.isRequired,
    width: prop_types_1.default.number.isRequired,
    PlotClassName: prop_types_1.default.string,
};
Plot.defaultProps = {
    margin: {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
    },
};
exports.default = Plot;
//# sourceMappingURL=index.js.map