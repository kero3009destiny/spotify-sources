import { transform } from './transform';
import { expandShorthand } from './expandShorthand';
const STYLIS_CONTEXTS = {
    POST_PROCESS: -2,
    PREPARATION: -1,
    NEWLINE: 0,
    PROPERTY: 1,
    SELECTOR_BLOCK: 2,
    AT_RULE: 3,
};
export function stylisPhysicalToLogical(context, content, selectors) {
    var _a;
    if (context === STYLIS_CONTEXTS.PROPERTY) {
        const [, property, value] = (_a = content.match(/^([^:]+):(.+)$/)) !== null && _a !== void 0 ? _a : [];
        if (!property || !value) {
            return undefined;
        }
        if (selectors.some(selector => /\[dir(=[^\]]*)?\]/.test(selector))) {
            return undefined;
        }
        return expandShorthand(property, value)
            .map(rule => transform(...rule).join(':'))
            .join(';');
    }
    return undefined;
}
Object.defineProperty(stylisPhysicalToLogical, 'name', {
    value: 'stylisPhysicalToLogical',
});
//# sourceMappingURL=stylis.js.map