export function deprecatedPropWarning(oldProp, message) {
  /* eslint-disable-next-line no-console */
  console.warn("The ".concat(oldProp, " prop has been deprecated. ").concat(message || ''));
}
export function renamedPropWarning(oldProp, newProp, additionalInfo) {
  /* eslint-disable-next-line no-console */
  console.warn("The ".concat(oldProp, " prop has been deprecated. Please use ").concat(newProp, " instead. ").concat(additionalInfo || ''));
}
export function componentDeprecationWarning(oldComponent, newComponent, version, additionalInfo) {
  /* eslint-disable-next-line no-console */
  console.warn("".concat(oldComponent, " is deprecated and will be removed in ").concat(version, ". Please use ").concat(newComponent, " instead. ").concat(additionalInfo || ''));
}
/**
 * this helper function was created when we renamed the "color" prop
 * to "semanticColor" for our v4 color theming release
 *
 * TODO: Delete this helper function.
 */

export function colorWarning(_ref) {
  var color = _ref.color,
      _ref$oldProp = _ref.oldProp,
      oldProp = _ref$oldProp === void 0 ? 'color' : _ref$oldProp,
      _ref$newProp = _ref.newProp,
      newProp = _ref$newProp === void 0 ? 'semanticColor' : _ref$newProp,
      _ref$additionalInfo = _ref.additionalInfo,
      additionalInfo = _ref$additionalInfo === void 0 ? '' : _ref$additionalInfo;

  if (color) {
    renamedPropWarning(oldProp, newProp, additionalInfo);
  }
}