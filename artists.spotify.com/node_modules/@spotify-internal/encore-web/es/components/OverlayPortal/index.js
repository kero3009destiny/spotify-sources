import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["overlayPosition", "closeOverlay"];
import React, { useEffect } from 'react';
import ReactDOM from 'react-dom';
import { OverlayPortalContainer } from "./Container"; // 1: Renders a React Portal into document.body to avoid component hierarchy and potential overflow issues
// 2: Receives positional values of tooltip trigger from ref and applies positioning to the overlay
// 3: Renders nothing if scroll event fires on window. Avoids potential bug of tooltip staying still while trigger moves.

export var OverlayPortal = function OverlayPortal(_ref) {
  var _ref$overlayPosition = _ref.overlayPosition,
      overlayPosition = _ref$overlayPosition === void 0 ? {
    width: 0,
    height: 0,
    top: 0,
    left: 0
  } : _ref$overlayPosition,
      closeOverlay = _ref.closeOverlay,
      props = _objectWithoutProperties(_ref, _excluded);

  useEffect(function () {
    if (!closeOverlay) {
      return function () {};
    }

    window.addEventListener('scroll', closeOverlay, true);
    return function () {
      window.removeEventListener('scroll', closeOverlay, true);
    };
  }, [closeOverlay]);
  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(OverlayPortalContainer, Object.assign({
    overlayPosition: overlayPosition
  }, props)), document.body);
};
/**
* **OverlayPortal** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/OverlayPortal) |   
*
* null
*
* @example
* No example for this component
*
*/

export default OverlayPortal;