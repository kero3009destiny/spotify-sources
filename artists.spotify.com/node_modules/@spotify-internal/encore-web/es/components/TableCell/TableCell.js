import { screenMdMin, screenSmMax, screenSmMin, screenXsMax, spacer4, spacer12 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { useEncoreContextType } from "../../hooks/useEncoreContextType";
import { cssColorValue, fontWeightBold, rootStyle, semanticColors, textOverflow, typeStyleBody2, viola } from "../../styles";
import { Button } from "../ButtonIcon/Button";
import Svg from "../Icon/Svg";
import Overlay from "../OverlayTrigger/Overlay";
import Trigger from "../OverlayTrigger/Trigger";
export var TableCellElement = styled.td.withConfig({
  displayName: "TableCell__TableCellElement",
  componentId: "sc-1nn7cfv-0"
})(["", ";", ";font-feature-settings:", ";font-weight:", ";text-align:", ";vertical-align:middle;padding:", ";color:", ";&:first-child{@media (max-width:", "){padding-left:", ";}}&:last-child{@media (max-width:", "){padding-right:", ";}}&:focus{outline:none;font-weight:", ";color:", ";}", ";> ", ",> ", ",> ", " span:not(", ") ", "{position:relative;top:3px;}"], rootStyle(), function () {
  return useEncoreContextType(typeStyleBody2(), viola());
}, function (props) {
  return props.numerical ? "'tnum'" : undefined;
}, function (props) {
  return props.highlight ? fontWeightBold : undefined;
}, function (props) {
  return props.align;
}, function (props) {
  return props.condensed ? 0 : spacer12;
}, function (props) {
  return props.highlight ? cssColorValue(semanticColors.textBase) : 'inherit';
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, fontWeightBold, cssColorValue(semanticColors.textBase), function (props) {
  return props.truncate && css(["", ";max-width:0;width:100%;@media (min-width:", "){max-width:150px;width:auto;}@media (min-width:", ") and (max-width:", "){max-width:85px;width:auto;}"], textOverflow(), screenMdMin, screenSmMin, screenSmMax);
},
/* sc-selector */
Svg,
/* sc-selector */
Button,
/* sc-selector */
Trigger,
/* sc-selector */
Overlay, Button);