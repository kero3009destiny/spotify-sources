import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["semanticColor"];
import { spacer8 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { buttonStylesActive, buttonStylesBase, buttonStylesDisabled, buttonStylesHover, cssColorValue, focusBottomBorder, rootStyle, semanticColors } from "../../styles";
import { pxToInt } from "../../typeHelpers";
export var Button = styled.button.withConfig({
  displayName: "Button",
  componentId: "sc-1yymw9-0"
})(["", ""], function (_ref) {
  var _ref$semanticColor = _ref.semanticColor,
      semanticColor = _ref$semanticColor === void 0 ? 'textSubdued' : _ref$semanticColor,
      props = _objectWithoutProperties(_ref, _excluded);

  var buttonPadding = spacer8;
  var hoverStyles = css(["", " ", ""], buttonStylesHover, semanticColor === 'textSubdued' && css(["color:", ";"], cssColorValue(semanticColors.textBase)));
  var activeStyles = css(["", " color:", ";"], buttonStylesActive, cssColorValue(semanticColor));
  var disabledStyles = css(["", " color:", ";&::after{border-color:transparent;}"], buttonStylesDisabled, cssColorValue(semanticColor));
  return css(["", ";", ";display:inline-flex;align-items:center;color:", ";padding:", ";", " ", " &::after{left:", ";width:calc(100% - ", "px);}&:hover{", "}", " &:active{", "}", " &[disabled],&[aria-disabled='true'],fieldset[disabled] &{", "}"], rootStyle(), buttonStylesBase('md', props.useBrowserDefaultFocusStyle), cssColorValue(semanticColor), buttonPadding, props.buttonLegacy && css(["&&{font-weight:400;letter-spacing:0.25px;padding:0;}"]), !props.useBrowserDefaultFocusStyle && focusBottomBorder(pxToInt(buttonPadding), props.isUsingKeyboard, props.isFocus), buttonPadding, pxToInt(buttonPadding) * 2, hoverStyles, props.isHover && hoverStyles, activeStyles, props.isActive && activeStyles, disabledStyles);
});