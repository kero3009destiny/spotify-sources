import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["error", "children", "theme"];
import React from 'react';
import { spacer4, spacer8 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { deprecatedPropWarning } from "../../deprecationWarnings";
import { useEncoreContextType } from "../../hooks/useEncoreContextType";
import { cssColorValue, rootStyle, semanticColors, typeStyleBody2, viola } from "../../styles";
import { IconX } from "../Icon/IconX";
var IconXForText = styled(IconX).withConfig({
  displayName: "FormHelpText__IconXForText",
  componentId: "sc-7bszd7-0"
})(["height:1em;width:1em;vertical-align:-0.175em;margin-right:", ";"], spacer4);
var Help = styled.div.withConfig({
  displayName: "FormHelpText__Help",
  componentId: "sc-7bszd7-1"
})(["", ";", ";margin-top:", ";", ""], rootStyle(), function () {
  return useEncoreContextType(typeStyleBody2(), viola());
}, spacer8, function (props) {
  return css(["color:", ";", ";"], props.error ? cssColorValue(semanticColors.textNegative) : cssColorValue(semanticColors.textSubdued), props.maxChars && css(["font-feature-settings:'tnum';text-align:right;"]));
});
export var FormHelpText = function FormHelpText(_ref) {
  var error = _ref.error,
      children = _ref.children,
      theme = _ref.theme,
      props = _objectWithoutProperties(_ref, _excluded);

  if (theme) {
    deprecatedPropWarning('theme', 'This component is intended to inherit its parentâ€™s color set or color.');
  }

  return /*#__PURE__*/React.createElement(Help, Object.assign({
    error: error
  }, props), error && /*#__PURE__*/React.createElement(IconXForText, {
    "aria-label": "Error:"
  }), children);
};
/**
* **FormHelpText** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/FormHelpText) | [Storybook](https://encore-web.spotify.net/?path=/story/components-form-formhelptext--default) | [Encore](https://encore.spotify.net/web/components/form?format=figma-figma#formhelptext) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=0:866) |
*
* FormHelpText is placed after a form field and can display contextual information, character count or error notifications.
*
* @example
* () => <FormHelpText>Helpful information</FormHelpText>;
*
*/

export default FormHelpText;