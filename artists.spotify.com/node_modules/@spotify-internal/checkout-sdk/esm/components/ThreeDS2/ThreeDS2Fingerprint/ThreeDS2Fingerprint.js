import { useEffect } from 'react';
import { base64Url, createForm, createIframe, } from '@spotify-internal/threeds2-js-utils';
var THREEDS_METHOD_TIMEOUT = 10000;
var setupFallback = function (serverTransId, callbackUrl) {
    var fingerprintIframe = null;
    var timeout = setTimeout(function () {
        var IFRAME_NAME = 'threeDSMethodTimeoutIframe';
        var threedsContainer = document.body;
        fingerprintIframe = createIframe(threedsContainer, IFRAME_NAME, 0, 0);
        var data = {
            threeDSServerTransID: serverTransId,
            failed: true,
        };
        var encodedData = base64Url.encode(JSON.stringify(data));
        var form = createForm('threedsMethodTimeoutForm', callbackUrl, IFRAME_NAME, 'threeDSMethodData', encodedData);
        threedsContainer.appendChild(form);
        setTimeout(function () {
            threedsContainer.removeChild(form);
        }, 1000);
        form.submit();
    }, THREEDS_METHOD_TIMEOUT);
    return {
        timeout: timeout,
        fingerprintIframe: fingerprintIframe,
    };
};
export default function ThreeDS2Fingerprint(_a) {
    var fingerprintData = _a.fingerprintData, setIsLoading = _a.setIsLoading;
    useEffect(function () {
        setIsLoading(true);
        var serverTransId = fingerprintData.serverTransId, callbackUrl = fingerprintData.callbackUrl, methodUrl = fingerprintData.methodUrl;
        var threedsContainer = document.body;
        var dataObj = {
            threeDSServerTransID: serverTransId,
            threeDSMethodNotificationURL: callbackUrl,
        };
        var stringifiedDataObject = JSON.stringify(dataObj);
        var base64URLEncodedData = base64Url.encode(stringifiedDataObject);
        var IFRAME_NAME = 'threeDSMethodIframe';
        var fingerprintIframe = createIframe(threedsContainer, IFRAME_NAME, '0', '0');
        var form = createForm('threedsMethodForm', methodUrl, IFRAME_NAME, 'threeDSMethodData', base64URLEncodedData);
        threedsContainer.appendChild(form);
        setTimeout(function () {
            threedsContainer.removeChild(form);
        }, 1000);
        form.submit();
        var _a = setupFallback(serverTransId, callbackUrl), timeout = _a.timeout, fallbackIframe = _a.fingerprintIframe;
        return function () {
            setIsLoading(false);
            fingerprintIframe.parentNode.removeChild(fingerprintIframe);
            if (fallbackIframe !== null) {
                fallbackIframe.parentNode.removeChild(fallbackIframe);
            }
            clearTimeout(timeout);
        };
    }, [fingerprintData]);
    return null;
}
