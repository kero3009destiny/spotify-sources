var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import React, { useContext, useState } from 'react';
import CheckoutContext from '../CheckoutProvider';
import { Type } from '../encoreOverrides';
import { FlowStep, FormLayout, TooltipKeys, } from '../../types';
import styled from 'styled-components';
import { Tooltip } from '../ProviderForm/layoutHelpers';
import LockIcon from '../PaymentOption/LockIcon';
var Wrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  font-family: Circular, Helvetica, Arial, sans-serif;\n  line-height: 1.5;\n  text-align: left;\n  position: relative;\n"], ["\n  font-family: Circular, Helvetica, Arial, sans-serif;\n  line-height: 1.5;\n  text-align: left;\n  position: relative;\n"])));
var HeaderRow = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 13px;\n  height: 43px;\n"], ["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 13px;\n  height: 43px;\n"])));
var LockIconContainer = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: 13px;\n  height: 30px;\n  width: 24px;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  svg:hover {\n    path {\n      stroke: #181818 !important;\n    }\n  }\n"], ["\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: 13px;\n  height: 30px;\n  width: 24px;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  svg:hover {\n    path {\n      stroke: #181818 !important;\n    }\n  }\n"])));
var LockIconTooltip = styled(Tooltip)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute;\n  transform: unset;\n  right: ", ";\n  left: ", ";\n  bottom: 28px;\n"], ["\n  position: absolute;\n  transform: unset;\n  right: ", ";\n  left: ", ";\n  bottom: 28px;\n"])), function (_a) {
    var isRtl = _a.isRtl;
    return (isRtl ? 'unset' : '0');
}, function (_a) {
    var isRtl = _a.isRtl;
    return (isRtl ? '0' : 'unset');
});
var getPciLayoutComponent = function (paymentProvider) {
    return (paymentProvider.layout &&
        paymentProvider.layout.find(function (i) { return i.type === FormLayout.Pci; }));
};
var isCard = function (paymentProvider) {
    return getPciLayoutComponent(paymentProvider) !== undefined;
};
var getSecurityExplainedTooltip = function (paymentProvider) {
    var layoutComponent = getPciLayoutComponent(paymentProvider);
    if (layoutComponent && layoutComponent.options) {
        return layoutComponent.options.tooltips[TooltipKeys.SecurityExplained];
    }
    return '';
};
export default function PaymentMethodHeader() {
    var _a = __read(useState(false), 2), showTooltip = _a[0], setShowTooltip = _a[1];
    var _b = useContext(CheckoutContext.Context), activePaymentProvider = _b.activePaymentProvider, redux = _b.redux;
    if (!activePaymentProvider) {
        return null;
    }
    return (React.createElement(Wrapper, null,
        showTooltip && (React.createElement(LockIconTooltip, null, getSecurityExplainedTooltip(activePaymentProvider))),
        isCard(activePaymentProvider) && (React.createElement(HeaderRow, null,
            React.createElement(Type.p, { variant: Type.body2, weight: Type.bold }, (activePaymentProvider === null || activePaymentProvider === void 0 ? void 0 : activePaymentProvider.label) && redux.flowStep !== FlowStep.Prepare
                ? activePaymentProvider === null || activePaymentProvider === void 0 ? void 0 : activePaymentProvider.label : redux.paymentDetailsLabel),
            React.createElement(LockIconContainer, { onMouseOver: function () {
                    setShowTooltip(true);
                }, onMouseOut: function () { return setShowTooltip(false); } },
                React.createElement(LockIcon, null))))));
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
