var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from 'react';
import styled, { css } from 'styled-components';
import { ButtonPrimary } from '@spotify-internal/encore-web';
import { Type } from '../encoreOverrides';
import LogosContainer from '../LogosContainer';
import { gray95 } from '@spotify-internal/tokens/web';
import { useShouldShowCtaModuleText, shouldShowCtaModuleIcons, } from '../Checkout/hooks';
var CtaButton = styled(ButtonPrimary)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  cursor: pointer;\n  margin: 32px auto 0;\n"], ["\n  cursor: pointer;\n  margin: 32px auto 0;\n"])));
var ctaModuleStyles = css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border-radius: 4px;\n  margin-top: 31px;\n  padding: 16px 32px 24px;\n  background: ", ";\n\n  ", " {\n    margin: 15px auto 0;\n  }\n"], ["\n  border-radius: 4px;\n  margin-top: 31px;\n  padding: 16px 32px 24px;\n  background: ", ";\n\n  ", " {\n    margin: 15px auto 0;\n  }\n"])), gray95, CtaButton);
var CtaWrapper = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ", "\n"], ["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ", "\n"])), function (props) { return props.ctaModuleTextShowing && ctaModuleStyles; });
var IconsContainer = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n"], ["\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n"])));
var CtaModuleText = styled(Type.p).attrs({
    variant: Type.body2,
})(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  margin-top: 15px;\n  text-align: center;\n"], ["\n  margin-top: 15px;\n  text-align: center;\n"])));
export default function CtaModule(_a) {
    var buttonLabel = _a.buttonLabel, provider = _a.provider, moreProviderLogosLabel = _a.moreProviderLogosLabel, maxLogos = _a.maxLogos, onClick = _a.onClick, checkoutWidth = _a.checkoutWidth, clientName = _a.clientName, clientContext = _a.clientContext, disabled = _a.disabled;
    var shouldShowCtaModuleText = useShouldShowCtaModuleText(provider, clientName, clientContext);
    return (React.createElement(CtaWrapper, { ctaModuleTextShowing: shouldShowCtaModuleText, "data-testid": "cta-module" },
        shouldShowCtaModuleText && (React.createElement(React.Fragment, null,
            shouldShowCtaModuleIcons(provider) && (React.createElement(IconsContainer, null,
                React.createElement(LogosContainer, { logos: provider.logos, maxLogos: maxLogos, checkoutWidth: checkoutWidth, moreProviderLogosLabel: moreProviderLogosLabel }))),
            React.createElement(CtaModuleText, null, provider.ctaModuleText))),
        React.createElement(CtaButton, { id: "checkout_submit", disabled: disabled, onClick: onClick }, buttonLabel)));
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
