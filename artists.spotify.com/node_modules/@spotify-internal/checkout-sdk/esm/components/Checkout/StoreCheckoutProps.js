import { connect } from 'react-redux';
import { checkoutSliceActions, } from '../../lib/store/checkoutSlice';
import { bindActionCreators } from '@reduxjs/toolkit';
var mapDispatchToProps = function (dispatch) { return ({
    checkoutActions: bindActionCreators(checkoutSliceActions, dispatch),
}); };
var StoreCheckoutProps = connect(null, mapDispatchToProps)(function (_a) {
    var props = _a.props, checkoutActions = _a.checkoutActions;
    var clientContext = props.clientContext, clientName = props.clientName, premium = props.premium, initialProviderId = props.initialProviderId, offerLegalTerms = props.offerLegalTerms, buttonLabel = props.buttonLabel, country = props.country, discountBlocker = props.discountBlocker;
    checkoutActions.setCheckoutProps({
        clientContext: clientContext,
        clientName: clientName,
        premium: premium,
        initialProviderId: initialProviderId,
        offerLegalTerms: offerLegalTerms,
        buttonLabel: buttonLabel,
        country: country,
        discountBlocker: discountBlocker,
        hasOnOpenCountryPicker: props.onOpenCountryPicker !== undefined,
        hasAddressCollectionSdk: props.additionalForms
            ? props.additionalForms.some(function (additionalForm) { return additionalForm.name === 'address-collection-sdk'; })
            : false,
    });
    return null;
});
export default StoreCheckoutProps;
