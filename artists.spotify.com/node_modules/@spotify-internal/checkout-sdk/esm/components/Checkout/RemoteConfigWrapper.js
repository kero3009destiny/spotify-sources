import React from 'react';
import { checkoutSliceActions, } from '../../lib/store/checkoutSlice';
import { bindActionCreators } from '@reduxjs/toolkit';
import { connect } from 'react-redux';
var mapStateToProps = function (state) { return ({
    experimentIsApplied: state.experimentIsApplied,
}); };
var mapDispatchToProps = function (dispatch) { return ({
    checkoutReduxActions: bindActionCreators(checkoutSliceActions, dispatch),
}); };
var connector = connect(mapStateToProps, mapDispatchToProps);
var RemoteConfigWrapper = function (_a) {
    var children = _a.children, experimentIsApplied = _a.experimentIsApplied, checkoutReduxActions = _a.checkoutReduxActions;
    if (!experimentIsApplied) {
        checkoutReduxActions.setExperimentIsApplied();
    }
    return experimentIsApplied ? React.createElement(React.Fragment, null, children) : null;
};
export default connector(RemoteConfigWrapper);
