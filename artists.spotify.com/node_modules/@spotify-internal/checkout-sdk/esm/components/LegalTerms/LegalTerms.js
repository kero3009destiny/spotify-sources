var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import KlarnaLegalTerm from './KlarnaLegalTerm';
import { LegalTermsWrapper, LegalTermWrapper, LegalText } from './components';
import { FormCheckbox } from '@spotify-internal/encore-web';
export default function LegalTerms(_a) {
    var terms = _a.terms, onToggleCheckbox = _a.onToggleCheckbox;
    var getLegalText = function (html) {
        return React.createElement(LegalText, { dangerouslySetInnerHTML: { __html: html } });
    };
    var legalTerms = terms.map(function (term, index) {
        if (term.type === 'checkbox') {
            return (React.createElement(LegalTermWrapper, { key: index },
                React.createElement(FormCheckbox, { checked: !!term.consent, onChange: function () { return onToggleCheckbox(index); } }, getLegalText(term.html))));
        }
        else if (term.type === 'klarna') {
            return (React.createElement(LegalTermWrapper, { key: index },
                React.createElement(KlarnaLegalTerm, __assign({}, term))));
        }
        return (React.createElement(LegalTermWrapper, { key: index }, getLegalText(term.html)));
    });
    return (React.createElement(LegalTermsWrapper, { "data-testid": "legal-terms" }, legalTerms));
}
