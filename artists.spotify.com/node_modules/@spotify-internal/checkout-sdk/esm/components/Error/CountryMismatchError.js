var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React, { useContext, useEffect, useRef } from 'react';
import CheckoutContext from '../CheckoutProvider/CheckoutProvider';
import styled from 'styled-components';
var CountryMismatchContainer = styled.p(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  button {\n    border-color: transparent;\n    outline: none;\n    color: inherit;\n    text-decoration: underline;\n    font-weight: normal;\n\n    border-radius: 0;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 0;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: inherit;\n      text-decoration: underline;\n    }\n  }\n"], ["\n  button {\n    border-color: transparent;\n    outline: none;\n    color: inherit;\n    text-decoration: underline;\n    font-weight: normal;\n\n    border-radius: 0;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 0;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: inherit;\n      text-decoration: underline;\n    }\n  }\n"])));
export default function CountryMismatchError(_a) {
    var message = _a.message;
    var checkout = useContext(CheckoutContext.Context);
    var ref = useRef(null);
    useEffect(function () {
        if (ref && ref.current) {
            ref.current
                .querySelector('button')
                .addEventListener('click', function (e) {
                e.preventDefault();
                checkout.onOpenCountryPicker();
            });
        }
    }, [checkout.onOpenCountryPicker]);
    return (React.createElement(CountryMismatchContainer, { ref: ref, dangerouslySetInnerHTML: {
            __html: message,
        } }));
}
var templateObject_1;
