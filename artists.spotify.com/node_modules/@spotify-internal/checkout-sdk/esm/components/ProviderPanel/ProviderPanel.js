import React, { useContext } from 'react';
import ProviderForm from '../ProviderForm';
import LegalTerms from '../LegalTerms';
import CheckoutContext from '../CheckoutProvider';
import ThreeDS2 from '../ThreeDS2';
import { FormLayout } from '../../types';
export var hasPci = function (checkout) {
    var provider = checkout.activePaymentProvider;
    var hasPciLayout = provider &&
        provider.layout &&
        provider.layout.some(function (i) { return i.type === FormLayout.Pci; });
    return !!hasPciLayout;
};
export default function ProviderPanel() {
    var checkout = useContext(CheckoutContext.Context);
    var legalTerms = checkout.activePaymentProvider
        ? checkout.activePaymentProvider.legalTerms
        : [];
    return (React.createElement("div", null,
        React.createElement(ProviderForm, { shouldBreakRowsAtSmallerWidth: hasPci(checkout) }),
        React.createElement(LegalTerms, { terms: legalTerms, onToggleCheckbox: function (legalTermIndex) {
                return checkout.redux.checkoutActions.toggleLegalTermCheckbox(legalTermIndex);
            } }),
        React.createElement(ThreeDS2, null)));
}
