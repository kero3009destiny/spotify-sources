var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from 'react';
import styled from 'styled-components';
import tagHotjarError from '../../../lib/tracking/tagHotjarError';
var Error = styled.p.attrs({ className: 'field-error' })(templateObject_1 || (templateObject_1 = __makeTemplateObject([""], [""])));
export default function FieldLevelErrors(props) {
    if (props.errors.length > 0) {
        tagHotjarError();
    }
    return (React.createElement("div", { "data-testid": "field-level-errors" }, props.errors.map(function (message, id) {
        return (React.createElement(Error, { key: id },
            message,
            id !== props.errors.length - 1 ? ';' : ''));
    })));
}
var templateObject_1;
