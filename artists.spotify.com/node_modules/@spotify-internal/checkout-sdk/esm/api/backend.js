var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var _a;
import fetchRetry from '../lib/fetchRetry';
import { isSoundbetter, } from '../components/CheckoutProvider/environment';
export var BackendType;
(function (BackendType) {
    BackendType[BackendType["WEBSITE"] = 0] = "WEBSITE";
    BackendType[BackendType["SDK_SERVICE"] = 1] = "SDK_SERVICE";
})(BackendType || (BackendType = {}));
var API_PATH_MAPPING = (_a = {},
    _a[BackendType.WEBSITE] = '/checkout/sdk',
    _a[BackendType.SDK_SERVICE] = '/api/checkout-sdk-service',
    _a);
var responseToJson = function (response) { return __awaiter(void 0, void 0, void 0, function () {
    var ok, _a, e_1;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                ok = response.ok;
                _b.label = 1;
            case 1:
                _b.trys.push([1, 3, , 4]);
                _a = {};
                return [4, response.json()];
            case 2: return [2, (_a.body = _b.sent(),
                    _a.ok = ok,
                    _a)];
            case 3:
                e_1 = _b.sent();
                return [2, {
                        body: null,
                        ok: false,
                    }];
            case 4: return [2];
        }
    });
}); };
var getSdkServiceKey = function (originalKey) {
    var regEx = /checkout\[([a-zA-Z\-_]+)]/;
    var match = regEx.exec(originalKey);
    if (match === null) {
        return originalKey;
    }
    var keyKebabCase = match[1];
    var key = keyKebabCase.replace(/(?!^)([-_]\w)/g, function (g) {
        return g[1].toUpperCase();
    });
    return originalKey.replace("checkout[" + keyKebabCase + "]", "checkout." + key);
};
export var postRequest = function (additionalParameters, url, backendConfiguration, headers, data) {
    var e_2, _a, e_3, _b;
    var formData = new FormData();
    var isSdkService = backendConfiguration.backendType === BackendType.SDK_SERVICE;
    try {
        for (var _c = __values(Object.entries(data)), _d = _c.next(); !_d.done; _d = _c.next()) {
            var _e = __read(_d.value, 2), key = _e[0], value = _e[1];
            var formattedKey = isSdkService ? getSdkServiceKey(key) : key;
            formData.append(formattedKey, value);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        }
        finally { if (e_2) throw e_2.error; }
    }
    var urlWithParams = new URL(url);
    try {
        for (var _f = __values(Object.entries(additionalParameters)), _g = _f.next(); !_g.done; _g = _f.next()) {
            var _h = __read(_g.value, 2), key = _h[0], value = _h[1];
            urlWithParams.searchParams.set(key, value);
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return fetch(urlWithParams.href, {
        method: 'POST',
        body: formData,
        credentials: 'include',
        headers: headers,
    }).then(function (response) { return responseToJson(response); });
};
export var prepare = function (_a, backendConfiguration, data, locale) {
    var baseUrl = _a.baseUrl, additionalParameters = _a.additionalParameters, premium = _a.premium, headers = _a.headers;
    var endpoint;
    if (backendConfiguration.backendType === BackendType.SDK_SERVICE) {
        endpoint = premium ? 'prepare/premium' : 'prepare';
    }
    else {
        endpoint = premium ? 'prepare-premium' : 'prepare';
    }
    var apiPath = API_PATH_MAPPING[backendConfiguration.backendType];
    var marketPrefix = isSoundbetter() ? '' : "/" + locale;
    var url = "" + baseUrl + marketPrefix + apiPath + "/" + endpoint + "/";
    return postRequest(additionalParameters, url, backendConfiguration, headers, data);
};
export var getCheckoutData = function (_a, requestArgs, retryTimes) {
    var _b;
    var baseUrl = _a.baseUrl, additionalParameters = _a.additionalParameters, backendType = _a.backendType;
    if (retryTimes === void 0) { retryTimes = 5; }
    var apiPath = API_PATH_MAPPING[backendType];
    var paymentProviderIds = requestArgs.paymentProviderIds.join(',');
    var storedDetailsKey = backendType === BackendType.SDK_SERVICE
        ? 'showStoredPaymentDetails'
        : 'storedPaymentDetails';
    var searchParams = __assign(__assign({}, additionalParameters), (_b = { paymentProviderIds: paymentProviderIds, country: requestArgs.country, isPayment: requestArgs.isPayment ? 'true' : 'false' }, _b[storedDetailsKey] = requestArgs.storedPaymentDetails ? 'true' : 'false', _b.clientId = requestArgs.clientId.toString(), _b));
    if (requestArgs.hidePostal) {
        searchParams.showPostal = 'false';
    }
    var params = new URLSearchParams(searchParams);
    var marketPrefix = isSoundbetter() ? '' : "/" + requestArgs.locale;
    return fetchRetry("" + baseUrl + marketPrefix + apiPath + "/data/?" + params, {
        method: 'GET',
        credentials: 'include',
    }, retryTimes, 1000, true).then(function (response) { return responseToJson(response); });
};
