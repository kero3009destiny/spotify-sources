var PciMessenger = (function () {
    function PciMessenger(getIframe, messageHandler) {
        this.getIframe = getIframe;
        this.messageHandler = messageHandler;
        this.boundReceiveMessage = this.receiveMessage.bind(this);
    }
    PciMessenger.prototype.addMessageListener = function () {
        this.removeMessageListener();
        var parser = document.createElement('a');
        parser.setAttribute('href', this.getIframe().getAttribute('src'));
        var protocol = parser.protocol, hostname = parser.hostname, port = parser.port;
        var normalizedPort = ['80', '443'].indexOf(port) > -1 ? '' : port;
        var portSuffix = normalizedPort !== '' ? ":" + normalizedPort : '';
        this.origin = protocol + "//" + hostname + portSuffix;
        window.addEventListener('message', this.boundReceiveMessage);
    };
    PciMessenger.prototype.sendRoute = function (route, data) {
        if (data === void 0) { data = {}; }
        return this.send({ route: route, data: data });
    };
    PciMessenger.prototype.removeMessageListener = function () {
        window.removeEventListener('message', this.boundReceiveMessage);
    };
    PciMessenger.prototype.receiveMessage = function (e) {
        if (!this.isValidMessageEvent(e) || !this.messageHandler) {
            return;
        }
        try {
            var message = JSON.parse(e.data);
            if (typeof message.route === 'string') {
                this.dispatch(message);
            }
        }
        catch (_) {
        }
    };
    PciMessenger.prototype.dispatch = function (message) {
        this.messageHandler(message);
    };
    PciMessenger.prototype.isValidMessageEvent = function (e) {
        if (this.origin && e.origin !== this.origin) {
            return false;
        }
        if (e.source !== this.getIframe().contentWindow) {
            return false;
        }
        return true;
    };
    PciMessenger.prototype.send = function (msg) {
        var iframe = this.getIframe();
        if (iframe && iframe.contentWindow && this.origin) {
            iframe.contentWindow.postMessage(JSON.stringify(msg), this.origin);
        }
    };
    return PciMessenger;
}());
export default PciMessenger;
