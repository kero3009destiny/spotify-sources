var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export var checkoutPaymentViewEvent = function (event) { return (__assign(__assign({}, event), { eventName: 'paymentView', eventLabel: event.eventParams.payment_provider })); };
export var checkoutPaymentActionEvent = function (event) { return (__assign(__assign({}, event), { eventName: 'submitClick', eventLabel: event.eventParams.payment_provider })); };
export var paymentErrorMessageEvent = function (event) { return (__assign(__assign({}, event), { eventName: 'PaymentErrorMessage', eventLabel: event.eventParams.code, eventParams: {
        message: event.eventParams.message,
        type: event.eventParams.type,
    } })); };
export default {
    CheckoutPaymentView: checkoutPaymentViewEvent,
    CheckoutPaymentAction: checkoutPaymentActionEvent,
    PaymentErrorMessage: paymentErrorMessageEvent,
};
