import { InputValidationType } from '../types';
export var getEmailValidationRule = function (errorMessage) {
    return {
        type: InputValidationType.Regex,
        value: '^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$',
        errorMessage: errorMessage,
    };
};
export var validateRule = function (rule, value, defaultErrorMessage) {
    if (defaultErrorMessage === void 0) { defaultErrorMessage = ''; }
    switch (rule.type) {
        case InputValidationType.Regex: {
            var regex = new RegExp(String(rule.value));
            if (!regex.test(value)) {
                return rule.errorMessage || defaultErrorMessage;
            }
            break;
        }
        case InputValidationType.MinLength:
            if (value.length < rule.value) {
                return rule.errorMessage || defaultErrorMessage;
            }
            break;
        case InputValidationType.MaxLength:
            if (value.length > rule.value) {
                return rule.errorMessage || defaultErrorMessage;
            }
            break;
        case InputValidationType.Required:
            if (!value.length && rule.value) {
                return rule.errorMessage || defaultErrorMessage;
            }
            break;
        default:
            return '';
    }
    return '';
};
