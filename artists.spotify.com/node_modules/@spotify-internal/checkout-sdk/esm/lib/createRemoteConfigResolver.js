var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Resolver } from '@spotify-internal/remote-config-resolver';
export var properties = {
    version: '1.0.6',
    properties: [
        {
            name: 'dummy_property',
            description: 'A dummy property',
            intSpec: {
                default: 12,
                lower: 4,
                upper: 87,
            },
        },
        {
            name: 'dummy_property2',
            description: 'Another dummy property',
            intSpec: {
                default: 20,
                lower: 10,
                upper: 100,
            },
        },
        {
            name: 'should_attempt_pci_reload',
            description: 'Indicates whether the PCI should be reloaded in case of failure',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_sca_interstitial',
            description: 'Indicates whether the SDK should show 3ds2 interstitial modal',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_sca_cta_module_text',
            description: 'Indicates whether the CTA module should display the SCA message',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_paypal_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for PayPal payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_adyen_braintree_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Adyen/Braintree card payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_digitalriver_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for DigitalRiver card payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_dlocal_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Dlocal payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_address_collection_sdk_for_us',
            description: 'Indicates whether Checkout SDK should use the address-collection-sdk',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_adyen_redirect_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Adyen redirect payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_boku_redirect_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Adyen redirect payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_boleto_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Boleto payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_klarna_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Klarna payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_ideal_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for iDeal payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_paytm_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for payTM payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_fortumo_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Fortumo payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_cards_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Generic Cards payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_stored_details_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for Stored Details payments',
            boolSpec: {
                default: false,
            },
        },
        {
            name: 'enable_pse_in_checkout_sdk_service',
            description: 'Indicates whether Checkout SDK service should be used for PSE payments',
            boolSpec: {
                default: false,
            },
        },
    ],
};
var clientId = 'checkout-sdk';
export default (function (options) {
    return new Resolver(__assign({ clientId: clientId,
        properties: properties }, options));
});
