import getOAuthServerMetadata from '../config/getOAuthServerMetadata';
const buildAuthorizationUrl = (authorizeRequest, authServerConfig) => {
    const { authorizationEndpoint } = getOAuthServerMetadata(authServerConfig);
    const url = new URL(authorizationEndpoint);
    url.searchParams.append('response_type', authorizeRequest.responseType);
    url.searchParams.append('client_id', authorizeRequest.clientId);
    url.searchParams.append('scope', authorizeRequest.scopes.join(' '));
    url.searchParams.append('redirect_uri', authorizeRequest.redirectUri);
    if (authorizeRequest.codeChallenge) {
        url.searchParams.append('code_challenge', authorizeRequest.codeChallenge);
        url.searchParams.append('code_challenge_method', 'S256');
    }
    if (authorizeRequest.state) {
        url.searchParams.append('state', authorizeRequest.state);
    }
    if (authorizeRequest.responseMode) {
        url.searchParams.append('response_mode', authorizeRequest.responseMode);
    }
    if (authorizeRequest.prompt) {
        url.searchParams.append('prompt', authorizeRequest.prompt);
    }
    return url.toString();
};
export default buildAuthorizationUrl;
//# sourceMappingURL=buildAuthorizationUrl.js.map