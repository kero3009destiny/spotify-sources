import { createRef, useEffect, useRef } from 'react';
export function useTrigger(_ref) {
  var overlay = _ref.overlay,
      onShow = _ref.onShow,
      onHide = _ref.onHide,
      withPortal = _ref.withPortal;
  // this is needed no matter what in order to see if clicks are happening inside the trigger
  var triggerRef = useRef(null); // this is only needed if we are portaling the overlay outside the trigger

  var overlayRef = withPortal ? /*#__PURE__*/createRef() : null;
  useEffect(function () {
    var onWindowEvent = function onWindowEvent(e) {
      if (overlay) {
        var _triggerRef$current, _overlayRef$current;

        if (e.target instanceof Node && !((_triggerRef$current = triggerRef.current) == null ? void 0 : _triggerRef$current.contains(e.target)) && !(overlayRef == null ? void 0 : (_overlayRef$current = overlayRef.current) == null ? void 0 : _overlayRef$current.contains(e.target))) {
          onHide(e);
        }
      }
    };

    window.addEventListener('click', onWindowEvent, true);
    return function () {
      window.removeEventListener('click', onWindowEvent, true);
    };
  });

  var onClick = function onClick(e) {
    if (overlay) {
      onHide(e);
    } else {
      onShow(e);
    }
  };

  var onKeyDown = function onKeyDown(e) {
    var key = e.which;

    if (!overlay) {
      /* if up or down arrow is pressed, open overlay */
      if (key === 40 || key === 38) {
        onShow(e);
      }
    }
  };

  return {
    triggerRef: triggerRef,
    overlayRef: overlayRef,
    onClick: onClick,
    onKeyDown: onKeyDown
  };
}