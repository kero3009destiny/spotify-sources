import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { cloneElement, isValidElement, useEffect } from 'react';
import styled from 'styled-components';
import { useTrigger } from "../../hooks/useTrigger";
import { overlayDirections } from "../../styles/mixins/overlays";
import { OverlayPortal } from "../OverlayPortal";
import { Overlay } from "../OverlayTrigger/Overlay";
var PopoverTriggerContainer = styled.div.withConfig({
  displayName: "PopoverTrigger__PopoverTriggerContainer",
  componentId: "sc-1i9b5v-0"
})(["display:inline-flex;position:relative;"]);
var TriggerContainer = styled.div.withConfig({
  displayName: "PopoverTrigger__TriggerContainer",
  componentId: "sc-1i9b5v-1"
})(["display:inline-flex;"]);

function PopoverTriggerComponent(_ref) {
  var children = _ref.children,
      overlay = _ref.overlay,
      _ref$onHide = _ref.onHide,
      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,
      _ref$onShow = _ref.onShow,
      onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,
      hideCloseButton = _ref.hideCloseButton,
      withPortal = _ref.withPortal,
      placement = _ref.placement,
      props = _objectWithoutProperties(_ref, ["children", "overlay", "onHide", "onShow", "hideCloseButton", "withPortal", "placement"]);

  var _useTrigger = useTrigger({
    overlay: overlay,
    onShow: onShow,
    onHide: onHide,
    withPortal: withPortal
  }),
      triggerRef = _useTrigger.triggerRef,
      overlayRef = _useTrigger.overlayRef,
      onClick = _useTrigger.onClick;
  /* if escape key is pressed, execute onClose */


  var onKeydown = function onKeydown(event) {
    if (event.keyCode === 27) {
      onHide(event);
    }
  };

  useEffect(function () {
    /* add event listener for escape key press */
    window.addEventListener('keydown', onKeydown, true);
    /* clean up */

    return function () {
      window.removeEventListener('keydown', onKeydown, true);
    };
  });
  var clonedOverlay = null;

  if (overlay && typeof overlay === 'object' && /*#__PURE__*/isValidElement(overlay)) {
    clonedOverlay = /*#__PURE__*/cloneElement(overlay, {
      onClose: hideCloseButton ? undefined : onClick
    });
  }

  return /*#__PURE__*/React.createElement(PopoverTriggerContainer, Object.assign({
    ref: triggerRef
  }, props), /*#__PURE__*/React.createElement(TriggerContainer, {
    onClick: onClick
  }, children), overlay && (withPortal && typeof triggerRef !== 'function' && triggerRef.current ? /*#__PURE__*/React.createElement(OverlayPortal, {
    overlayPosition: triggerRef.current.getBoundingClientRect(),
    closeOverlay: onHide
  }, /*#__PURE__*/React.createElement(Overlay, {
    ref: overlayRef,
    placement: placement
  }, clonedOverlay)) : /*#__PURE__*/React.createElement(Overlay, {
    ref: overlayRef,
    placement: placement
  }, clonedOverlay)));
} // export placement options


var popoverTriggerHelpers = _objectSpread({}, overlayDirections);
/**
* **PopoverTrigger** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/PopoverTrigger) | [Storybook](https://encore-web.spotify.net/?path=/story/components-popover-popovertrigger--default) | [Encore](https://encore.spotify.net/web/components/non-visual?format=figma-figma#popovertrigger) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=613:48) |
*
* The trigger that launches a Popover, upon user interaction.
*
* @example
* export const Default = () => (
*  <PopoverTrigger
*    placement={PopoverTrigger.rightBottom}
*    overlay={
*      <Popover popoverTitle="Title" arrow={Popover.leftTop}>
*        Aenean lacinia bibendum nulla sed consectetur. Cras justo.
*      </Popover>
*    }
*  >
*    <ButtonIcon>
*      <IconHelpAlt iconSize={32} aria-label="Help" />
*    </ButtonIcon>
*  </PopoverTrigger>
*);
*
*/


export var PopoverTrigger = Object.assign(PopoverTriggerComponent, popoverTriggerHelpers);
export default PopoverTrigger;