import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { green, greenLight, spacer8, spacer12, white } from '@spotify-internal/encore-foundation';
import styled, { css, ThemeProvider } from 'styled-components';
import { overlay, rootStyle, typeStyleBody2 } from "../../styles";

var isDarkTheme = function isDarkTheme(props) {
  var _props$theme;

  return ((_props$theme = props.theme) == null ? void 0 : _props$theme.tooltip) === 'dark';
};

var TooltipWrapper = styled.div.withConfig({
  displayName: "Tooltip__TooltipWrapper",
  componentId: "ljwgeo-0"
})(["", ";", ";", ";padding:", " ", ";text-transform:initial;", ";"], rootStyle(), function (props) {
  return overlay({
    maxWidth: '240px',
    isDarkTheme: isDarkTheme(props)
  });
}, typeStyleBody2(), spacer8, spacer12, function (props) {
  return isDarkTheme(props) && css(["a[href]:not([class]){color:", ";&:hover{color:", ";}&:active,&:focus{color:", ";}}"], white, greenLight, green);
});

function TooltipComponent(_ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["theme"]);

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(TooltipWrapper, Object.assign({
    role: "tooltip"
  }, props)));
}

var tooltipHelpers = {
  darkTheme: {
    tooltip: 'dark'
  }
};
/**
* **Tooltip** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/Tooltip) | [Storybook](https://encore-web.spotify.net/?path=/story/components-tooltip--default) | [Encore](https://encore.spotify.net/web/components/tooltip) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=0:1544) |
*
* The Tooltip displays a text label when users hover over or focus on an element.
*
* @example
* export const Default = () => (
*  <Tooltip>Aenean lacinia bibendum nulla sed consectetur. Cras justo.</Tooltip>
*);
*
*/

export var Tooltip = Object.assign(TooltipComponent, tooltipHelpers);
export default Tooltip;