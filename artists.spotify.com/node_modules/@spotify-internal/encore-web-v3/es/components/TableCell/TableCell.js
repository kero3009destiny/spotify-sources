import { gray10, gray50, gray70, screenMdMin, screenSmMax, screenSmMin, screenXsMax, spacer4, spacer12, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { fontWeightBold, rootStyle, textOverflow, typeStyleBody2 } from "../../styles";
import { Button } from "../ButtonIcon/Button";
import Svg from "../Icon/Svg";
import Overlay from "../OverlayTrigger/Overlay";
import Trigger from "../OverlayTrigger/Trigger";
export var TableCellElement = styled.td.withConfig({
  displayName: "TableCell__TableCellElement",
  componentId: "sc-1do596v-0"
})(["", ";", ";font-feature-settings:", ";font-weight:", ";text-align:", ";vertical-align:middle;padding:", ";", ";&:first-child{@media (max-width:", "){padding-left:", ";}}&:last-child{@media (max-width:", "){padding-right:", ";}}", ";> ", ",> ", ",> ", " span:not(", ") ", "{position:relative;top:3px;}"], rootStyle(), typeStyleBody2(), function (props) {
  return props.numerical ? "'tnum'" : undefined;
}, function (props) {
  return props.highlight ? fontWeightBold : undefined;
}, function (props) {
  return props.align;
}, function (props) {
  return props.condensed ? 0 : spacer12;
}, function (props) {
  return props.theme.tableCell === 'dark' ? css(["color:", ";"], props.highlight ? white : gray70) : "\n      color: ".concat(props.highlight ? gray10 : gray50, ";\n  ");
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, function (props) {
  return props.truncate && css(["", ";max-width:0;width:100%;@media (min-width:", "){max-width:150px;width:auto;}@media (min-width:", ") and (max-width:", "){max-width:85px;width:auto;}"], textOverflow(), screenMdMin, screenSmMin, screenSmMax);
},
/* sc-selector */
Svg,
/* sc-selector */
Button,
/* sc-selector */
Trigger,
/* sc-selector */
Overlay, Button);