import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { black, black50, black70, gray10, gray50, gray70, gray95, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { buttonLinkReset, focusBottomBorder, rootStyle } from "../../styles";
export var Button = styled( /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$component = _ref.component,
      Component = _ref$component === void 0 ? 'button' : _ref$component,
      isUsingKeyboard = _ref.isUsingKeyboard,
      props = _objectWithoutProperties(_ref, ["component", "isUsingKeyboard"]);

  return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {
    ref: ref
  }));
})).withConfig({
  displayName: "Button",
  componentId: "x6fcl5-0"
})(["", ";", ";cursor:inherit;display:inline-flex;", ""], rootStyle(), function (props) {
  return (!props.component || props.component === 'button') && css(["", ";"], buttonLinkReset());
}, function (_ref2) {
  var theme = _ref2.theme,
      isUsingKeyboard = _ref2.isUsingKeyboard;
  var isDarkTheme = (theme == null ? void 0 : theme.buttonIcon) === 'dark';
  var color = isDarkTheme ? gray50 : black50;
  var hoverColor = isDarkTheme ? gray95 : gray10;
  var activeColor = isDarkTheme ? gray70 : black70;
  return css(["color:", ";&:hover{color:", ";}&:active{color:", ";}", ";"], color, hoverColor, activeColor, focusBottomBorder(isDarkTheme, 0, isUsingKeyboard, white, black));
});