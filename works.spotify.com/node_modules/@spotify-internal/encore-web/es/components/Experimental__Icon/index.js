import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["iconSize", "semanticColor", "color"];
import React from 'react';
import { colorWarning } from "../../deprecationWarnings";
import Svg from "./Svg";
// return the highest possible size that is <= the requested size,
// we sort asc to return the smallest size if requested value < smallest size
export var findClosestGlyphAvailable = function findClosestGlyphAvailable(glyphList, val) {
  return glyphList.sort(function (a, b) {
    return a.size - b.size;
  }).reduce(function (prev, current) {
    if (current.size <= val && current.size > prev.size) {
      return current;
    }

    return prev;
  });
};
export var Experimental__Icon = function Experimental__Icon(_ref) {
  var _ref$iconSize = _ref.iconSize,
      iconSize = _ref$iconSize === void 0 ? 24 : _ref$iconSize,
      semanticColor = _ref.semanticColor,
      color = _ref.color,
      props = _objectWithoutProperties(_ref, _excluded);

  colorWarning({
    color: color
  });
  return /*#__PURE__*/React.createElement(Svg, Object.assign({
    role: "img",
    height: iconSize,
    width: iconSize,
    iconSize: iconSize,
    iconColor: semanticColor
  }, props));
};
/**
* **Experimental__Icon** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/Experimental__Icon) | [Storybook](https://encore-web.spotify.net/?path=/story/components-icon-library-experimental-set--all-icons-story) | [Encore](https://encore.spotify.net/web/components/icon?format=figma-figma) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=8300:9156) |
*
* null
*
* @example
* () => {
*  const iconSizeOption = select('Icon size', [16, 24, 32, 48, 64], 24);
*  const semanticColorOption = getSemanticColorKnob({
*    types: ['text', 'decorative'],
*    initialValue: 'textBase',
*    displayOption: 'select',
*  });
*  return <IconHeadphones iconSize={iconSizeOption} semanticColor={semanticColorOption} />;
*};
*
*/

export default Experimental__Icon;