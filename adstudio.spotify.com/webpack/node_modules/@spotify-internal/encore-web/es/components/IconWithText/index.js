import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["icon", "iconSize", "semanticColor", "children", "color"];
import React from 'react';
import { spacer16 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { colorWarning } from "../../deprecationWarnings";
import { cssColorValue } from "../../styles";
import ExperimentalSvg from "../Experimental__Icon/Svg";
import Svg from "../Icon/Svg";
var Container = styled.div.attrs(function (props) {
  return {
    spacer: props.spacer || spacer16
  };
}).withConfig({
  displayName: "IconWithText__Container",
  componentId: "xkmm7u-0"
})(["display:inline-flex;align-items:center;flex-direction:", ";", " ", ",", "{flex-shrink:0;margin-right:", ";margin-left:", ";[dir='rtl'] &{margin-right:", ";margin-left:", ";}}"], function (props) {
  return props.rightAlign ? undefined : 'row-reverse';
}, function (props) {
  return props.semanticColor && css(["color:", ";"], cssColorValue(props.semanticColor));
}, Svg, ExperimentalSvg, function (props) {
  return props.rightAlign ? undefined : props.spacer;
}, function (props) {
  return props.rightAlign ? props.spacer : undefined;
}, function (props) {
  return props.rightAlign ? props.spacer : 'unset';
}, function (props) {
  return props.rightAlign ? 'unset' : props.spacer;
});
export function IconWithText(_ref) {
  var icon = _ref.icon,
      iconSize = _ref.iconSize,
      semanticColor = _ref.semanticColor,
      children = _ref.children,
      color = _ref.color,
      props = _objectWithoutProperties(_ref, _excluded);

  colorWarning({
    color: color
  });
  var Icon = icon;
  return /*#__PURE__*/React.createElement(Container, Object.assign({
    semanticColor: semanticColor
  }, props), children, Icon && /*#__PURE__*/React.createElement(Icon, {
    semanticColor: semanticColor,
    iconSize: iconSize,
    "aria-hidden": "true"
  }));
}
/**
* **IconWithText** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/IconWithText) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-icon-iconwithtext--default) | [Encore](https://encore.spotify.net/web/components/icon?format=figma-figma#iconwithtext) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=7566:7313) |
*
* This component allows you easily place an icon and text together.
*
* @example
* () => (
*  <IconWithText icon={IconHome}>
*    <Type variant="viola">Home</Type>
*  </IconWithText>
*);
*
*/

export default IconWithText;