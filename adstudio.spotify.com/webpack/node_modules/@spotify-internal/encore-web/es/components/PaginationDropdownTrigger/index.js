import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["placement", "overlay", "onShow", "onHide"];
import React, { cloneElement, isValidElement } from 'react';
import { useTrigger } from "../../hooks/useTrigger";
import Trigger from "./Trigger";

function PaginationDropdownTriggerComponent(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'top' : _ref$placement,
      overlay = _ref.overlay,
      _ref$onShow = _ref.onShow,
      onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,
      _ref$onHide = _ref.onHide,
      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useTrigger = useTrigger({
    overlay: overlay,
    onShow: onShow,
    onHide: onHide
  }),
      triggerRef = _useTrigger.triggerRef,
      onClick = _useTrigger.onClick,
      onKeyDown = _useTrigger.onKeyDown;

  return /*#__PURE__*/React.createElement(Trigger, Object.assign({
    ref: triggerRef,
    overlay: overlay && typeof overlay === 'object' && /*#__PURE__*/isValidElement(overlay) && /*#__PURE__*/cloneElement(overlay),
    role: "presentation",
    placement: placement,
    onClick: onClick,
    onKeyDown: onKeyDown
  }, props));
}

var paginationDropdownTriggerHelpers = {
  top: 'top',
  bottom: 'bottom'
};
/**
* **PaginationDropdownTrigger** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/PaginationDropdownTrigger) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-pagination-paginationdropdowntrigger--default) | [Encore](https://encore.spotify.net/web/components/pagination?format=figma-figma#paginationdropdown) | 
*
* PaginationDropdownTrigger is the trigger to launch the PaginationDropdownList popover
*
* @example
* () => {
*  const items = [{ rowCount: 10 }, { rowCount: 20 }, { rowCount: 30 }];
*
*  return (
*    <PaginationDropdownTrigger
*      overlay={
*        <PaginationDropdownList>
*          {items.map((item, index) => (
*            <PaginationDropdownItem key={index}>
*              <PaginationDropdownLink href="#" selected={index === 0}>
*                {item.rowCount}
*              </PaginationDropdownLink>
*            </PaginationDropdownItem>
*          ))}
*        </PaginationDropdownList>
*      }
*      placement={PaginationDropdownTrigger.bottom}
*    >
*      <PaginationDropdown>10</PaginationDropdown>
*    </PaginationDropdownTrigger>
*  );
*};
*
*/

export var PaginationDropdownTrigger = Object.assign(PaginationDropdownTriggerComponent, paginationDropdownTriggerHelpers);
export default PaginationDropdownTrigger;