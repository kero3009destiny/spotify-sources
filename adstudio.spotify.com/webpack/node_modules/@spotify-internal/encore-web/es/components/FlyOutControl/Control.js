import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["component", "isHover", "isFocus"];
import React from 'react';
import { spacer8 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { buttonLinkReset, defaultTheme, rootStyle, transitionFade } from "../../styles";
import { flyoutIconSizeDesktop } from "../FlyOut/variables";
export var flyOutControlDefaultSet = 'invertedDark';
var hoverAndFocusStyles = css(["color:var(--text-subdued,", ");"], defaultTheme[flyOutControlDefaultSet].text.subdued); // eslint-disable-next-line prefer-arrow-callback

export var Control = styled(function ControlComponent(_ref) {
  var _ref$component = _ref.component,
      Component = _ref$component === void 0 ? 'button' : _ref$component,
      isHover = _ref.isHover,
      isFocus = _ref.isFocus,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Component, props);
}).withConfig({
  displayName: "Control",
  componentId: "sc-1jb724l-0"
})(["", ";color:var(--text-base,", ");display:inline-block;height:", ";outline:none;transition:color ", ";&:hover,&:focus{", "}", " & + &{margin-left:", ";}button&{", ";}"], rootStyle(), defaultTheme[flyOutControlDefaultSet].text.base, flyoutIconSizeDesktop, transitionFade, hoverAndFocusStyles, function (props) {
  return props.isHover || props.isFocus ? hoverAndFocusStyles : null;
}, spacer8, buttonLinkReset());