import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["onIncrement", "onDecrement", "children", "theme"];
import React from 'react';
import { deprecatedPropWarning } from "../../deprecationWarnings";
import { ButtonTertiary } from "../ButtonTertiary";
import { IconChevronLeft } from "../Icon/IconChevronLeft";
import { IconChevronRight } from "../Icon/IconChevronRight";
import { Container } from "./Container";
import { Label } from "./Label";
export var PaginationControls = function PaginationControls(_ref) {
  var onIncrement = _ref.onIncrement,
      onDecrement = _ref.onDecrement,
      children = _ref.children,
      theme = _ref.theme,
      props = _objectWithoutProperties(_ref, _excluded);

  if (theme) {
    deprecatedPropWarning('theme', 'This component is intended to inherit its parentâ€™s color set or color.');
  }

  return /*#__PURE__*/React.createElement(Container, props, children && /*#__PURE__*/React.createElement(Label, null, children), /*#__PURE__*/React.createElement(ButtonTertiary, {
    "aria-label": "Back",
    onClick: onDecrement,
    disabled: typeof onDecrement === 'undefined',
    iconOnly: IconChevronLeft,
    buttonSize: "sm",
    condensedAll: true
  }), /*#__PURE__*/React.createElement(ButtonTertiary, {
    "aria-label": "Forward",
    onClick: onIncrement,
    disabled: typeof onIncrement === 'undefined',
    iconOnly: IconChevronRight,
    buttonSize: "sm",
    condensedAll: true
  }));
};
/**
* **PaginationControls** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/PaginationControls) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-pagination-paginationcontrols--default) | [Encore](https://encore.spotify.net/web/components/pagination?format=figma-figma#paginationcontrols) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=608:35) |
*
* PaginationControls navigate between pages of data, by showing left and right chevron buttons for paging backward or forward through data, with the option for descriptive text shown inline.
*
* @example
* () => {
*  const rowTotal = 100;
*  const [rowFirst, updateRowFirst] = useState(1);
*  const [rowLast, updateRowLast] = useState(10);
*
*  const onIncrement = () => {
*    updateRowFirst(rowFirst + 10);
*    updateRowLast(rowLast + 10);
*  };
*
*  const onDecrement = () => {
*    updateRowFirst(rowFirst - 10);
*    updateRowLast(rowLast - 10);
*  };
*
*  return (
*    <PaginationControls
*      onIncrement={rowLast < rowTotal ? () => onIncrement() : undefined}
*      onDecrement={rowFirst > 1 ? () => onDecrement() : undefined}
*    >
*      {rowFirst}-{rowLast} of {rowTotal}
*    </PaginationControls>
*  );
*};
*
*/

export default PaginationControls;