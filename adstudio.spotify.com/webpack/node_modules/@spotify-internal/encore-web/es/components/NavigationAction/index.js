import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["active", "disabled", "isHover", "isFocus", "component", "className", "colorSet", "theme"];
import React, { useContext } from 'react';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { renamedPropWarning } from "../../deprecationWarnings";
import { addColorSet } from "../../styles";
import { Link } from "./Link";
export var NavigationAction = function NavigationAction(_ref) {
  var active = _ref.active,
      disabled = _ref.disabled,
      isHover = _ref.isHover,
      isFocus = _ref.isFocus,
      _ref$component = _ref.component,
      component = _ref$component === void 0 ? 'a' : _ref$component,
      className = _ref.className,
      _ref$colorSet = _ref.colorSet,
      colorSet = _ref$colorSet === void 0 ? 'brightAccent' : _ref$colorSet,
      theme = _ref.theme,
      restProps = _objectWithoutProperties(_ref, _excluded);

  if (theme) {
    renamedPropWarning('theme', 'colorSet');
  }

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(Link, Object.assign({}, restProps, {
    className: addColorSet(colorSet, className),
    active: active,
    component: component,
    disabled: disabled,
    isHover: isHover,
    isFocus: isFocus,
    isUsingKeyboard: isUsingKeyboard,
    "aria-disabled": disabled,
    rel: restProps.href ? 'noopener noreferrer' : undefined,
    "aria-current": active ? 'page' : undefined
  }));
};
/**
* **NavigationAction** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/NavigationAction) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-navigation-navigationaction--default) | [Encore](https://encore.spotify.net/web/components/navigation?format=figma-figma) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=5384:16) |
*
* NavigationAction is a primary action button that fills it's container width and is used at the bottom of the Navigation component.
*
* @example
* () => (
*  <NavigationAction target="_blank" title="Start your first release whenever you're ready">
*    <IconPlus />
*  </NavigationAction>
*);
*
*/

export default NavigationAction;