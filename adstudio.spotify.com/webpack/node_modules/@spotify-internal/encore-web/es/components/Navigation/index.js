import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "colorSet", "header", "footer", "className", "theme"];
import React from 'react';
import { renamedPropWarning } from "../../deprecationWarnings";
import { addColorSet } from "../../styles";
import { LogoSpotify } from "../LogoSpotify";
import { Body } from "./Body";
import { Footer } from "./Footer";
import { Header } from "./Header";
import { Nav } from "./Nav";
export var Navigation = function Navigation(_ref) {
  var children = _ref.children,
      _ref$colorSet = _ref.colorSet,
      colorSet = _ref$colorSet === void 0 ? 'mutedAccent' : _ref$colorSet,
      header = _ref.header,
      footer = _ref.footer,
      className = _ref.className,
      theme = _ref.theme,
      props = _objectWithoutProperties(_ref, _excluded);

  if (theme) {
    renamedPropWarning('theme', 'colorSet');
  }

  return /*#__PURE__*/React.createElement(Nav, Object.assign({
    className: addColorSet(colorSet, className)
  }, props), header && /*#__PURE__*/React.createElement(Header, null, header), /*#__PURE__*/React.createElement(Body, null, children), /*#__PURE__*/React.createElement(Footer, null, footer ? /*#__PURE__*/React.createElement(React.Fragment, null, footer) : /*#__PURE__*/React.createElement(LogoSpotify, {
    height: "24",
    semanticColor: "textSubdued",
    "aria-label": "Spotify"
  })));
};
/**
* **Navigation** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/Navigation) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-navigation--default) | [Encore](https://encore.spotify.net/web/components/navigation?format=figma-figma) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=889:71) |
*
* A vertical side navigation used for text links. It helps users maintain a sense of context throughout an application, as well as providing a consistent pattern to navigate between sections.
*
* @example
* () => (
*  <Navigation
*    header={
*      <Type as="h3" variant="celloCanon">
*        Heading
*      </Type>
*    }
*  >
*    <NavigationList>
*      <NavigationListTitle>Group title</NavigationListTitle>
*
*      <NavigationListItem active target="_blank">
*        Active link
*      </NavigationListItem>
*      <NavigationListItem>Default link</NavigationListItem>
*      <NavigationListItem disabled>Disabled link</NavigationListItem>
*    </NavigationList>
*  </Navigation>
*);
*
*/

export default Navigation;