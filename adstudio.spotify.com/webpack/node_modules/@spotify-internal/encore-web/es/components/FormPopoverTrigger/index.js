import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["theme", "aria-label", "aria-labelledby"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React from 'react';
import { screenXsMax, spacer4 } from '@spotify-internal/encore-foundation';
import styled from 'styled-components';
import { deprecatedPropWarning } from "../../deprecationWarnings";
import { overlayDirections } from "../../styles/mixins/overlays";
import { ButtonTertiary } from "../ButtonTertiary";
import { IconHelpAlt } from "../Icon/IconHelpAlt";
import { PopoverTrigger } from "../PopoverTrigger";
var StyledButtonTertiary = styled(ButtonTertiary).withConfig({
  displayName: "FormPopoverTrigger__StyledButtonTertiary",
  componentId: "sc-7ymulv-0"
})(["@media (max-width:", "){padding:", ";margin:-", ";}"], screenXsMax, spacer4, spacer4);

var FormPopoverTriggerComponent = function FormPopoverTriggerComponent(_ref) {
  var theme = _ref.theme,
      ariaLabel = _ref['aria-label'],
      ariaLabelledby = _ref['aria-labelledby'],
      props = _objectWithoutProperties(_ref, _excluded);

  if (theme) {
    deprecatedPropWarning('theme', 'This component is intended to inherit its parentâ€™s color set or color.');
  }

  return /*#__PURE__*/React.createElement(PopoverTrigger, props, /*#__PURE__*/React.createElement(StyledButtonTertiary, {
    type: "button",
    condensedAll: true,
    buttonSize: "sm",
    iconOnly: IconHelpAlt,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  }));
};

var formPopoverTriggerHelpers = _objectSpread({}, overlayDirections);
/**
* **FormPopoverTrigger** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/FormPopoverTrigger) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-form-formpopovertrigger--default) | [Encore](https://encore.spotify.net/web/components/form?format=figma-figma#formpopovertrigger) | 
*
* The FormPopoverTrigger will trigger a Popover from a form element such as a specific form field, to provide additional context.
*
* @example
* () => (
*  <FormPopoverTrigger
*    placement={FormPopoverTrigger.bottomRight}
*    overlay={
*      <Popover arrow={Popover.topLeft} popoverTitle="Title">
*        Aenean lacinia bibendum.
*      </Popover>
*    }
*    aria-label="Show more information"
*  />
*);
*
*/


export var FormPopoverTrigger = Object.assign(FormPopoverTriggerComponent, formPopoverTriggerHelpers);
export default FormPopoverTrigger;