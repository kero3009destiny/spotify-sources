import React, { useContext } from 'react';
import { EncoreContext, encoreContextKeyword, encoreContextStatus, getStatus } from "../../../../contexts/EncoreContext";
import { Experimental__Icon, findClosestGlyphAvailable } from "../../";
export function Experimental__IconCode(props) {
  var iconList = [{
    "size": 16,
    "svgContent": "<path fill-rule=\"evenodd\" d=\"M12.862 8l-2.097-2.097.471-.472L13.805 8l-2.569 2.568-.471-.472L12.862 8zM4.764 5.43l.472.472L3.138 8l2.098 2.097-.472.472L2.195 8l2.569-2.57zm1.598 5.435l2.667-6 .609.27-2.667 6-.609-.27z\" clip-rule=\"evenodd\"/>"
  }, {
    "size": 24,
    "svgContent": "<path fill-rule=\"evenodd\" d=\"M19.293 12l-3.146-3.146.707-.708L20.707 12l-3.853 3.854-.707-.708L19.293 12zM7.146 8.146l.708.707L4.707 12l3.147 3.146-.708.707L3.293 12l3.853-3.854zm2.397 8.151l4-9 .914.406-4 9-.914-.406z\" clip-rule=\"evenodd\"/>"
  }];
  var iconListRedraw = [{
    "size": 16,
    "svgContent": "<path d=\"M0 1.75A.75.75 0 01.75 1h14.5a.75.75 0 01.75.75v13.5a.75.75 0 01-.75.75H.75a.75.75 0 01-.75-.75V1.75zm1.5.75v12h13v-12h-13z\"/><path d=\"M6.962 5.47a.75.75 0 010 1.06L4.992 8.5l1.97 1.97a.75.75 0 11-1.06 1.06L2.87 8.5 5.9 5.47a.75.75 0 011.061 0zm2.076 0a.75.75 0 000 1.06l1.97 1.97-1.97 1.97a.75.75 0 101.06 1.06L13.13 8.5 10.1 5.47a.75.75 0 00-1.061 0z\"/>"
  }, {
    "size": 24,
    "svgContent": "<path d=\"M1 4a2 2 0 012-2h18a2 2 0 012 2v16a2 2 0 01-2 2H3a2 2 0 01-2-2V4zm20 0H3v16h18V4z\"/><path d=\"M10.364 7.793a1 1 0 010 1.414L7.57 12l2.793 2.793a1 1 0 01-1.415 1.414L4.742 12 8.95 7.793a1 1 0 011.415 0zm3.273 0a1 1 0 000 1.414L16.43 12l-2.793 2.793a1 1 0 001.414 1.414L19.258 12l-4.207-4.207a1 1 0 00-1.414 0z\"/>"
  }];
  var config = useContext(EncoreContext);
  var status = getStatus(encoreContextKeyword.icon, config);
  var closestSize = findClosestGlyphAvailable(status === encoreContextStatus.next ? iconListRedraw : iconList, props.iconSize || 24);
  return /*#__PURE__*/React.createElement(Experimental__Icon, Object.assign({}, props, {
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: closestSize.svgContent
    }
  }));
}
export default Experimental__IconCode;