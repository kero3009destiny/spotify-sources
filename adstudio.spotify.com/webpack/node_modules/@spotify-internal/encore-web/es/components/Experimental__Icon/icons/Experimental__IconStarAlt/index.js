import React, { useContext } from 'react';
import { EncoreContext, encoreContextKeyword, encoreContextStatus, getStatus } from "../../../../contexts/EncoreContext";
import { Experimental__Icon, findClosestGlyphAvailable } from "../../";
export function Experimental__IconStarAlt(props) {
  var iconList = [{
    "size": 16,
    "svgContent": "<path d=\"M8 .3L6 6H0l4.8 3.8L3 15.6l5-3.5 4.9 3.4-1.7-5.8L16 6h-6L8 .3z\"/><path fill=\"none\" d=\"M0 0h16v16H0z\"/>"
  }, {
    "size": 24,
    "svgContent": "<path d=\"M12 .5L9 9H0l7.2 5.7-2.6 8.6 7.4-5.1 7.4 5.1-2.6-8.6L24 9h-9L12 .5z\"/><path fill=\"none\" d=\"M0 0h24v24H0z\"/>"
  }, {
    "size": 32,
    "svgContent": "<path d=\"M16 .7L12 12H0l9.5 7.6-3.4 11.5 9.9-6.8 9.9 6.8-3.4-11.5L32 12H20L16 .7z\"/><path fill=\"none\" d=\"M0 0h32v32H0z\"/>"
  }, {
    "size": 48,
    "svgContent": "<path d=\"M24 1l-6 17H0l14.3 11.4-5.2 17.3L24 36.4l14.8 10.2-5.2-17.3L48 18H30L24 1z\"/><path fill=\"none\" d=\"M0 0h48v48H0z\"/>"
  }, {
    "size": 64,
    "svgContent": "<path d=\"M32 2.8L24.5 24H2l17.9 14.3-6.5 21.6L32 47l18.5 12.8L44 38.2 62 24H39.5L32 2.8z\"/><path fill=\"none\" d=\"M0 0h64v64H0z\"/>"
  }];
  var iconListRedraw = [{
    "size": 16,
    "svgContent": "<path d=\"M8.696.825a.75.75 0 00-1.392 0L5.492 5.318l-4.79.306a.75.75 0 00-.43 1.326l3.582 2.963-1.067 4.82a.75.75 0 001.14.792L8 12.895l4.074 2.63a.75.75 0 001.139-.792l-1.067-4.82 3.582-2.963a.75.75 0 00-.43-1.326l-4.79-.306L8.696.825z\"/>"
  }, {
    "size": 24,
    "svgContent": "<path d=\"M12.927.686a1 1 0 00-1.854 0L8.308 7.542l-7.309.466a1 1 0 00-.574 1.769l5.466 4.521-1.627 7.35a1 1 0 001.519 1.056L12 18.69l6.217 4.014a1 1 0 001.519-1.057l-1.628-7.349 5.466-4.521a1 1 0 00-.573-1.769l-7.309-.466L12.927.686z\"/>"
  }];
  var config = useContext(EncoreContext);
  var status = getStatus(encoreContextKeyword.icon, config);
  var closestSize = findClosestGlyphAvailable(status === encoreContextStatus.next ? iconListRedraw : iconList, props.iconSize || 24);
  return /*#__PURE__*/React.createElement(Experimental__Icon, Object.assign({}, props, {
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: closestSize.svgContent
    }
  }));
}
export default Experimental__IconStarAlt;