import React, { useContext } from 'react';
import { EncoreContext, encoreContextKeyword, encoreContextStatus, getStatus } from "../../../../contexts/EncoreContext";
import { Experimental__Icon, findClosestGlyphAvailable } from "../../";
export function Experimental__IconChromecastConnectingOne(props) {
  var iconList = [{
    "size": 16,
    "svgContent": "<path d=\"M.667 12v2h2q0-.825-.588-1.413Q1.492 12 .667 12zM14 2H2q-.548 0-.94.393-.393.393-.393.94v2H2v-2h12v9.334H9.333V14H14q.548 0 .94-.393.393-.393.393-.94V3.333q0-.547-.393-.94Q14.548 2 14 2z\"/>"
  }, {
    "size": 24,
    "svgContent": "<path d=\"M1 18v3h3a2.89 2.89 0 00-.88-2.119A2.89 2.89 0 001 18zM21 3H3c-.547 0-1.018.196-1.41.59C1.195 3.982 1 4.452 1 5v3h2V5h18v14h-7v2h7c.547 0 1.018-.197 1.41-.59.394-.392.59-.862.59-1.41V5a1.92 1.92 0 00-.59-1.411A1.926 1.926 0 0021 3z\"/>"
  }, {
    "size": 32,
    "svgContent": "<path d=\"M1.333 24v4h4q0-1.65-1.174-2.825Q2.984 24 1.333 24zM28 4H4q-1.095 0-1.881.786-.786.785-.786 1.88v4H4v-4h24v18.667h-9.333V28H28q1.095 0 1.881-.786.786-.785.786-1.88V6.666q0-1.096-.786-1.881Q29.095 4 28 4z\"/>"
  }];
  var iconListRedraw = [{
    "size": 16,
    "svgContent": "<path d=\"M.667 12v2h2c0-.55-.196-1.021-.588-1.413A1.925 1.925 0 00.667 12zM14 2H2a1.28 1.28 0 00-.94.393 1.283 1.283 0 00-.393.94v2H2v-2h12v9.334H9.333V14H14c.365 0 .679-.131.94-.393.262-.262.393-.575.393-.94V3.333c0-.365-.131-.678-.393-.94A1.28 1.28 0 0014 2z\"/>"
  }, {
    "size": 24,
    "svgContent": "<path d=\"M1 18v3h3a2.89 2.89 0 00-.88-2.119A2.89 2.89 0 001 18zM21 3H3c-.547 0-1.018.196-1.41.59C1.195 3.982 1 4.452 1 5v3h2V5h18v14h-7v2h7c.547 0 1.018-.197 1.41-.59.394-.392.59-.862.59-1.41V5a1.92 1.92 0 00-.59-1.411A1.926 1.926 0 0021 3z\"/>"
  }];
  var config = useContext(EncoreContext);
  var status = getStatus(encoreContextKeyword.icon, config);
  var closestSize = findClosestGlyphAvailable(status === encoreContextStatus.next ? iconListRedraw : iconList, props.iconSize || 24);
  return /*#__PURE__*/React.createElement(Experimental__Icon, Object.assign({}, props, {
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: closestSize.svgContent
    }
  }));
}
export default Experimental__IconChromecastConnectingOne;