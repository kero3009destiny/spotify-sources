import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["placement", "overlay", "onShow", "onHide"];
import React, { cloneElement, isValidElement } from 'react';
import { useTrigger } from "../../hooks/useTrigger";
import Trigger from "./Trigger";

var DropdownTriggerComponent = function DropdownTriggerComponent(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
      overlay = _ref.overlay,
      _ref$onShow = _ref.onShow,
      onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,
      _ref$onHide = _ref.onHide,
      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useTrigger = useTrigger({
    overlay: overlay,
    onShow: onShow,
    onHide: onHide
  }),
      triggerRef = _useTrigger.triggerRef,
      onClick = _useTrigger.onClick,
      onKeyDown = _useTrigger.onKeyDown;

  return /*#__PURE__*/React.createElement(Trigger, Object.assign({
    ref: triggerRef,
    overlay: overlay && typeof overlay === 'object' && /*#__PURE__*/isValidElement(overlay) && /*#__PURE__*/cloneElement(overlay),
    placement: placement,
    onClick: onClick,
    onKeyDown: onKeyDown
  }, props));
};

var dropdownTriggerHelpers = {
  top: 'top',
  bottom: 'bottom'
};
/**
* **DropdownTrigger** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/DropdownTrigger) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-dropdown-dropdowntrigger--default) | [Encore](https://encore.spotify.net/web/components/dropdown) | 
*
* DropdownTrigger makes the dropdown appear on user interaction.
*
* @example
* () => (
*  <DropdownTrigger
*    overlay={
*      <DropdownList>
*        <DropdownItem>
*          <DropdownLink href="#">List item 1</DropdownLink>
*        </DropdownItem>
*        <DropdownItem>
*          <DropdownLink href="#">List item 2</DropdownLink>
*        </DropdownItem>
*        <DropdownItem>
*          <DropdownLink href="#" divider>
*            List item 3
*          </DropdownLink>
*        </DropdownItem>
*      </DropdownList>
*    }
*  >
*    <Dropdown>Dropdown</Dropdown>
*  </DropdownTrigger>
*);
*
*/

export var DropdownTrigger = Object.assign(DropdownTriggerComponent, dropdownTriggerHelpers);
export default DropdownTrigger;