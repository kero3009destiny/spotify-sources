import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["component", "isHover", "isActive", "isFocus", "isUsingKeyboard"];

/* stylelint-disable no-descending-specificity */
import React from 'react';
import { spacer4, spacer8, spacer12, spacer24 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { useEncoreContextType } from "../../hooks/useEncoreContextType";
import { browserFocusReset, buttonLinkReset, cello, cssColorValue, cursorDisabled, focusBorderColor, focusBorderWidth, opacityDisabled, rootStyle, semanticColors, typeStyleH4 } from "../../styles";
import { PopoverDesktop } from "../PopoverNavigation/PopoverDesktop";
import { PopoverMobile } from "../PopoverNavigation/PopoverMobile";
import { PopoverNavigationItem } from "../PopoverNavigationItem";
var hoverStyles = css(["background-color:", ";color:", ";"], cssColorValue(semanticColors.backgroundElevatedHighlight), cssColorValue(semanticColors.textSubdued));
var focusStyles = css(["&,&:hover{color:", ";box-shadow:inset 0 0 0 ", "px ", ";background-color:transparent;}"], cssColorValue(semanticColors.textBase), focusBorderWidth, focusBorderColor);
var activeStyles = css(["&,&:hover{background-color:", ";color:", ";}"], cssColorValue(semanticColors.backgroundElevatedPress), cssColorValue(semanticColors.textSubdued));
var disabledStyles = css(["background-color:transparent;color:", ";opacity:", ";cursor:", ";"], cssColorValue(semanticColors.textSubdued), opacityDisabled, cursorDisabled);
export var Link = styled(function (_ref) {
  var Component = _ref.component,
      isHover = _ref.isHover,
      isActive = _ref.isActive,
      isFocus = _ref.isFocus,
      isUsingKeyboard = _ref.isUsingKeyboard,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Component, props);
}).withConfig({
  displayName: "Link",
  componentId: "sc-1v366a6-0"
})(["", ";", " ", " color:", ";text-decoration:none;display:block;border-radius:", ";&:hover{", "}", " &:active{", "}", " &:focus{", "}", " &[disabled],&[href][disabled],&[aria-disabled='true']{", "}", " &{padding:10px ", ";margin-left:-", ";margin-right:-", ";", ";}", " ", ":first-child &{margin-top:-", ";}", " ", ":last-child &{margin-bottom:-", ";}", " &{", ";width:100%;padding:", " 0;}"], function (props) {
  return props.component === 'button' && css(["", ";line-height:inherit;font-size:inherit;"], buttonLinkReset());
}, rootStyle(), browserFocusReset, cssColorValue(semanticColors.textSubdued), spacer4, hoverStyles, function (props) {
  return props.isHover && hoverStyles;
}, activeStyles, function (props) {
  return props.isActive && activeStyles;
}, function (props) {
  return props.isUsingKeyboard && focusStyles;
}, function (props) {
  return props.isFocus && props.isUsingKeyboard && focusStyles;
}, disabledStyles, PopoverDesktop, spacer8, spacer12, spacer12, function (props) {
  return props.component === 'button' && css(["width:calc(100% + ", ");text-align:left;"], spacer24);
}, PopoverDesktop, PopoverNavigationItem, spacer8, PopoverDesktop, PopoverNavigationItem, spacer8, PopoverMobile, function () {
  return useEncoreContextType(typeStyleH4(), cello());
}, spacer12);