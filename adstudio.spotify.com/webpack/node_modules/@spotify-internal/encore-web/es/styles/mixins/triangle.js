import { spacer8 } from '@spotify-internal/encore-foundation';
import { css } from 'styled-components';
import { defaultColorSet } from "../semantic-theme";
var staticDropShadow = 'rgba(0, 0, 0, 0.05)';
var defaultSemanticColor = "var(--background-elevated-base, ".concat(defaultColorSet.background.elevated.base, ")");
export var triangle = function triangle(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? defaultSemanticColor : _ref$color,
      position = _ref.position,
      offset = _ref.offset,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? spacer8 : _ref$width;
  var offsetAfter = "-".concat(width);
  return css(["position:relative;&::after{bottom:auto;content:'';left:auto;position:absolute;right:auto;top:auto;", ";", ";", ";", ";", ";", ";", ";", ";}"], position === 'bottom' && css(["border-bottom:0;border-left:", " solid transparent;border-right:", " solid transparent;border-top:", " solid ", ";"], width, width, width, color), position === 'top' && css(["border-bottom:", " solid ", ";border-left:", " solid transparent;border-right:", " solid transparent;border-top:0;"], width, color, width, width), position === 'right' && css(["border-bottom:", " solid transparent;border-left:", " solid ", ";border-right:0;border-top:", " solid transparent;"], width, width, color, width), position === 'left' && css(["border-bottom:", " solid transparent;border-left:0;border-right:", " solid ", ";border-top:", " solid transparent;"], width, width, color, width), position === 'top' && css(["left:", ";top:", ";filter:drop-shadow(0 -2px 1px ", ");"], offset === 'center' ? "calc(50% - ".concat(width, ")") : offset, offsetAfter, staticDropShadow), position === 'bottom' && css(["bottom:", ";left:", ";filter:drop-shadow(0 2px 1px ", ");"], offsetAfter, offset === 'center' ? "calc(50% - ".concat(width, ")") : offset, staticDropShadow), position === 'left' && css(["left:", ";top:", ";filter:drop-shadow(-2px 0 1px ", ");"], offsetAfter, offset === 'center' ? "calc(50% - ".concat(width, ")") : offset, staticDropShadow), position === 'right' && css(["right:", ";top:", ";filter:drop-shadow(2px 0 1px ", ");"], offsetAfter, offset === 'center' ? "calc(50% - ".concat(width, ")") : offset, staticDropShadow));
};