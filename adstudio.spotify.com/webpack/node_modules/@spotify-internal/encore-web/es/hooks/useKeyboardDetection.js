import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useEffect, useState } from 'react';
export function useKeyboardDetection(initialKeyboardUse) {
  var _useState = useState(initialKeyboardUse),
      _useState2 = _slicedToArray(_useState, 2),
      isUsingKeyboard = _useState2[0],
      setIsUsingKeyboard = _useState2[1];

  var handleNonKeyboardUse = function handleNonKeyboardUse() {
    return setIsUsingKeyboard(false);
  };

  var handleKeyboardUse = function handleKeyboardUse(e) {
    if (e.key === 'Tab') {
      setIsUsingKeyboard(true);
    }
  };

  useEffect(function () {
    window.addEventListener('keydown', handleKeyboardUse);
    window.addEventListener('mousedown', handleNonKeyboardUse);
    window.addEventListener('touchstart', handleNonKeyboardUse);
    return function () {
      window.removeEventListener('keydown', handleKeyboardUse);
      window.removeEventListener('mousedown', handleNonKeyboardUse);
      window.removeEventListener('touchstart', handleNonKeyboardUse);
    };
  }, []);
  return {
    isUsingKeyboard: isUsingKeyboard,
    setIsUsingKeyboard: setIsUsingKeyboard
  };
}