"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  bass: true,
  forte: true,
  brio: true,
  alto: true,
  altoBrio: true,
  canon: true,
  cello: true,
  celloCanon: true,
  ballad: true,
  balladBold: true,
  viola: true,
  violaBold: true,
  mesto: true,
  mestoBold: true,
  metronome: true,
  finale: true,
  finaleBold: true,
  minuet: true,
  minuetBold: true
};
exports.violaBold = exports.viola = exports.minuetBold = exports.minuet = exports.metronome = exports.mestoBold = exports.mesto = exports.forte = exports.finaleBold = exports.finale = exports.celloCanon = exports.cello = exports.canon = exports.brio = exports.bass = exports.balladBold = exports.ballad = exports.altoBrio = exports.alto = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _styledComponents = require("styled-components");

var _legacyType = require("./legacyType");

Object.keys(_legacyType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _legacyType[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _legacyType[key];
    }
  });
});
var _excluded = ["fontWeight"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var pxToRem = function pxToRem(value) {
  var BASE_FONT_SIZE = 16;
  return "".concat(parseFloat(value) / BASE_FONT_SIZE, "rem");
};

var applyPxLegacy = function applyPxLegacy(typeStyle, pxLegacy) {
  return _objectSpread(_objectSpread({}, typeStyle), {}, {
    fontSize: pxLegacy ? typeStyle.fontSize : pxToRem(typeStyle.fontSize),
    lineHeight: pxLegacy ? typeStyle.lineHeight : pxToRem(typeStyle.lineHeight)
  });
};

var responsiveVariant = function responsiveVariant(mobileToken, desktopToken) {
  var pxLegacy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var fontWeight = desktopToken.fontWeight,
      rest = (0, _objectWithoutProperties2["default"])(desktopToken, _excluded);
  return (0, _styledComponents.css)(["", ";@media (min-width:", "){", ";}"], applyPxLegacy(mobileToken, pxLegacy), _encoreFoundation.breakpoint.screenSmMin, applyPxLegacy(rest, pxLegacy));
};

var bass = function bass() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileBass, _encoreFoundation.desktopBass, pxLegacy);
};

exports.bass = bass;

var forte = function forte() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var weight = arguments.length > 1 ? arguments[1] : undefined;
  return (0, _styledComponents.css)(["", ";@media (min-width:", "){", ";", ";}"], applyPxLegacy(_encoreFoundation.mobileForte, pxLegacy), _encoreFoundation.breakpoint.screenSmMin, applyPxLegacy(_encoreFoundation.desktopForte, pxLegacy), weight && (0, _styledComponents.css)(["font-weight:", ";"], weight));
};

exports.forte = forte;

var brio = function brio() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileBrio, _encoreFoundation.desktopBrio, pxLegacy);
};

exports.brio = brio;

var alto = function alto() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileAlto, _encoreFoundation.desktopAlto, pxLegacy);
};

exports.alto = alto;

var altoBrio = function altoBrio() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileAltoBrio, _encoreFoundation.desktopAltoBrio, pxLegacy);
};

exports.altoBrio = altoBrio;

var canon = function canon() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileCanon, _encoreFoundation.desktopCanon, pxLegacy);
};

exports.canon = canon;

var cello = function cello() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileCello, _encoreFoundation.desktopCello, pxLegacy);
};

exports.cello = cello;

var celloCanon = function celloCanon() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileCelloCanon, _encoreFoundation.desktopCelloCanon, pxLegacy);
};

exports.celloCanon = celloCanon;

var ballad = function ballad() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileBallad, _encoreFoundation.desktopBallad, pxLegacy);
};

exports.ballad = ballad;

var balladBold = function balladBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileBalladBold, _encoreFoundation.desktopBalladBold, pxLegacy);
};

exports.balladBold = balladBold;

var viola = function viola() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileViola, _encoreFoundation.desktopViola, pxLegacy);
};

exports.viola = viola;

var violaBold = function violaBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileViolaBold, _encoreFoundation.desktopViolaBold, pxLegacy);
};

exports.violaBold = violaBold;

var mesto = function mesto() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileMesto, _encoreFoundation.desktopMesto, pxLegacy);
};

exports.mesto = mesto;

var mestoBold = function mestoBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileMestoBold, _encoreFoundation.desktopMestoBold, pxLegacy);
};

exports.mestoBold = mestoBold;

var metronome = function metronome() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileMetronome, _encoreFoundation.desktopMetronome, pxLegacy);
};

exports.metronome = metronome;

var finale = function finale() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileFinale, _encoreFoundation.desktopFinale, pxLegacy);
};

exports.finale = finale;

var finaleBold = function finaleBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileFinaleBold, _encoreFoundation.desktopFinaleBold, pxLegacy);
};

exports.finaleBold = finaleBold;

var minuet = function minuet() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileMinuet, _encoreFoundation.desktopMinuet, pxLegacy);
};

exports.minuet = minuet;

var minuetBold = function minuetBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(_encoreFoundation.mobileMinuetBold, _encoreFoundation.desktopMinuetBold, pxLegacy);
};

exports.minuetBold = minuetBold;