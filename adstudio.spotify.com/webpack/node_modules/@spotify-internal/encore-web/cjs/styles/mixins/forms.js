"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formControlTheme = exports.formControlBaseSelect = exports.formControlBase = exports.formChevronDown = exports.formCheckIndicator = exports.formCheck = void 0;

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _styledComponents = require("styled-components");

var _useEncoreContextType = require("../../hooks/useEncoreContextType");

var _semanticTheme = require("../semantic-theme");

var _variables = require("../variables");

var _baseline = require("./baseline");

var _legacyType = require("./legacyType");

var _type = require("./type");

/* stylelint-disable no-descending-specificity */
//
// Forms
// --------------------------------------------------
// Shared styles for inputs, textareas, selects
var formControlBase = function formControlBase() {
  return (0, _styledComponents.css)(["-webkit-appearance:none;background-image:none;border:0;display:block;", ";transition:box-shadow ease-in-out 0.1s,color fade 0.1s;width:100%;&::placeholder{opacity:1;}&:focus,&:hover:focus{outline:0;}&:disabled,&[readonly]{cursor:not-allowed;opacity:1;}"], function () {
    return (0, _useEncoreContextType.useEncoreContextType)((0, _legacyType.typeStyleBody1)(), (0, _type.ballad)());
  });
}; // Styles for selects only


exports.formControlBase = formControlBase;

var formControlBaseSelect = function formControlBaseSelect() {
  return (0, _styledComponents.css)(["", ";margin-top:0;margin-bottom:0;appearance:none;box-shadow:none;text-indent:0.01px;text-overflow:'';&::-ms-expand{display:none;}border-radius:", ";padding:14px 44px 14px 14px;"], (0, _baseline.rootStyle)(), _encoreFoundation.spacer4);
}; // Styles the down arrow icon on FormSelect and Dropdown


exports.formControlBaseSelect = formControlBaseSelect;

var formChevronDown = function formChevronDown() {
  return (0, _styledComponents.css)(["color:", ";pointer-events:none;position:absolute;right:14px;"], (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialSubdued));
}; // Shared styles for radios + checkboxes


exports.formChevronDown = formChevronDown;

var formCheck = function formCheck() {
  return (0, _styledComponents.css)(["", ";align-items:center;display:flex;padding-bottom:", ";padding-top:", ";position:relative;min-height:", ";"], (0, _baseline.rootStyle)(), _encoreFoundation.spacer4, _encoreFoundation.spacer4, _encoreFoundation.spacer32);
};

exports.formCheck = formCheck;

var formCheckIndicator = function formCheckIndicator(radius) {
  return (0, _styledComponents.css)(["", ";background:transparent;border-radius:", ";display:inline-block;height:", ";position:relative;user-select:none;width:", ";flex-shrink:0;align-self:flex-start;top:0;"], (0, _baseline.rootStyle)(), radius, _encoreFoundation.spacer16, _encoreFoundation.spacer16);
};

exports.formCheckIndicator = formCheckIndicator;

var formControlTheme = function formControlTheme(_ref) {
  var _ref$isUsingKeyboard = _ref.isUsingKeyboard,
      isUsingKeyboard = _ref$isUsingKeyboard === void 0 ? true : _ref$isUsingKeyboard,
      isHover = _ref.isHover,
      isFocus = _ref.isFocus,
      error = _ref.error;
  var hoverStyles = (0, _styledComponents.css)(["box-shadow:inset 0 0 0 1px ", ";"], (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialBase));
  var focusStyles = (0, _styledComponents.css)(["box-shadow:inset 0 0 0 ", "px ", ";"], isUsingKeyboard ? 3 : 1.5, (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialBase));
  var errorStyles = (0, _styledComponents.css)(["&,&:hover{box-shadow:inset 0 0 0 1px ", ";}&:focus{box-shadow:inset 0 0 0 ", "px ", ";}"], (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialNegative), isUsingKeyboard ? 3 : 1.5, (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialNegative));
  return (0, _styledComponents.css)(["background-color:", ";box-shadow:inset 0 0 0 1px ", ";color:", ";&:hover{", "}", " &:focus{", "}&&{", ";}&::placeholder{color:", ";}&:disabled,&[readonly]{box-shadow:inset 0 0 0 1px ", ";opacity:", ";}&:invalid{", ";}", ""], (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.backgroundBase), (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialSubdued), (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.textBase), hoverStyles, isHover && hoverStyles, focusStyles, isFocus && focusStyles, (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.textSubdued), (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticColors.essentialSubdued), _variables.opacityDisabled, error === undefined && errorStyles, error && errorStyles);
};

exports.formControlTheme = formControlTheme;