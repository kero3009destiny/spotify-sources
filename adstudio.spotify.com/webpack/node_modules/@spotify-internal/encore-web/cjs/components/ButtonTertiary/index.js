"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ButtonTertiary = exports.ButtonComponent = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _BrowserDefaultFocusStyleContext = require("../../contexts/BrowserDefaultFocusStyleContext");

var _EncoreContext = require("../../contexts/EncoreContext");

var _KeyboardDetectionContext = require("../../contexts/KeyboardDetectionContext");

var _deprecationWarnings = require("../../deprecationWarnings");

var _styles = require("../../styles");

var _Button = require("./Button");

var _ButtonChildren = require("./ButtonChildren");

var _ButtonLegacy = require("./ButtonLegacy");

var _excluded = ["component", "color", "theme", "children", "buttonSize", "iconOnly", "iconLeading", "iconTrailing", "aria-label", "aria-labelledby"],
    _excluded2 = ["buttonLegacy"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ButtonComponent = /*#__PURE__*/_react["default"].forwardRef(function (_ref, ref) {
  var component = _ref.component,
      color = _ref.color,
      theme = _ref.theme,
      children = _ref.children,
      _ref$buttonSize = _ref.buttonSize,
      buttonSize = _ref$buttonSize === void 0 ? 'md' : _ref$buttonSize,
      iconOnly = _ref.iconOnly,
      iconLeading = _ref.iconLeading,
      iconTrailing = _ref.iconTrailing,
      ariaLabel = _ref['aria-label'],
      ariaLabelledby = _ref['aria-labelledby'],
      props = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  (0, _deprecationWarnings.colorWarning)({
    color: color
  });

  if (theme) {
    (0, _deprecationWarnings.renamedPropWarning)('theme', 'semanticColor');
  }

  if (iconOnly && !ariaLabel && !ariaLabelledby) {
    // eslint-disable-next-line no-console
    console.warn('ButtonTertiary must have an aria-label or aria-labelledby attribute defined when using the iconOnly prop in order to be accessible.');
  }

  var _useContext = (0, _react.useContext)(_KeyboardDetectionContext.KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  var _useContext2 = (0, _react.useContext)(_BrowserDefaultFocusStyleContext.BrowserDefaultFocusStyleContext),
      useBrowserDefaultFocusStyle = _useContext2.useBrowserDefaultFocusStyle;

  var config = (0, _react.useContext)(_EncoreContext.EncoreContext);
  var status = (0, _EncoreContext.getStatus)(_EncoreContext.encoreContextKeyword.button, config);
  var rel = props.href && props.target === '_blank' ? 'noopener noreferrer' : null;
  /** Override standard icon size for lg iconOnly buttons */

  var iconSize = iconOnly && buttonSize === 'lg' ? _encoreFoundation.spacer32 : _styles.buttonIconSize[buttonSize];
  return /*#__PURE__*/_react["default"].createElement(_Button.Button, Object.assign({}, props, {
    rel: rel,
    ref: ref,
    component: !component && props.href ? 'a' : component,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    buttonSize: buttonSize,
    iconSize: iconSize,
    iconLeading: iconLeading,
    iconTrailing: iconTrailing,
    iconOnly: iconOnly,
    isUsingKeyboard: isUsingKeyboard,
    useBrowserDefaultFocusStyle: useBrowserDefaultFocusStyle,
    status: status
  }), /*#__PURE__*/_react["default"].createElement(_ButtonChildren.ButtonChildren, {
    iconOnly: iconOnly,
    iconLeading: iconLeading,
    iconTrailing: iconTrailing,
    iconSize: iconSize,
    children: children,
    buttonSize: buttonSize
  }));
});
/** Component that figures out if we are rendering the legacy or current button */


exports.ButtonComponent = ButtonComponent;

var ButtonToRender = /*#__PURE__*/_react["default"].forwardRef(function (_ref2, ref) {
  var buttonLegacy = _ref2.buttonLegacy,
      props = (0, _objectWithoutProperties2["default"])(_ref2, _excluded2);

  /** First, figure out if we are rendering the legacy or the current button */
  if (buttonLegacy) {
    (0, _deprecationWarnings.deprecatedPropWarning)('buttonLegacy', "This prop will be removed soon. Please migrate to new button styles by removing this prop.\nRead more: https://encore.spotify.net/web/whats-new/green-buttons/?format=web-js");
    return /*#__PURE__*/_react["default"].createElement(_ButtonLegacy.ButtonLegacyComponent, Object.assign({
      ref: ref
    }, props));
  }

  return /*#__PURE__*/_react["default"].createElement(ButtonComponent, Object.assign({
    ref: ref
  }, props));
});
/**
 * TODO: Remove when we deprecate `buttonSize` helpers like `ButtonTertiary.sm`.
 */


var buttonHelpers = _objectSpread(_objectSpread({}, _styles.buttonSizes), {}, {
  displayName: 'ButtonTertiary'
});
/**
* **ButtonTertiary** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/ButtonTertiary) | [Storybook](https://encore-web.spotify.net/?path=/docs/components-button-buttontertiary--default) | [Encore](https://encore.spotify.net/web/components/button?format=figma-figma#buttontertiary) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=7643:5911) |
*
* Tertiary buttons are text-only buttons. These are used for the least important actions.
*
* @example
* () => <ButtonTertiary>Default</ButtonTertiary>;
*
*/


var ButtonTertiary = Object.assign(ButtonToRender, buttonHelpers);
exports.ButtonTertiary = ButtonTertiary;
var _default = ButtonTertiary;
exports["default"] = _default;