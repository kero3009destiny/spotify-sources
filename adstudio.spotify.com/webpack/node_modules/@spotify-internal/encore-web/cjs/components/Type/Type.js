"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.weights = exports.variants = exports.typeWeight = exports.TypeElement = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styles = require("../../styles");

var _typeHelpers = require("../../typeHelpers");

var _LegacyType = require("./LegacyType");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var variants = {
  bass: 'bass',
  forte: 'forte',
  brio: 'brio',
  altoBrio: 'altoBrio',
  alto: 'alto',
  canon: 'canon',
  celloCanon: 'celloCanon',
  cello: 'cello',
  ballad: 'ballad',
  balladBold: 'balladBold',
  viola: 'viola',
  violaBold: 'violaBold',
  mesto: 'mesto',
  mestoBold: 'mestoBold',
  metronome: 'metronome',
  finale: 'finale',
  finaleBold: 'finaleBold',
  minuet: 'minuet',
  minuetBold: 'minuetBold'
};
exports.variants = variants;
var weights = {
  book: 'book',
  bold: 'bold',
  black: 'black'
};
exports.weights = weights;

var typeWeight = function typeWeight(weight) {
  switch (weight) {
    case 'book':
      return _styles.fontWeightBook;

    case 'bold':
      return _styles.fontWeightBold;

    case 'black':
      return _styles.fontWeightBlack;

    default:
      return (0, _typeHelpers.assertNever)(weight);
  }
};

exports.typeWeight = typeWeight;

var variantStyles = function variantStyles(variant) {
  var pxLegacy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var weight = arguments.length > 2 ? arguments[2] : undefined;

  switch (variant) {
    case 'bass':
      return (0, _styles.bass)(pxLegacy);

    case 'forte':
      return (0, _styles.forte)(pxLegacy, weight && typeWeight(weight));

    case 'brio':
      return (0, _styles.brio)(pxLegacy);

    case 'altoBrio':
      return (0, _styles.altoBrio)(pxLegacy);

    case 'alto':
      return (0, _styles.alto)(pxLegacy);

    case 'canon':
      return (0, _styles.canon)(pxLegacy);

    case 'celloCanon':
      return (0, _styles.celloCanon)(pxLegacy);

    case 'cello':
      return (0, _styles.cello)(pxLegacy);

    case 'ballad':
      return (0, _styles.ballad)(pxLegacy);

    case 'balladBold':
      return (0, _styles.balladBold)(pxLegacy);

    case 'viola':
      return (0, _styles.viola)(pxLegacy);

    case 'violaBold':
      return (0, _styles.violaBold)(pxLegacy);

    case 'mesto':
      return (0, _styles.mesto)(pxLegacy);

    case 'mestoBold':
      return (0, _styles.mestoBold)(pxLegacy);

    case 'metronome':
      return (0, _styles.metronome)(pxLegacy);

    case 'finale':
      return (0, _styles.finale)(pxLegacy);

    case 'finaleBold':
      return (0, _styles.finaleBold)(pxLegacy);

    case 'minuet':
      return (0, _styles.minuet)(pxLegacy);

    case 'minuetBold':
      return (0, _styles.minuetBold)(pxLegacy);

    default:
      return (0, _LegacyType.legacyVariantStyles)(variant);
  }
};

var TypeElement = _styledComponents["default"].span.withConfig({
  displayName: "Type__TypeElement",
  componentId: "goli3j-0"
})(["", ";", " margin-top:0;margin-bottom:0;", ";", ";", " ", ";"], (0, _styles.rootStyle)(), function (props) {
  return props.isLegacyVariant && props.as && typeof props.as === 'string' && ['h1', 'h2', 'h3', 'h4', 'p', 'li', 'small'].includes(props.as) && (0, _styledComponents.css)(["display:block;padding:0 0 1em;"]);
}, function (props) {
  return props.variant ? variantStyles(props.variant, props.pxLegacy, props.weight) : undefined;
}, function (props) {
  return props.paddingBottom && (0, _styledComponents.css)(["padding-bottom:", ";"], props.paddingBottom);
}, function (props) {
  return props.semanticColor ? (0, _styledComponents.css)(["color:", ";"], (0, _styles.cssColorValue)(props.semanticColor)) : (0, _styledComponents.css)(["color:inherit;"]);
}, function (props) {
  return props.weight && (0, _styledComponents.css)(["font-weight:", ";"], typeWeight(props.weight));
});

exports.TypeElement = TypeElement;