"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.FileUpload = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _ButtonSecondary = require("../../../cjs/components/ButtonSecondary");

var _IconArrowUp = require("../../../cjs/components/Icon/IconArrowUp");

var _Type = require("../../../cjs/components/Type");

var _semanticTheme = require("../../../cjs/styles/semantic-theme");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _constants = require("./constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var InvalidFileTypeErrorMessage = 'File type not accepted.';
var ICON_CONTAINER_HEIGHT = '64px';
var UPLOAD_ICON_HEIGHT = '35px';
var videoUploadIconStyles = (0, _styledComponents.css)(["top:40%;left:0;"]);

var UploadInstructions = _styledComponents["default"].div.withConfig({
  displayName: "FileUpload__UploadInstructions",
  componentId: "sc-1yepnn-0"
})(["margin:", " 0;display:grid;justify-content:center;align-items:center;grid-template-rows:56px 30px 30px minmax(30px,min-content);grid-gap:", ";"], _encoreFoundation.spacer32, _encoreFoundation.spacer16);

var IconContainer = _styledComponents["default"].div.withConfig({
  displayName: "FileUpload__IconContainer",
  componentId: "sc-1yepnn-1"
})(["backface-visibility:hidden;height:", ";margin:0 auto;position:relative;width:", ";transition:border-color 0.1s;"], function (props) {
  return props.$iconContainerHeight;
}, ICON_CONTAINER_HEIGHT);

var StyledUploadIcon = (0, _styledComponents["default"])(_IconArrowUp.IconArrowUp).withConfig({
  displayName: "FileUpload__StyledUploadIcon",
  componentId: "sc-1yepnn-2"
})(["left:35%;opacity:0;position:absolute;top:40%;transition:top 0.25s,opacity 0.25s;"]);

var FileUploadContainer = _styledComponents["default"].div.withConfig({
  displayName: "FileUpload__FileUploadContainer",
  componentId: "sc-1yepnn-3"
})(["background-color:", ";border:1.5px dashed ", ";border-radius:5px;text-align:center;transition:border-color 0.1s;width:100%;", ""], _encoreFoundation.gray95, _encoreFoundation.gray90, function (props) {
  return props.$showDragOver && (0, _styledComponents.css)(["background-color:rgba(80,155,245,0.05);border-color:", ";", "{border-color:", ";}", "{opacity:1;top:calc((", " - ", ") / 2);}", "{left:25%;opacity:0;top:10%;}"], (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticEssentialColors.essentialBrightAccent), IconContainer, (0, _semanticTheme.cssColorValue)(_semanticTheme.semanticEssentialColors.essentialBrightAccent), StyledUploadIcon, ICON_CONTAINER_HEIGHT, UPLOAD_ICON_HEIGHT, props.$DisplayIcon);
});

var HiddenInput = _styledComponents["default"].input.withConfig({
  displayName: "FileUpload__HiddenInput",
  componentId: "sc-1yepnn-4"
})(["height:0.1px;opacity:0;overflow:hidden;position:absolute;width:0.1px;z-index:-1;"]);

var FileUpload = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2["default"])(FileUpload, _PureComponent);

  var _super = _createSuper(FileUpload);

  function FileUpload(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, FileUpload);
    _this = _super.call(this, props);

    _this.handleFileUploadFromDialog = function (e) {
      _this.validateFileAndUpload(e.currentTarget.files[0]);
    };

    _this.handleFileDrop = function (e) {
      e.preventDefault();

      _this.handleFileDragLeave();

      var file = e.dataTransfer.files[0];

      _this.validateFileAndUpload(file);
    };

    _this.handleClickUpload = function (e) {
      var _document$getElementB;

      e.preventDefault();
      return (_document$getElementB = document.getElementById(_this.props.id)) == null ? void 0 : _document$getElementB.click();
    };

    _this.handleFileDragOver = function (e) {
      e.preventDefault();

      _this.setState({
        showDragOver: true
      });
    };

    _this.handleFileDragLeave = function () {
      return _this.setState({
        showDragOver: false
      });
    };

    _this.validateFileAndUpload = function (file) {
      var _this$props = _this.props,
          accept = _this$props.accept,
          skipValidation = _this$props.skipValidation,
          onError = _this$props.onError,
          onUpload = _this$props.onUpload;

      if (skipValidation || _this.state.acceptAnyFileType || accept[file.type]) {
        onUpload(file);
      } else {
        onError(InvalidFileTypeErrorMessage);
      }
    };

    _this.maybeRenderUploadInstructions = function () {
      var _this$props2 = _this.props,
          _this$props2$uploadFi = _this$props2.uploadFileText,
          uploadFileText = _this$props2$uploadFi === void 0 ? _constants.UPLOAD_FILE_TEXT : _this$props2$uploadFi,
          uploadText = _this$props2.uploadText,
          _this$props2$dragAndD = _this$props2.dragAndDropText,
          dragAndDropText = _this$props2$dragAndD === void 0 ? _constants.DRAG_AND_DROP_TEXT : _this$props2$dragAndD,
          _this$props2$isVideoU = _this$props2.isVideoUploader,
          isVideoUploader = _this$props2$isVideoU === void 0 ? false : _this$props2$isVideoU,
          _this$props2$iconCont = _this$props2.iconContainerHeight,
          iconContainerHeight = _this$props2$iconCont === void 0 ? ICON_CONTAINER_HEIGHT : _this$props2$iconCont;

      var _assertThisInitialize = (0, _assertThisInitialized2["default"])(_this),
          DisplayIcon = _assertThisInitialize.DisplayIcon;

      return /*#__PURE__*/_react["default"].createElement(UploadInstructions, null, /*#__PURE__*/_react["default"].createElement(IconContainer, {
        $iconContainerHeight: iconContainerHeight
      }, /*#__PURE__*/_react["default"].createElement(StyledUploadIcon, {
        semanticColor: _semanticTheme.semanticTextColors.textBrightAccent
      }), /*#__PURE__*/_react["default"].createElement(DisplayIcon, {
        iconSize: 64,
        semanticColor: _semanticTheme.semanticTextColors.textSubdued,
        $isVideoUploader: isVideoUploader
      })), /*#__PURE__*/_react["default"].createElement(_Type.Type.p, {
        semanticColor: _semanticTheme.semanticColors.textSubdued,
        variant: "ballad",
        weight: "bold"
      }, dragAndDropText), /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_ButtonSecondary.ButtonSecondary, {
        buttonSize: _ButtonSecondary.ButtonSecondary.sm,
        onClick: _this.handleClickUpload
      }, uploadFileText)), /*#__PURE__*/_react["default"].createElement(_Type.Type.p, {
        semanticColor: _semanticTheme.semanticColors.textSubdued,
        variant: "finale",
        weight: "book"
      }, uploadText));
    };

    _this.state = {
      showDragOver: false,
      acceptAnyFileType: !Object.keys(props.accept).length
    };
    _this.handleFileUploadFromDialog = _this.handleFileUploadFromDialog.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  } // FIXME: figure out file input change event


  (0, _createClass2["default"])(FileUpload, [{
    key: "DisplayIcon",
    get: function get() {
      var DisplayIcon = (0, _styledComponents["default"])(this.props.displayIcon).withConfig({
        displayName: "FileUpload__DisplayIcon",
        componentId: "sc-1yepnn-5"
      })(["opacity:1;transition:top 0.25s,opacity 0.25s;", ""], function (props) {
        return props.$isVideoUploader && videoUploadIconStyles;
      });
      return DisplayIcon;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          accept = _this$props3.accept,
          id = _this$props3.id;
      var showDragOver = this.state.showDragOver;
      return /*#__PURE__*/_react["default"].createElement(FileUploadContainer, {
        $showDragOver: showDragOver,
        $DisplayIcon: this.DisplayIcon,
        onDragEnd: this.handleFileDragLeave,
        onDragEnter: this.handleFileDragOver,
        onDragLeave: this.handleFileDragLeave,
        onDragOver: this.handleFileDragOver,
        onDrop: this.handleFileDrop
      }, this.maybeRenderUploadInstructions(), /*#__PURE__*/_react["default"].createElement(HiddenInput, {
        accept: Object.keys(accept).join(','),
        id: id,
        onChange: this.handleFileUploadFromDialog,
        type: "file"
      }));
    }
  }]);
  return FileUpload;
}(_react.PureComponent);

exports.FileUpload = FileUpload;
var _default = FileUpload;
exports["default"] = _default;