"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = LoadingDisplay;

var _react = _interopRequireDefault(require("react"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _Type = require("../../../cjs/components/Type");

var _styles = require("../../../cjs/styles");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Panel = require("../Panel");

var _constants = require("./constants");

var Container = _styledComponents["default"].div.withConfig({
  displayName: "LoadingDisplay__Container",
  componentId: "olrgv-0"
})(["width:100%;"]);

var TrackName = (0, _styledComponents["default"])(_Type.Type.p).withConfig({
  displayName: "LoadingDisplay__TrackName",
  componentId: "olrgv-1"
})(["padding-bottom:10px;position:relative;"]);

var ProgressBarBackground = _styledComponents["default"].div.withConfig({
  displayName: "LoadingDisplay__ProgressBarBackground",
  componentId: "olrgv-2"
})(["background-color:", ";border-radius:2px;height:4px;width:100%;"], _encoreFoundation.gray90);

var ProgressBar = _styledComponents["default"].div.withConfig({
  displayName: "LoadingDisplay__ProgressBar",
  componentId: "olrgv-3"
})(["background-color:", ";border-radius:2px;height:4px;width:", ";"], _encoreFoundation.gray50, function (props) {
  return "".concat(props.$progressInt || 0, "%");
});

var StatusText = (0, _styledComponents["default"])(_Type.Type.p).withConfig({
  displayName: "LoadingDisplay__StatusText",
  componentId: "olrgv-4"
})(["padding-top:10px;"]);

function LoadingDisplay(_ref) {
  var name = _ref.name,
      progress = _ref.progress,
      _ref$uploadingText = _ref.uploadingText,
      uploadingText = _ref$uploadingText === void 0 ? _constants.UPLOADING : _ref$uploadingText,
      _ref$processingText = _ref.processingText,
      processingText = _ref$processingText === void 0 ? _constants.PROCESSING : _ref$processingText;
  var progressInt = Math.max(Math.min(progress, 100), 0);
  var statusText = progressInt === 100 ? "".concat(processingText, "...") : "".concat(uploadingText, "...");
  return /*#__PURE__*/_react["default"].createElement(_Panel.Panel, {
    shadow: true
  }, /*#__PURE__*/_react["default"].createElement(Container, null, /*#__PURE__*/_react["default"].createElement(TrackName, {
    variant: "ballad",
    weight: "book"
  }, name), /*#__PURE__*/_react["default"].createElement(ProgressBarBackground, null, /*#__PURE__*/_react["default"].createElement(ProgressBar, {
    $progressInt: progressInt
  })), /*#__PURE__*/_react["default"].createElement(StatusText, {
    semanticColor: _styles.semanticColors.textSubdued,
    variant: "finale",
    deprecatedVariant: "body3",
    weight: "book",
    condensed: true
  }, statusText)));
}