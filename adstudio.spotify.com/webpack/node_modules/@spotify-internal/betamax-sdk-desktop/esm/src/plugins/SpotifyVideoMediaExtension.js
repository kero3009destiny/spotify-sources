import { SP_VIDEO_TYPE, SPManifestParser, VttTextParser } from '.';
import { shaka } from '../player';
var SpotifyVideoMediaExtension = (function () {
    function SpotifyVideoMediaExtension(manifestTemplate) {
        this.manifestTemplate = manifestTemplate;
        shaka.media.ManifestParser.registerParserByExtension('json', SPManifestParser);
        shaka.media.ManifestParser.registerParserByMime('application/json', SPManifestParser);
        shaka.text.TextEngine.registerParser('text/vtt', VttTextParser);
        shaka.text.TextEngine.registerParser('text/vtt; codecs="vtt"', VttTextParser);
    }
    SpotifyVideoMediaExtension.prototype.createAssetUri = function (sourceID) {
        var source = sourceID.replace(SP_VIDEO_TYPE, '');
        return this.manifestUrlForSourceID(this.manifestTemplate, source);
    };
    SpotifyVideoMediaExtension.prototype.isPlayable = function (url) {
        return url.startsWith(SP_VIDEO_TYPE);
    };
    SpotifyVideoMediaExtension.prototype.manifestUrlForSourceID = function (manifestUrlTemplate, sourceID) {
        return manifestUrlTemplate
            .replace(/\{type\}/i, 'json')
            .replace(/\{source_id\}/i, encodeURIComponent(sourceID));
    };
    return SpotifyVideoMediaExtension;
}());
export default SpotifyVideoMediaExtension;
//# sourceMappingURL=SpotifyVideoMediaExtension.js.map