var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import EventsTracker from '../EventsTracker';
import { EndVideoKeys, } from '../types';
import { EndVideoReasonEnd } from '..';
import PlaybackEvents from '../VideoPlaybackEvents';
import { generateEndVideoMessage } from './EndVideoEventsCalculator';
import { END_VIDEO_PREFIX, REASON_START, getConnectionType } from '../utils';
export var APPLOAD_MS_PLAYED_THRESHOLD = 100;
var PERIODIC_END_VIDEO_INTERVAL_IN_SEC = 15;
var EndVideoLoggerTracker = (function (_super) {
    __extends(EndVideoLoggerTracker, _super);
    function EndVideoLoggerTracker(endVideo, productStateProvider, logError) {
        var _this = _super.call(this) || this;
        _this.unexpectedEndReason = EndVideoReasonEnd.END_UNEXPECTED_EXIT;
        _this.endVideo = endVideo;
        _this.productStateProvider = productStateProvider;
        _this.logError = logError;
        _this.startConnectionType = 'unknown';
        _this.endConnectionType = 'unknown';
        return _this;
    }
    EndVideoLoggerTracker.prototype.onPlaybackCreated = function (playbackIdentity, initialConfiguration, timeObservable, timestamp) {
        return __awaiter(this, void 0, void 0, function () {
            var shouldCreateAndUpdateMessage;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.onPlaybackCreated.call(this, playbackIdentity, initialConfiguration, timeObservable, timestamp);
                        this.incognito = this.productStateProvider.incognito || false;
                        this.startConnectionType = getConnectionType();
                        shouldCreateAndUpdateMessage = !(playbackIdentity.metadata &&
                            playbackIdentity.metadata[END_VIDEO_PREFIX + REASON_START] ===
                                EndVideoReasonEnd.END_APPLOAD);
                        if (!shouldCreateAndUpdateMessage) return [3, 2];
                        return [4, this.updatePendingEndVideo(initialConfiguration.position)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        timeObservable.addObserverForPeriodicEvents(PERIODIC_END_VIDEO_INTERVAL_IN_SEC, function (position) {
                            _this.updatePendingEndVideo(position);
                        });
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.onReady = function (playWhenReady, position, timestamp) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.onReady.call(this, playWhenReady, position, timestamp);
                        this.unexpectedEndReason = playWhenReady
                            ? EndVideoReasonEnd.END_UNEXPECTED_EXIT
                            : EndVideoReasonEnd.END_UNEXPECTED_EXIT_WHILE_PAUSED;
                        return [4, this.updatePendingEndVideo(position)];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.onPaused = function (position, timestamp) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.onPaused.call(this, position, timestamp);
                        this.unexpectedEndReason =
                            EndVideoReasonEnd.END_UNEXPECTED_EXIT_WHILE_PAUSED;
                        return [4, this.updatePendingEndVideo(position)];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.onResumed = function (position, timestamp) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.onResumed.call(this, position, timestamp);
                        this.unexpectedEndReason = EndVideoReasonEnd.END_UNEXPECTED_EXIT;
                        return [4, this.updatePendingEndVideo(position)];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.onPlaybackEnded = function (reason, position, timestamp) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.onPlaybackEnded.call(this, reason, position, timestamp);
                        this.endConnectionType = getConnectionType();
                        return [4, this.createAndUpdateMessage(this.sessionEvents)];
                    case 1:
                        _a.sent();
                        if (this.sequenceNumber) {
                            this.endVideo.send(this.sequenceNumber);
                        }
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.createEndVideo = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.endVideo.create(function (error, sequenceNumber, sequenceId) {
                if (error) {
                    _this.sequenceNumber = undefined;
                    _this.sequenceId = undefined;
                    reject(error);
                }
                _this.sequenceNumber = sequenceNumber;
                _this.sequenceId = sequenceId;
                resolve({ sequenceNumber: sequenceNumber, sequenceId: sequenceId });
            });
        });
    };
    EndVideoLoggerTracker.prototype.updateEndVideo = function (endVideo) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.endVideo.update(_this.sequenceNumber, endVideo, function (error) {
                if (error) {
                    if (_this.logError) {
                        _this.logError('logEndVideo, failed update:', error);
                    }
                    reject(error);
                }
                resolve(endVideo);
            });
        });
    };
    EndVideoLoggerTracker.prototype.endVideoFields = function () {
        var _a;
        return _a = {},
            _a[EndVideoKeys.SEQUENCE_NUMBER] = this.sequenceNumber,
            _a[EndVideoKeys.SEQUENCE_ID] = this.sequenceId,
            _a[EndVideoKeys.CONNECTION_TYPE_START] = this.startConnectionType,
            _a[EndVideoKeys.CONNECTION_TYPE_END] = this.endConnectionType,
            _a[EndVideoKeys.STREAMING_RULE] = this.productStateProvider.streamingRules(),
            _a[EndVideoKeys.INCOGNITO_MODE] = this.incognito,
            _a;
    };
    EndVideoLoggerTracker.prototype.shouldLogEndVideo = function (reasonStart, msPlayed) {
        return !(reasonStart === EndVideoReasonEnd.END_APPLOAD &&
            msPlayed < APPLOAD_MS_PLAYED_THRESHOLD);
    };
    EndVideoLoggerTracker.prototype.createAndUpdateMessage = function (sessionEvents) {
        return __awaiter(this, void 0, void 0, function () {
            var message, endVideoMessage;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        message = generateEndVideoMessage(sessionEvents);
                        if (!this.shouldLogEndVideo(message[EndVideoKeys.REASON_START], message[EndVideoKeys.MS_PLAYED])) {
                            return [2];
                        }
                        if (!!this.sequenceNumber) return [3, 2];
                        return [4, this.createEndVideo()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        endVideoMessage = __assign(__assign({}, message), this.endVideoFields());
                        return [4, this.updateEndVideo(endVideoMessage)];
                    case 3:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    EndVideoLoggerTracker.prototype.updatePendingEndVideo = function (position) {
        return __awaiter(this, void 0, void 0, function () {
            var pendingEndEvent;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pendingEndEvent = {
                            timestamp: Date.now(),
                            type: PlaybackEvents.ENDED,
                            data: {
                                reason: this.unexpectedEndReason,
                                position: position,
                            },
                        };
                        return [4, this.createAndUpdateMessage(__spreadArrays(this.sessionEvents, [pendingEndEvent]))];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    return EndVideoLoggerTracker;
}(EventsTracker));
export default EndVideoLoggerTracker;
//# sourceMappingURL=EndVideoLoggerTracker.js.map