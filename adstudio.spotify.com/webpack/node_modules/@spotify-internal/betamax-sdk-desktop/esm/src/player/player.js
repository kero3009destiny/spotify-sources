import shaka from './shaka';
var abrManager = new shaka.abr.SimpleAbrManager();
abrManager.configure({
    defaultBandwidthEstimate: 1000 * 1000 * 8,
});
var Player = (function () {
    function Player(target) {
        this.player = new shaka.Player(target);
    }
    Player.prototype.configure = function (config) {
        if (!config.abrFactory) {
            config.abrFactory = function () {
                return abrManager;
            };
        }
        return this.player.configure(config);
    };
    Player.prototype.getNetworkingEngine = function () {
        return this.player.getNetworkingEngine();
    };
    Player.prototype.load = function (manifestUri, startTime, manifestParserFactory) {
        return this.player.load(manifestUri, startTime, manifestParserFactory);
    };
    Player.prototype.unload = function () {
        return this.player.unload();
    };
    Player.prototype.keySystem = function () {
        return this.player.keySystem();
    };
    Player.prototype.getTextTracks = function () {
        return this.player.getTextTracks();
    };
    Player.prototype.getVariantTracks = function () {
        return this.player.getVariantTracks();
    };
    Player.prototype.getStats = function () {
        return this.player.getStats();
    };
    Player.prototype.addEventListener = function (type, listener, options) {
        return this.player.addEventListener(type, listener, options);
    };
    Player.prototype.removeEventListener = function (type, listener, options) {
        return this.player.removeEventListener(type, listener, options);
    };
    Player.prototype.selectTextLanguage = function (language, role) {
        return this.player.selectTextLanguage(language, role);
    };
    Player.prototype.setTextTrackVisibility = function (on) {
        return this.player.setTextTrackVisibility(on);
    };
    Player.prototype.isTextTrackVisible = function () {
        return this.player.isTextTrackVisible();
    };
    return Player;
}());
export default Player;
//# sourceMappingURL=player.js.map