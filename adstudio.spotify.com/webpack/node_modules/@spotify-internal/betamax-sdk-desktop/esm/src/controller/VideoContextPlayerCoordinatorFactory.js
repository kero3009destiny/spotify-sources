var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { SpotifyVideoMediaExtension } from '../plugins';
import BetamaxPlayerFactory from '../player/BetamaxPlayerFactory';
import VideoContextPlayerCoordinator from './VideoContextPlayerCoordinator';
import WidevineDownloader from '../plugins/WidevineDownloader';
import LegacyProductStateProvider from './LegacyProductStateProvider';
import { makeCosmosBackwardCompatible } from './CosmosBackwardCompatibityFitter';
var VideoContextPlayerCoordinatorFactory = (function () {
    function VideoContextPlayerCoordinatorFactory(configuration) {
        this.configuration = configuration;
    }
    VideoContextPlayerCoordinatorFactory.prototype.createVideoContextPlayerCoordinator = function () {
        var _this = this;
        var _a = this.configuration, productState = _a.productState, playerDependencies = _a.playerDependencies, getToken = _a.getToken, getWebgateHeaders = _a.getWebgateHeaders;
        var cosmos = makeCosmosBackwardCompatible(this.configuration.cosmos);
        var VideoPlayerErrorKM1 = playerDependencies.VideoPlayerErrorKM1;
        var logError = playerDependencies.endVideo && playerDependencies.endVideo.logError;
        var logWarn = playerDependencies.logWarn;
        var authTokenCallback = function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, accessToken, tokenType;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4, getToken()];
                    case 1:
                        _a = _b.sent(), accessToken = _a.accessToken, tokenType = _a.tokenType;
                        return [2, tokenType + " " + accessToken];
                }
            });
        }); };
        var widevineDownloader = new WidevineDownloader({ getWebgateHeaders: getWebgateHeaders, getToken: getToken }, cosmos);
        var manifestUrlTemplate = productState['video-manifest-url'];
        var mediaExtensions = [
            new SpotifyVideoMediaExtension(manifestUrlTemplate),
        ];
        if (playerDependencies.endVideo) {
            var live = playerDependencies.endVideo
                ? playerDependencies.endVideo.live
                : undefined;
            var clientModel = playerDependencies.endVideo
                ? playerDependencies.endVideo.clientModel
                : undefined;
            playerDependencies.endVideo.productStateProvider = new LegacyProductStateProvider(cosmos, live, clientModel, logError);
        }
        var betamaxPlayerFactory = new BetamaxPlayerFactory(__assign(__assign({}, playerDependencies), { mediaExtensions: mediaExtensions }));
        return new VideoContextPlayerCoordinator(__assign(__assign({}, this.configuration), { VideoPlayerErrorKM1: VideoPlayerErrorKM1,
            logError: logError,
            authTokenCallback: authTokenCallback,
            logWarn: logWarn,
            widevineDownloader: widevineDownloader,
            betamaxPlayerFactory: betamaxPlayerFactory }));
    };
    return VideoContextPlayerCoordinatorFactory;
}());
export default VideoContextPlayerCoordinatorFactory;
//# sourceMappingURL=VideoContextPlayerCoordinatorFactory.js.map