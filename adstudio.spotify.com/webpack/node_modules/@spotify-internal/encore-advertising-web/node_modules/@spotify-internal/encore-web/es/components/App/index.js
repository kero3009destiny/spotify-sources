import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { ThemeProvider } from 'styled-components';
import { KeyboardDetectionProvider } from "../KeyboardDetectionProvider";
import Aside from "./Aside";
import Banner from "./Banner";
import Container from "./Container";
import Content from "./Content";
import Main from "./Main";

var AppComponent = function App(_ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      navigation = _ref.navigation,
      contentMaxWidth = _ref.contentMaxWidth,
      sidebarWidth = _ref.sidebarWidth,
      banner = _ref.banner,
      content = _ref.content,
      footer = _ref.footer,
      _ref$useKeyboardDetec = _ref.useKeyboardDetection,
      useKeyboardDetection = _ref$useKeyboardDetec === void 0 ? true : _ref$useKeyboardDetec,
      props = _objectWithoutProperties(_ref, ["theme", "navigation", "contentMaxWidth", "sidebarWidth", "banner", "content", "footer", "useKeyboardDetection"]);

  var Wrapper = useKeyboardDetection ? KeyboardDetectionProvider : React.Fragment;
  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Container, props, /*#__PURE__*/React.createElement(Aside, {
    sidebarWidth: sidebarWidth
  }, navigation), /*#__PURE__*/React.createElement(Main, {
    contentMaxWidth: contentMaxWidth,
    sidebarWidth: sidebarWidth
  }, /*#__PURE__*/React.createElement(Banner, null, banner), /*#__PURE__*/React.createElement(Content, null, content), /*#__PURE__*/React.createElement("div", null, footer)))));
};

var appHelpers = {
  darkTheme: {
    app: 'dark'
  }
};
/**
* **App** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/App) | [Storybook](https://encore-web.spotify.net/?path=/story/components-app--default) | [Encore](https://encore.spotify.net/web/components/app-layout?format=figma-figma#app) | 
*
* The App component is a content wrapper that can use a combination of components to build a basic responsive layout structure.
*
* @example
* export const Default = () => (
*  <App
*    navigation={
*      <Navigation
*        header={
*          <Type as="h3" variant={Type.heading3} condensed>
*            Heading
*          </Type>
*        }
*      >
*        <NavigationList>
*          <NavigationListTitle>Group title</NavigationListTitle>
*          <NavigationListItem href="#first" active target="_blank">
*            Active link
*          </NavigationListItem>
*          <NavigationListItem href="#second">Default link</NavigationListItem>
*          <NavigationListItem href="#third" disabled>
*            Disabled link
*          </NavigationListItem>
*        </NavigationList>
*      </Navigation>
*    }
*    banner={<Banner variant="informational">Banner content</Banner>}
*    content={
*      <div>
*        <AppBanner>
*          <div style={{ background: gray85 }}>
*            <Type as="h1" variant={Type.heading1}>
*              Banner content with no padding
*            </Type>
*          </div>
*        </AppBanner>
*        <Type as="h2" variant={Type.heading2}>
*          Body title
*        </Type>
*        <Type as="p">Body content</Type>
*      </div>
*    }
*    footer={
*      <AppFooter
*        copyrightYear={2018}
*        list={defaultLinks.map(link => (
*          <AppFooterLink key={link.label} href={link.href} target="_blank">
*            {link.label}
*          </AppFooterLink>
*        ))}
*      />
*    }
*  />
*);
*
*/

export var App = Object.assign(AppComponent, appHelpers);
export default App;