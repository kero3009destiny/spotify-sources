import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import styled, { ThemeProvider } from 'styled-components';
import { rootStyle } from "../../styles";
import { Checkbox as FormCheckbox } from "../FormCheckbox/Checkbox";
import { Indicator as FormIndicator } from "../FormCheckbox/Indicator";
import { VisuallyHidden } from "../VisuallyHidden";
var Checkbox = styled(FormCheckbox).withConfig({
  displayName: "TableCheckbox__Checkbox",
  componentId: "r2l3y7-0"
})(["min-height:0;padding:0;"]);
var Indicator = styled(FormIndicator).withConfig({
  displayName: "TableCheckbox__Indicator",
  componentId: "r2l3y7-1"
})(["", ";top:0;"], rootStyle());
var TableCheckboxComponent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      indeterminate = _ref.indeterminate,
      props = _objectWithoutProperties(_ref, ["theme", "indeterminate"]);

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Checkbox, null, /*#__PURE__*/React.createElement(VisuallyHidden, Object.assign({
    component: "input",
    type: "checkbox",
    ref: ref
  }, props)), /*#__PURE__*/React.createElement(Indicator, {
    indeterminate: indeterminate
  })));
});
var tableCheckboxHelpers = {
  darkTheme: {
    tableCheckbox: 'dark'
  },
  displayName: 'TableCheckbox'
};
/**
* **TableCheckbox** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/TableCheckbox) | [Storybook](https://encore-web.spotify.net/?path=/story/components-table-tablecheckbox--default) | [Encore](https://encore.spotify.net/web/components/table?format=figma-figma#multi-select) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=561:30) |
*
* TableCheckbox renders checkboxes within cells, to be used at the beginning of a row to allow users to select multiple rows.
*
* @example
* export const Default = () => (
*  <Table>
*    <colgroup>
*      <col width="" />
*      <col width="25%" />
*      <col width="25%" />
*      <col width="25%" />
*      <col width="25%" />
*    </colgroup>
*    <tbody>
*      <TableRow>
*        <TableCell>
*          <TableCheckbox />
*        </TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*      </TableRow>
*      <TableRow>
*        <TableCell>
*          <TableCheckbox disabled />
*        </TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*        <TableCell>Cell</TableCell>
*      </TableRow>
*    </tbody>
*  </Table>
*);
*
*/

export var TableCheckbox = Object.assign(TableCheckboxComponent, tableCheckboxHelpers);
export default TableCheckbox;