/* stylelint-disable no-descending-specificity */
import { black, gray20, gray30, gray70, gray95, green, greenDark, greenLight, white } from '@spotify-internal/encore-foundation';
import styled from 'styled-components';
import { cursorDisabled, focusGapBorder, formCheckIndicator } from "../../styles";
import { colors, getColorOrDefault } from "../../styles/theme";

var isDarkTheme = function isDarkTheme(theme) {
  return theme.formRadio === 'dark';
};

export var Indicator = styled.span.withConfig({
  displayName: "Indicator",
  componentId: "sc-16vj7o8-0"
})(["", ";", " border:1px solid ", ";input:checked + label &::before{background-color:", ";border-radius:50%;content:'';height:0.5em;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:0.5em;}input:focus + label &::after{border-color:", ";}input:hover + label &{border-color:", ";}input:active + label &{border-color:", ";border-width:2px;}input:disabled:not(:checked) + label &{background:", ";border-color:", ";border-width:1px;cursor:", ";}input:checked + label &{background:", ";border-width:0;}input:checked:active + label &{background:", ";}input:checked:disabled + label &{background:", ";opacity:0.5;}"], formCheckIndicator('50%'), function (_ref) {
  var theme = _ref.theme,
      isUsingKeyboard = _ref.isUsingKeyboard;
  return focusGapBorder(isDarkTheme(theme), '50%', isUsingKeyboard);
}, function (_ref2) {
  var theme = _ref2.theme;
  return isDarkTheme(theme) ? gray30 : gray70;
}, white, function (_ref3) {
  var theme = _ref3.theme;
  return isDarkTheme(theme) ? white : black;
}, function (_ref4) {
  var theme = _ref4.theme;
  return getColorOrDefault(theme, colors.primaryColorHover, greenLight);
}, function (_ref5) {
  var theme = _ref5.theme;
  return getColorOrDefault(theme, colors.primaryColorActive, greenDark);
}, function (_ref6) {
  var theme = _ref6.theme;
  return isDarkTheme(theme) ? gray20 : gray95;
}, function (_ref7) {
  var theme = _ref7.theme;
  return isDarkTheme(theme) ? gray30 : gray70;
}, cursorDisabled, function (_ref8) {
  var theme = _ref8.theme;
  return getColorOrDefault(theme, colors.primaryColor, green);
}, function (_ref9) {
  var theme = _ref9.theme;
  return getColorOrDefault(theme, colors.primaryColorActive, greenDark);
}, function (_ref10) {
  var theme = _ref10.theme;
  return getColorOrDefault(theme, colors.primaryColor, green);
});