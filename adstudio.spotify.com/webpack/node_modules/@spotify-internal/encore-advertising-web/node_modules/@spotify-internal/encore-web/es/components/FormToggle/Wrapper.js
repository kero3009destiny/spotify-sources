/* stylelint-disable no-descending-specificity */
import { black, gray30, gray70, gray85, green, greenLight, spacer16, spacer20, white } from '@spotify-internal/encore-foundation';
import styled from 'styled-components';
import { cursorDisabled, focusGapBorder } from "../../styles";
import { colors, getColorOrDefault } from "../../styles/theme";
import { Indicator } from "./Indicator";
var borderRadius = 11;

var isDarkTheme = function isDarkTheme(props) {
  var _props$theme;

  return ((_props$theme = props.theme) == null ? void 0 : _props$theme.formToggle) === 'dark';
};
/** Basic styles */


export var Wrapper = styled.span.withConfig({
  displayName: "Wrapper",
  componentId: "ejvld4-0"
})(["background-color:", ";border-radius:", "px;height:", ";position:relative;width:30px;", ";input:focus ~ &::after,input:active:not([disabled]) ~ &{border-color:", ";}input:hover:not([disabled]):not(:active):not(:focus) ~ &{background-color:", ";}input:checked:hover:not([disabled]):not(:active):not(:focus) ~ &{background-color:", ";}input:active:not([disabled]) ~ &{", "{width:", ";}}input:checked ~ &{background-color:", ";", "{right:2px;left:auto;background-color:", ";}}input:disabled ~ &{opacity:0.4;cursor:", ";}"], function (props) {
  return isDarkTheme(props) ? gray30 : gray70;
}, borderRadius, spacer16, function (props) {
  return focusGapBorder(isDarkTheme(props), "".concat(borderRadius + 3, "px"), props.isUsingKeyboard);
}, function (props) {
  return isDarkTheme(props) ? white : black;
}, function (props) {
  return isDarkTheme(props) ? gray70 : gray85;
}, function (props) {
  return getColorOrDefault(props.theme, colors.primaryColorHover, greenLight);
}, Indicator, spacer20, function (props) {
  return getColorOrDefault(props.theme, colors.primaryColor, green);
}, Indicator, white, cursorDisabled);