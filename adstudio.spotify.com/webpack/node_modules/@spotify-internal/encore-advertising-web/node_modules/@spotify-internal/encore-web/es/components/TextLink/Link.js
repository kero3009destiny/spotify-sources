import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

/* stylelint-disable no-descending-specificity */
import React from 'react';
import { gray10, gray20, gray50, gray70, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { buttonLinkReset, focusTransitionFade, focusTransitionType, linkActiveColor, linkHoverColor, linkHoverDecoration, rootStyle } from "../../styles";
import { colors, getColorOrDefault } from "../../styles/theme";

var isDarkTheme = function isDarkTheme(theme) {
  return theme.textLink === 'dark';
}; // eslint-disable-next-line prefer-arrow-callback


export var Link = styled( /*#__PURE__*/React.forwardRef(function TextLink(_ref, ref) {
  var _ref$component = _ref.component,
      Component = _ref$component === void 0 ? 'a' : _ref$component,
      isUsingKeyboard = _ref.isUsingKeyboard,
      standalone = _ref.standalone,
      textColor = _ref.textColor,
      props = _objectWithoutProperties(_ref, ["component", "isUsingKeyboard", "standalone", "textColor"]);

  return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {
    ref: ref
  }));
})).withConfig({
  displayName: "Link",
  componentId: "sc-1ci8k3a-0"
})(["", ";", ";color:", ";align-items:center;text-decoration:none;&[href],&:hover:not([disabled]):not(:focus){text-decoration:", ";}&[href]:focus:not([disabled]){outline:none;", ";}&[href]:hover:not([disabled]){color:", ";}&[href]:active:not([disabled]){color:", ";}", " ", " &[disabled]{opacity:0.4;cursor:not-allowed;}"], rootStyle(), function (props) {
  return props.component === 'button' && css(["", ";font-size:inherit;"], buttonLinkReset());
}, function (props) {
  return props.textColor;
}, linkHoverDecoration, function (props) {
  return props.isUsingKeyboard && css(["box-shadow:0 3px 0 0 ", ";transition:box-shadow ", " ", ";text-decoration:none;"], function (_ref2) {
    var theme = _ref2.theme;
    return isDarkTheme(theme) ? white : gray10;
  }, focusTransitionFade, focusTransitionType);
}, function (props) {
  return getColorOrDefault(props.theme, colors.primaryColorHover, linkHoverColor);
}, function (props) {
  return getColorOrDefault(props.theme, colors.primaryColorActive, linkActiveColor);
}, function (props) {
  return props.standalone && css(["display:inline-flex;&,&[href],&[href]:focus:not([disabled]){text-decoration:none;}&,&[href]:hover:not([disabled]){color:", ";text-decoration:", ";}&[href]:active:not([disabled]){color:", ";text-decoration:", ";}"], function (_ref3) {
    var theme = _ref3.theme;
    return isDarkTheme(theme) ? gray70 : gray50;
  }, linkHoverDecoration, function (_ref4) {
    var theme = _ref4.theme;
    return isDarkTheme(theme) ? gray70 : gray20;
  }, linkHoverDecoration);
}, function (props) {
  return props.standalone && props.isUsingKeyboard && css(["&[href]:focus:not([disabled]){color:", ";text-decoration:none;}"], function (_ref5) {
    var theme = _ref5.theme;
    return isDarkTheme(theme) ? white : gray10;
  });
});