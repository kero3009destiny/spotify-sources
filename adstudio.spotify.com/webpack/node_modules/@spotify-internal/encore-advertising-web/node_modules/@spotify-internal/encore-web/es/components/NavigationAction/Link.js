import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { green, greenDark, greenFocus, greenLight, screenSmMin, screenXsMax, spacer16, spacer24, spacer48, spacer64, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { transitionFade } from "../../styles";
import { colors, getColorOrDefault } from "../../styles/theme";

var backgroundDefault = function backgroundDefault(props) {
  return getColorOrDefault(props.theme, colors.primaryColor, green);
};

var backgroundHover = function backgroundHover(props) {
  return getColorOrDefault(props.theme, colors.primaryColorHover, greenLight);
};

var backgroundFocus = function backgroundFocus(props) {
  return getColorOrDefault(props.theme, colors.primaryColorFocus, greenFocus);
};

var backgroundActive = function backgroundActive(props) {
  return getColorOrDefault(props.theme, colors.primaryColorActive, greenDark);
};

// eslint-disable-next-line prefer-arrow-callback
export var Link = styled(function NavigationActionLink(_ref) {
  var Component = _ref.component,
      active = _ref.active,
      disabled = _ref.disabled,
      props = _objectWithoutProperties(_ref, ["component", "active", "disabled"]);

  return /*#__PURE__*/React.createElement(Component, props);
}).withConfig({
  displayName: "Link",
  componentId: "ryedog-0"
})(["@media (max-width:", "){position:absolute;top:", ";right:", ";}@media (min-width:", "){height:", ";width:calc(100% + ", ");display:flex;margin-left:-", ";margin-right:-", ";margin-bottom:-", ";}color:", ";background-color:", ";display:flex;justify-content:center;align-items:center;line-height:1;position:relative;transition:color ", ";&:hover{background-color:", ";}&:focus{background-color:", ";}&:active{&,&:hover{background-color:", ";}}", ";@media (max-width:", "){border-radius:2px;}"], screenXsMax, spacer16, spacer16, screenSmMin, spacer64, spacer48, spacer24, spacer24, spacer24, white, backgroundDefault, transitionFade, backgroundHover, backgroundFocus, backgroundActive, function (props) {
  return props.disabled && css(["&,&:focus,&:active,&:hover{opacity:0.4;cursor:not-allowed;}&:hover,&:focus,&:active{&,&:hover{background-color:", ";}}"], backgroundDefault);
}, screenXsMax);