import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useState } from 'react';
import { ThemeProvider } from 'styled-components';
import { Body } from "./Body";
import { Dialog } from "./Dialog";
import { Footer } from "./Footer";
import { Header } from "./Header";
import { Legal } from "./Legal";
import { LegalContainer } from "./LegalContainer";
import { Title } from "./Title";
var DialogConfirmationComponent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var dialogTitle = _ref.dialogTitle,
      body = _ref.body,
      footer = _ref.footer,
      legal = _ref.legal,
      legalStrict = _ref.legalStrict,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["dialogTitle", "body", "footer", "legal", "legalStrict", "theme"]);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      hasBorder = _useState2[0],
      setHasBorder = _useState2[1];

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({
    ref: ref
  }, props), /*#__PURE__*/React.createElement(Header, {
    hasBorder: hasBorder
  }, /*#__PURE__*/React.createElement(Title, null, dialogTitle)), /*#__PURE__*/React.createElement(Body, {
    onScroll: function onScroll(e) {
      return setHasBorder(e.target instanceof HTMLElement && e.target.scrollTop !== 0);
    }
  }, body), /*#__PURE__*/React.createElement(Footer, null, legal && /*#__PURE__*/React.createElement(LegalContainer, {
    legalStrict: legalStrict
  }, /*#__PURE__*/React.createElement(Legal, {
    legalStrict: legalStrict
  }, legal)), footer)));
});
var dialogConfirmationHelpers = {
  darkTheme: {
    dialogConfirmation: 'dark'
  }
};
/**
* **DialogConfirmation** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/DialogConfirmation) | [Storybook](https://encore-web.spotify.net/?path=/story/components-dialog-dialogconfirmation--default) | [Encore](https://encore.spotify.net/web/components/dialog?format=figma-figma#dialogconfirmation) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=286:370) |
*
* DialogConfirmation requires that the user confirm the information and uses a primary button.
*
* @example
* export const Default = () => (
*  <DialogConfirmation
*    dialogTitle="Title"
*    aria-label="Title"
*    aria-describedby="dialogBody"
*    body={
*      <div id="dialogBody">
*        <Type as="p">
*          Aenean lacinia bibendum nulla sed consectetur. Cras justo odio, dapibus ac facilisis in,
*          egestas eget quam. Duis mollis, est non commodo luctus.
*        </Type>
*        <Type as="p" condensed>
*          Etiam porta sem malesuada magna mollis euismod. Lorem ipsum dolor sit amet, consectetur
*          adipiscing elit.
*        </Type>
*      </div>
*    }
*    footer={
*      <div>
*        <ButtonTertiary buttonSize={ButtonTertiary.sm} condensed>
*          Cancel
*        </ButtonTertiary>
*        <ButtonPrimary buttonSize={ButtonTertiary.sm}>Accept</ButtonPrimary>
*      </div>
*    }
*  />
*);
*
*/

export var DialogConfirmation = Object.assign(DialogConfirmationComponent, dialogConfirmationHelpers);
export default DialogConfirmation;