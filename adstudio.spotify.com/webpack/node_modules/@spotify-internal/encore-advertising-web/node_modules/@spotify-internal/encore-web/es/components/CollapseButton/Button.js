/* stylelint-disable no-descending-specificity */
import styled from 'styled-components';
import { buttonLinkReset, focusBottomBorder, rootStyle, typeStyleBody2 } from "../../styles";

var isDarkTheme = function isDarkTheme(theme) {
  return theme.collapseButton === 'dark';
};

export var Button = styled.button.withConfig({
  displayName: "Button",
  componentId: "q28wjq-0"
})(["", ";", ";", ";display:inline-flex;align-items:center;color:", ";&:hover:not(:focus):not(:disabled){color:", ";}&:active{color:", ";}&[disabled]{color:", ";cursor:not-allowed;}", ""], rootStyle(), buttonLinkReset(), typeStyleBody2(), function (_ref) {
  var theme = _ref.theme;
  return isDarkTheme(theme) ? 'rgba(255,255,255,0.54)' : 'rgba(0,0,0,0.54)';
}, function (_ref2) {
  var theme = _ref2.theme;
  return isDarkTheme(theme) ? 'rgba(255,255,255,1.0)' : 'rgba(24,24,24,1.0)';
}, function (_ref3) {
  var theme = _ref3.theme;
  return isDarkTheme(theme) ? 'rgba(255,255,255,0.62)' : 'rgba(0,0,0,0.62)';
}, function (_ref4) {
  var theme = _ref4.theme;
  return isDarkTheme(theme) ? 'rgba(255,255,255,0.22)' : 'rgba(0,0,0,0.22)';
}, function (_ref5) {
  var theme = _ref5.theme,
      isUsingKeyboard = _ref5.isUsingKeyboard;
  return focusBottomBorder(isDarkTheme(theme), undefined, isUsingKeyboard);
});