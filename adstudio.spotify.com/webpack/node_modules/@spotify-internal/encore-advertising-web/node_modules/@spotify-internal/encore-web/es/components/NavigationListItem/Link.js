import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

/* stylelint-disable no-descending-specificity */
import React from 'react';
import { gray70, green, screenSmMin, screenXsMax, spacer12, spacer16, spacer24, spacer40, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { fontWeightBold, fontWeightBook, transitionFade, typeStyleBody2, typeStyleBody3 } from "../../styles";
import { colors, getColorOrDefault } from "../../styles/theme";
import List from "../NavigationList/List";
import { ListItem } from "./ListItem";
// eslint-disable-next-line prefer-arrow-callback
export var Link = styled(function NavigationListItemLink(_ref) {
  var Component = _ref.component,
      active = _ref.active,
      disabled = _ref.disabled,
      props = _objectWithoutProperties(_ref, ["component", "active", "disabled"]);

  return /*#__PURE__*/React.createElement(Component, props);
}).withConfig({
  displayName: "Link",
  componentId: "iwma1b-0"
})(["color:", ";display:block;position:relative;transition:color ", ";text-decoration:none;", ":last-child ", ":last-child &{@media (max-width:", "){margin-right:0;}}&:focus,&:hover{color:", ";outline:none;}&:active{color:", ";}", ";", ";@media (max-width:", "){", ";line-height:1;margin-right:", ";padding:", " ", ";}@media (min-width:", "){", ";line-height:1;font-weight:", ";overflow:hidden;padding:9px ", ";text-overflow:ellipsis;white-space:nowrap;}", " ", " &{@media (min-width:", "){padding-left:", ";font-weight:", ";}}"], gray70, transitionFade, List, ListItem, screenXsMax, white, white, function (props) {
  return props.active && css(["&,&:hover{color:", ";}&::after{content:'';left:0;position:absolute;@media (max-width:", "){border-bottom:3px solid ", ";bottom:0;right:0;}@media (min-width:", "){border-left:4px solid ", ";height:18px;top:6px;}}"], white, screenXsMax, getColorOrDefault(props.theme, colors.primaryColor, green), screenSmMin, getColorOrDefault(props.theme, colors.primaryColor, green));
}, function (props) {
  return props.disabled && css(["&,&:focus,&:active,&:hover{opacity:0.4;pointer-events:none;}&::after{border-color:transparent;}"]);
}, screenXsMax, typeStyleBody3(), spacer16, spacer12, spacer16, screenSmMin, typeStyleBody2(), fontWeightBold, spacer24, List, List, screenSmMin, spacer40, fontWeightBook);