import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useContext } from 'react';
import { ThemeProvider } from 'styled-components';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { Arrow } from "./Arrow";
import { Button } from "./Button";
import { Container } from "./Container";

function DropdownComponent(_ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["theme"]);

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Button, Object.assign({
    isUsingKeyboard: isUsingKeyboard,
    "aria-haspopup": "listbox"
  }, props)), /*#__PURE__*/React.createElement(Arrow, null)));
}

var dropdownHelpers = {
  darkTheme: {
    dropdown: 'dark'
  }
};
/**
* **Dropdown** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/Dropdown) | [Storybook](https://encore-web.spotify.net/?path=/story/components-dropdown--default) | [Encore](https://encore.spotify.net/web/components/dropdown) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=423:1180) |
*
* Dropdown displays a list of choices on a temporary surface. it is intended for a list of sub-actions or links and appears when users interact with a button, action, or other control.
*
* @example
* export const Default = () => <Dropdown>Dropdown</Dropdown>;
*
*/

export var Dropdown = Object.assign(DropdownComponent, dropdownHelpers);
export default Dropdown;