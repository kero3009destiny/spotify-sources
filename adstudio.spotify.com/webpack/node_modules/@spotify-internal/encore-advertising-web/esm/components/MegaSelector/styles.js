import { aquamarine, body2FontSize, body2FontWeight, body2LetterSpacing, body2LineHeight, gray50, gray70, spacer16, spacer8, Type, white, } from '@spotify-internal/encore-web';
import styled, { css } from 'styled-components';
import { plum } from '../../styles/colors';
import { Box } from '../Box';
import { LabelGroup } from '../LabelGroup';
export const Heading = styled.div `
  text-align: left;
`;
export const Icon = styled.div `
  min-width: fit-content;
`;
export const SlideInWrapper = styled.div ``;
export const ChildrenWrapper = styled.div `
  margin-top: ${spacer16};
`;
export const ContentGrid = styled.div `
  display: grid;
  align-items: center;
  column-gap: ${spacer16};
  height: 100%;
  ${props => props.inline &&
    css `
      grid-template-columns: auto 1fr;
      ${SlideInWrapper} {
        grid-column: 2 / -1;
      }
    `}
`;
export const StyledRadio = styled.div `
  align-self: ${props => (props.inline ? 'auto' : 'start')};
  margin-bottom: ${props => (props.inline ? '0px' : spacer8)};
  &&& > div {
    min-height: unset;
    padding: 0;
    & label {
      display: flex;
      > span {
        top: 0;
      }
    }
    ${props => !props.disabled &&
    css `
        & input:checked + label > span {
          background: ${!props.highlightOnChecked || props.disabled
        ? plum
        : aquamarine};
          &:before {
            background: ${!props.highlightOnChecked ? aquamarine : plum};
          }
        }
      `}
  }
`;
export const LabelAndDescription = styled.div `
  display: flex;
  flex-direction: column;
  align-items: ${props => (props.inline ? 'flex-start' : 'center')};
`;
export const StyledLabelGroup = styled(LabelGroup) `
  user-select: none;
`;
export const Description = styled(Type) `
  user-select: none;
  font-size: ${body2FontSize};
  letter-spacing: ${body2LetterSpacing};
  line-height: ${body2LineHeight};
  font-weight: ${body2FontWeight};
  color: ${gray50};
`;
export const StyledBox = styled(Box) `
  ${props => props.checked &&
    props.highlightOnChecked &&
    css `
      &&& ${StyledLabelGroup}, &&& ${Description}, &&& ${Icon}, &&& ${Heading} {
        &,
        * {
          color: ${white};
        }
        &[stroke='#181818'],
        *[stroke='#181818'],
        &[stroke='${plum}'],
        *[stroke='${plum}'] {
          stroke: ${white};
        }
        &[fill='#181818'],
        *[fill='#181818'],
        &[fill='${plum}'],
        *[fill='${plum}'] {
          fill: ${white};
        }
      }
    `}
  ${props => props.disabled &&
    css `
      &&& ${StyledLabelGroup}, &&& ${Description}, &&& ${Icon}, &&& ${Heading} {
        &,
        * {
          color: ${gray70};
        }
        &[stroke='#181818'],
        *[stroke='#181818'],
        &[stroke='${plum}'],
        *[stroke='${plum}'] {
          stroke: ${gray70};
        }
        &[fill='#181818'],
        *[fill='#181818'],
        &[fill='${plum}'],
        *[fill='${plum}'] {
          fill: ${gray70};
        }
      }
    `}
`;
//# sourceMappingURL=styles.js.map