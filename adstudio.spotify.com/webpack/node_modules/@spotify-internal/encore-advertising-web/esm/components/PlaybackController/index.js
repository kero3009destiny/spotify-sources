import React from 'react';
import { PlayPauseButton } from '../PlayPauseButton';
import { HStack, VStack } from '../Stack';
import { PlaybackScrubber, } from '../PlaybackScrubber';
import { gray10, spacer12, spacer8, Type, white, TextLink, spacer72, } from '@spotify-internal/encore-web';
import { PlaybackTimecode } from '../PlaybackTimecode';
import styled from 'styled-components';
const EllipsisType = styled(Type.p) `
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
`;
const StyledHStack = styled(HStack) `
  div {
    min-width: 0;
  } // hack to get ellipsis type to work
`;
export const PlaybackController = ({ className, overMedia, paused, animated, time, duration, name, nameUrl, disabled, onScrub, onPlay, onPause, }) => (React.createElement(StyledHStack, { className: className, gap: spacer8, flex: 1 },
    React.createElement(PlayPauseButton, { iconSize: 64, paused: paused, onPause: onPause, onPlay: onPlay, overMedia: overMedia, animated: animated, disabled: disabled }),
    React.createElement(VStack, { gap: spacer12, flex: 1 },
        React.createElement(PlaybackScrubber, { time: time, duration: duration, onScrub: onScrub, overMedia: overMedia, disabled: disabled }),
        React.createElement(HStack, { gap: spacer72, flex: 1 },
            React.createElement(HStack.Item, { flex: 1 },
                React.createElement(EllipsisType, { condensed: true, variant: Type.body2, color: overMedia ? white : gray10 }, nameUrl ? React.createElement(TextLink, { href: nameUrl }, name) : name)),
            React.createElement(PlaybackTimecode, { color: overMedia ? white : undefined, time: time, duration: duration })))));
//# sourceMappingURL=index.js.map