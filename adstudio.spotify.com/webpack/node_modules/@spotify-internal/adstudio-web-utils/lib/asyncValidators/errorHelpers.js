"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDurationRange = getDurationRange;
exports.getDurationErrorMessage = getDurationErrorMessage;
exports.getGenericErrorMessage = getGenericErrorMessage;
exports.getVideoAspectRatioErrorMessage = getVideoAspectRatioErrorMessage;
exports.getVideoMinWidthHeightErrorMessage = getVideoMinWidthHeightErrorMessage;
exports.buildErrorObject = buildErrorObject;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _createAd = require("../constants/createAd");

var _i18n = require("../utils/i18n");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getDurationRange() {
  return [_createAd.MIN_AUDIO_DURATION, _createAd.MAX_AUDIO_DURATION];
}

function getDurationErrorMessage(maxDuration, duration) {
  var maxDurationCopy = maxDuration ? maxDuration : _createAd.MAX_AUDIO_DURATION;
  return (0, _i18n.getString)(_i18n.stringsEnum.AUDIO_DURATION_ERROR)({
    duration: Math.round(duration),
    maxDuration: maxDurationCopy - 1
  });
}

function getGenericErrorMessage(fileType) {
  return "Something went wrong trying to validate your ".concat(fileType, ".  Your file may be corrupted or is not loadable by this browser.");
}

function getVideoAspectRatioErrorMessage(videoWidth, videoHeight, isLandscape) {
  if (!isLandscape) {
    return (0, _i18n.getString)(_i18n.stringsEnum.VIDEO_ASPECT_RATIO_ERROR_PORTRAIT)({
      videoWidth: videoWidth,
      videoHeight: videoHeight
    });
  }

  return (0, _i18n.getString)(_i18n.stringsEnum.VIDEO_ASPECT_RATIO_ERROR_LANDSCAPE)({
    videoWidth: videoWidth,
    videoHeight: videoHeight
  });
}

function getVideoMinWidthHeightErrorMessage(videoWidth, videoHeight, isLandscape) {
  if (!isLandscape) {
    return (0, _i18n.getString)(_i18n.stringsEnum.VIDEO_MIN_WIDTH_ERROR_PORTRAIT)({
      videoWidth: videoWidth,
      videoHeight: videoHeight
    });
  }

  return (0, _i18n.getString)(_i18n.stringsEnum.VIDEO_MIN_WIDTH_ERROR_LANDSCAPE)({
    videoWidth: videoWidth,
    videoHeight: videoHeight
  });
}

function buildErrorObject(field, existingErrors, errorMsg) {
  var splitFields = field.split('.');
  var result = {};
  var currentObj = result;

  for (var i = 0; i < splitFields.length; i++) {
    var key = splitFields[i];
    currentObj[key] = i === splitFields.length - 1 ? errorMsg : {};
    currentObj = currentObj[key];
  }

  return _objectSpread(_objectSpread({}, existingErrors), result);
}
//# sourceMappingURL=errorHelpers.js.map