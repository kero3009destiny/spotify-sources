/**
 * @fileoverview gRPC-Web generated client stub for com.spotify.adstudioasset
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!



const grpc = {};
grpc.web = require('grpc-web');


var com_spotify_ads_protobuf_base_pb = require('../../../com/spotify/ads/protobuf/base_pb.js')

var com_spotify_ads_protobuf_annotations_pb = require('../../../com/spotify/ads/protobuf/annotations_pb.js')

var com_spotify_adstudioasset_model_pb = require('../../../com/spotify/adstudioasset/model_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.com = {};
proto.com.spotify = {};
proto.com.spotify.adstudioasset = require('./service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.CreateVoiceOverRequest,
 *   !proto.com.spotify.adstudioasset.CreateVoiceOverResponse>}
 */
const methodDescriptor_AdstudioAssetService_createVoiceOver = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/createVoiceOver',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.CreateVoiceOverRequest,
  proto.com.spotify.adstudioasset.CreateVoiceOverResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.CreateVoiceOverRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CreateVoiceOverResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.CreateVoiceOverRequest,
 *   !proto.com.spotify.adstudioasset.CreateVoiceOverResponse>}
 */
const methodInfo_AdstudioAssetService_createVoiceOver = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.CreateVoiceOverResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.CreateVoiceOverRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CreateVoiceOverResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.CreateVoiceOverRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.CreateVoiceOverResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.CreateVoiceOverResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.createVoiceOver =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/createVoiceOver',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_createVoiceOver,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.CreateVoiceOverRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.CreateVoiceOverResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.createVoiceOver =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/createVoiceOver',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_createVoiceOver);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetVoiceOverRequest,
 *   !proto.com.spotify.adstudioasset.VoiceOverResponse>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceOver = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceOver',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetVoiceOverRequest,
  proto.com.spotify.adstudioasset.VoiceOverResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetVoiceOverRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceOverResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetVoiceOverRequest,
 *   !proto.com.spotify.adstudioasset.VoiceOverResponse>}
 */
const methodInfo_AdstudioAssetService_getVoiceOver = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceOverResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetVoiceOverRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceOverResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetVoiceOverRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceOverResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceOverResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceOver =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceOver',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceOver,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetVoiceOverRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceOverResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceOver =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceOver',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceOver);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.FullMixUploadRequest,
 *   !proto.com.spotify.adstudioasset.FullMixUploadResponse>}
 */
const methodDescriptor_AdstudioAssetService_uploadFullMix = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/uploadFullMix',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.FullMixUploadRequest,
  proto.com.spotify.adstudioasset.FullMixUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.FullMixUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixUploadResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.FullMixUploadRequest,
 *   !proto.com.spotify.adstudioasset.FullMixUploadResponse>}
 */
const methodInfo_AdstudioAssetService_uploadFullMix = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.FullMixUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.FullMixUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixUploadResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.FullMixUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.FullMixUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.FullMixUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.uploadFullMix =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadFullMix',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadFullMix,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.FullMixUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.FullMixUploadResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.uploadFullMix =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadFullMix',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadFullMix);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse>}
 */
const methodDescriptor_AdstudioAssetService_uploadBackgroundMusic = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/uploadBackgroundMusic',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest,
  proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse>}
 */
const methodInfo_AdstudioAssetService_uploadBackgroundMusic = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.uploadBackgroundMusic =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadBackgroundMusic',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadBackgroundMusic,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.BackgroundMusicUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.BackgroundMusicUploadResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.uploadBackgroundMusic =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadBackgroundMusic',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadBackgroundMusic);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.ImageUploadRequest,
 *   !proto.com.spotify.adstudioasset.ImageUploadResponse>}
 */
const methodDescriptor_AdstudioAssetService_uploadImage = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/uploadImage',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.ImageUploadRequest,
  proto.com.spotify.adstudioasset.ImageUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.ImageUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageUploadResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.ImageUploadRequest,
 *   !proto.com.spotify.adstudioasset.ImageUploadResponse>}
 */
const methodInfo_AdstudioAssetService_uploadImage = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.ImageUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.ImageUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageUploadResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.ImageUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.ImageUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.ImageUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.uploadImage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadImage',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadImage,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.ImageUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.ImageUploadResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.uploadImage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadImage',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadImage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.CreateMixRequest,
 *   !proto.com.spotify.adstudioasset.CreateMixResponse>}
 */
const methodDescriptor_AdstudioAssetService_mix = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/mix',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.CreateMixRequest,
  proto.com.spotify.adstudioasset.CreateMixResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.CreateMixRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CreateMixResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.CreateMixRequest,
 *   !proto.com.spotify.adstudioasset.CreateMixResponse>}
 */
const methodInfo_AdstudioAssetService_mix = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.CreateMixResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.CreateMixRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CreateMixResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.CreateMixRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.CreateMixResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.CreateMixResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.mix =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/mix',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_mix,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.CreateMixRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.CreateMixResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.mix =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/mix',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_mix);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getImageAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getImageAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.ImageAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getImageAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImageAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getImageAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImageAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getBackgroundMusicBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getBackgroundMusicBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getBackgroundMusicBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getBackgroundMusicBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getBackgroundMusicBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getBackgroundMusicBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getBackgroundMusicBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getBackgroundMusicBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getBackgroundMusicBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoverSamples = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverSamples',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVoiceoverSamples = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoverSamples =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverSamples',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverSamples,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceoverSampleAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoverSamples =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverSamples',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverSamples);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getImageAssetBatchInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatchInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getImageAssetBatchInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.ImageAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getImageAssetBatchInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImageAssetBatchInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getImageAssetBatchInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImageAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImageAssetBatchInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVideoAssetBatchInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatchInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVideoAssetBatchInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VideoAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVideoAssetBatchInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideoAssetBatchInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVideoAssetBatchInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideoAssetBatchInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AudioResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getAudioBatchInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAudioBatchInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.AudioResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AudioResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AudioResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getAudioBatchInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.AudioResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AudioResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.AudioResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.AudioResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAudioBatchInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAudioBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAudioBatchInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.AudioResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAudioBatchInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAudioBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAudioBatchInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest,
 *   !proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoverMixesWithVoiceoversPendingApproval = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverMixesWithVoiceoversPendingApproval',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest,
  proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest,
 *   !proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse>}
 */
const methodInfo_AdstudioAssetService_getVoiceoverMixesWithVoiceoversPendingApproval = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoverMixesWithVoiceoversPendingApproval =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverMixesWithVoiceoversPendingApproval',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverMixesWithVoiceoversPendingApproval,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByBatchAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.GetVoiceoverMixesWithVoiceoversPendingApprovalResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoverMixesWithVoiceoversPendingApproval =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverMixesWithVoiceoversPendingApproval',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverMixesWithVoiceoversPendingApproval);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getAssetBatchInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatchInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.AssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getAssetBatchInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.AssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.AssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.AssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAssetBatchInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAssetBatchInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.AssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAssetBatchInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAssetBatchInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.AssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.AssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.AssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.AssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.AssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.AssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.AssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getFullMixAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getFullMixAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.FullMixAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getFullMixAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getFullMixAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getFullMixAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getFullMixAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getMixAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getMixAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.MixAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getMixAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getMixAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getMixAssetBatchByVoiceOverId = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByVoiceOverId',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest,
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getMixAssetBatchByVoiceOverId = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.MixAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getMixAssetBatchByVoiceOverId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByVoiceOverId',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatchByVoiceOverId,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getMixAssetBatchByVoiceOverId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByVoiceOverId',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatchByVoiceOverId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getMixAssetBatchByProjectId = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByProjectId',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest,
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest,
 *   !proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getMixAssetBatchByProjectId = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.MixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.MixAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.MixAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getMixAssetBatchByProjectId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByProjectId',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatchByProjectId,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetMixAssetBatchByVoiceOverProjectIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.MixAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getMixAssetBatchByProjectId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getMixAssetBatchByProjectId',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getMixAssetBatchByProjectId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_approveVoiceoverScript = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverScript',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_approveVoiceoverScript = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.approveVoiceoverScript =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverScript',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverScript,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.approveVoiceoverScript =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverScript',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverScript);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_approveVoiceoverForUser = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForUser',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_approveVoiceoverForUser = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.approveVoiceoverForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForUser',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverForUser,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.approveVoiceoverForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForUser',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_approveVoiceoverForAdmin = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForAdmin',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverApprovalRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_approveVoiceoverForAdmin = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.approveVoiceoverForAdmin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForAdmin',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverForAdmin,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverApprovalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.approveVoiceoverForAdmin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/approveVoiceoverForAdmin',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_approveVoiceoverForAdmin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_rejectVoiceoverScript = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverScript',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_rejectVoiceoverScript = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.rejectVoiceoverScript =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverScript',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverScript,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.rejectVoiceoverScript =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverScript',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverScript);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_rejectVoiceoverForUser = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForUser',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_rejectVoiceoverForUser = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.rejectVoiceoverForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForUser',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverForUser,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.rejectVoiceoverForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForUser',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_rejectVoiceoverForAdmin = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForAdmin',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverRejectionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_rejectVoiceoverForAdmin = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.rejectVoiceoverForAdmin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForAdmin',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverForAdmin,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRejectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.rejectVoiceoverForAdmin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/rejectVoiceoverForAdmin',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_rejectVoiceoverForAdmin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverRevisionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_reviseVoiceover = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/reviseVoiceover',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverRevisionRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRevisionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverRevisionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_reviseVoiceover = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverRevisionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRevisionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.reviseVoiceover =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/reviseVoiceover',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_reviseVoiceover,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverRevisionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.reviseVoiceover =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/reviseVoiceover',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_reviseVoiceover);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVoiceoverAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoverAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoverAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatchInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatchInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVoiceoverAssetBatchInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoverAssetBatchInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatchInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoverAssetBatchInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverAssetBatchInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverAssetBatchInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoversWithStatusInternal = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoversWithStatusInternal',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest,
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest,
 *   !proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVoiceoversWithStatusInternal = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoversWithStatusInternal =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoversWithStatusInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoversWithStatusInternal,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VoiceoverWithStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceoverAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoversWithStatusInternal =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoversWithStatusInternal',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoversWithStatusInternal);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getAllStockBackgroundMusic = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockBackgroundMusic',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getAllStockBackgroundMusic = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAllStockBackgroundMusic =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockBackgroundMusic',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAllStockBackgroundMusic,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.BackgroundMusicAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAllStockBackgroundMusic =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockBackgroundMusic',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAllStockBackgroundMusic);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getImagesByAccount = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getImagesByAccount',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getImagesByAccount = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.ImageAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getImagesByAccount =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImagesByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImagesByAccount,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getImagesByAccount =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getImagesByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getImagesByAccount);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getFullMixAudioByAccount = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAudioByAccount',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getFullMixAudioByAccount = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.FullMixAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.FullMixAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getFullMixAudioByAccount =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAudioByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getFullMixAudioByAccount,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.FullMixAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getFullMixAudioByAccount =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getFullMixAudioByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getFullMixAudioByAccount);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.VoiceoverOptionsResponse>}
 */
const methodDescriptor_AdstudioAssetService_getVoiceoverOptions = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverOptions',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.adstudioasset.VoiceoverOptionsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverOptionsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.VoiceoverOptionsResponse>}
 */
const methodInfo_AdstudioAssetService_getVoiceoverOptions = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VoiceoverOptionsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VoiceoverOptionsResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VoiceoverOptionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VoiceoverOptionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVoiceoverOptions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverOptions',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverOptions,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VoiceoverOptionsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVoiceoverOptions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVoiceoverOptions',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVoiceoverOptions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.CallToActionOptionsResponse>}
 */
const methodDescriptor_AdstudioAssetService_getCallToActionOptions = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getCallToActionOptions',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.adstudioasset.CallToActionOptionsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CallToActionOptionsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.CallToActionOptionsResponse>}
 */
const methodInfo_AdstudioAssetService_getCallToActionOptions = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.CallToActionOptionsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.CallToActionOptionsResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.CallToActionOptionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.CallToActionOptionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getCallToActionOptions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getCallToActionOptions',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getCallToActionOptions,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.CallToActionOptionsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getCallToActionOptions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getCallToActionOptions',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getCallToActionOptions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAudioMatchesRequest,
 *   !proto.com.spotify.adstudioasset.GetAudioMatchesResponse>}
 */
const methodDescriptor_AdstudioAssetService_getAudioMatches = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAudioMatches',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAudioMatchesRequest,
  proto.com.spotify.adstudioasset.GetAudioMatchesResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAudioMatchesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.GetAudioMatchesResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAudioMatchesRequest,
 *   !proto.com.spotify.adstudioasset.GetAudioMatchesResponse>}
 */
const methodInfo_AdstudioAssetService_getAudioMatches = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.GetAudioMatchesResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAudioMatchesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.GetAudioMatchesResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAudioMatchesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.GetAudioMatchesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.GetAudioMatchesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAudioMatches =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAudioMatches',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAudioMatches,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAudioMatchesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.GetAudioMatchesResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAudioMatches =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAudioMatches',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAudioMatches);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.UpdateAudioMatchRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AdstudioAssetService_updateAudioMatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/updateAudioMatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.UpdateAudioMatchRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.UpdateAudioMatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.UpdateAudioMatchRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodInfo_AdstudioAssetService_updateAudioMatch = new grpc.web.AbstractClientBase.MethodInfo(
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.com.spotify.adstudioasset.UpdateAudioMatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.UpdateAudioMatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.updateAudioMatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/updateAudioMatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_updateAudioMatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.UpdateAudioMatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.updateAudioMatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/updateAudioMatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_updateAudioMatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VideoUploadRequest,
 *   !proto.com.spotify.adstudioasset.VideoUploadResponse>}
 */
const methodDescriptor_AdstudioAssetService_uploadVideo = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/uploadVideo',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VideoUploadRequest,
  proto.com.spotify.adstudioasset.VideoUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.VideoUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoUploadResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VideoUploadRequest,
 *   !proto.com.spotify.adstudioasset.VideoUploadResponse>}
 */
const methodInfo_AdstudioAssetService_uploadVideo = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VideoUploadResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.VideoUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoUploadResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VideoUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VideoUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VideoUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.uploadVideo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadVideo',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadVideo,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VideoUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VideoUploadResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.uploadVideo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/uploadVideo',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_uploadVideo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVideosByAccount = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVideosByAccount',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetsByAccountRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVideosByAccount = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VideoAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVideosByAccount =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideosByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideosByAccount,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetsByAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVideosByAccount =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideosByAccount',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideosByAccount);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getVideoAssetBatch = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatch',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.GetAssetBatchRequest,
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.GetAssetBatchRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getVideoAssetBatch = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch,
  /**
   * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VideoAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getVideoAssetBatch =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideoAssetBatch,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.GetAssetBatchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VideoAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getVideoAssetBatch =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getVideoAssetBatch',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getVideoAssetBatch);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.adstudioasset.VideoTranscodeResetRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponse>}
 */
const methodDescriptor_AdstudioAssetService_resetVideoTranscoding = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/resetVideoTranscoding',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.adstudioasset.VideoTranscodeResetRequest,
  proto.com.spotify.adstudioasset.VideoAssetResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.VideoTranscodeResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.adstudioasset.VideoTranscodeResetRequest,
 *   !proto.com.spotify.adstudioasset.VideoAssetResponse>}
 */
const methodInfo_AdstudioAssetService_resetVideoTranscoding = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.VideoAssetResponse,
  /**
   * @param {!proto.com.spotify.adstudioasset.VideoTranscodeResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.VideoAssetResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.adstudioasset.VideoTranscodeResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.VideoAssetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.VideoAssetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.resetVideoTranscoding =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/resetVideoTranscoding',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_resetVideoTranscoding,
      callback);
};


/**
 * @param {!proto.com.spotify.adstudioasset.VideoTranscodeResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.VideoAssetResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.resetVideoTranscoding =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/resetVideoTranscoding',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_resetVideoTranscoding);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodDescriptor_AdstudioAssetService_getAllStockImages = new grpc.web.MethodDescriptor(
  '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockImages',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 */
const methodInfo_AdstudioAssetService_getAllStockImages = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.adstudioasset.ImageAssetResponseBatch.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.adstudioasset.ImageAssetResponseBatch)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.adstudioasset.AdstudioAssetServiceClient.prototype.getAllStockImages =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockImages',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAllStockImages,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.adstudioasset.ImageAssetResponseBatch>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.adstudioasset.AdstudioAssetServicePromiseClient.prototype.getAllStockImages =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.adstudioasset.AdstudioAssetService/getAllStockImages',
      request,
      metadata || {},
      methodDescriptor_AdstudioAssetService_getAllStockImages);
};


module.exports = proto.com.spotify.adstudioasset;

