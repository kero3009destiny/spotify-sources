import { green, greenLight, spacer16, spacer20, spacer64, white } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { overlay, overlayArrow, rootStyle, typeStyleBody2 } from "../../styles";
import Overlay from "../OverlayTrigger/Overlay";

var overlayWidth = function overlayWidth(props) {
  return props.large ? '600px' : '296px';
};
/* If there is no title and a close button,
add extra padding to body text to avoid overlap */


var padding = function padding(props) {
  return props.paddedBody ? "".concat(spacer16, " ").concat(spacer64, " ").concat(spacer16, " ").concat(spacer20) : "".concat(spacer16, " ").concat(spacer20);
};

var isDarkTheme = function isDarkTheme(props) {
  var _props$theme;

  return ((_props$theme = props.theme) == null ? void 0 : _props$theme.popover) === 'dark';
};

export var Popover = styled.div.withConfig({
  displayName: "Popover",
  componentId: "j2ywak-0"
})(["", ";", ";", ";", ";padding:", ";text-transform:initial;", " &{pointer-events:all;}", ";"], function (props) {
  return overlay({
    maxWidth: overlayWidth(props),
    isDarkTheme: isDarkTheme(props)
  });
}, function (props) {
  return props.arrow && overlayArrow(props.arrow, isDarkTheme(props));
}, rootStyle(), typeStyleBody2(), padding, Overlay, function (props) {
  return isDarkTheme(props) && css(["a[href]:not([class]){color:", ";&:hover{color:", ";}&:active,&:focus{color:", ";}}"], white, greenLight, green);
});