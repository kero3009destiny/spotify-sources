import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useContext } from 'react';
import styled, { css, ThemeContext } from 'styled-components';
import { ButtonIcon } from "../ButtonIcon";
import { IconChevronLeft } from "../Icon/IconChevronLeft";
import { IconChevronRight } from "../Icon/IconChevronRight";
import { Container } from "./Container";
import { Label } from "./Label";
var ThemedButtonIcon = styled(function (_ref) {
  var theme = _ref.theme,
      rest = _objectWithoutProperties(_ref, ["theme"]);

  return /*#__PURE__*/React.createElement(ButtonIcon, Object.assign({
    theme: (theme == null ? void 0 : theme.paginationControls) === 'dark' ? ButtonIcon.darkTheme : {}
  }, rest));
}).withConfig({
  displayName: "PaginationControls__ThemedButtonIcon",
  componentId: "sc-1j063oy-0"
})(["", ";"], function (props) {
  return props.disabled && css(["opacity:0.4;pointer-events:none;"]);
});

function PaginationControlsComponent(_ref2) {
  var onIncrement = _ref2.onIncrement,
      onDecrement = _ref2.onDecrement,
      theme = _ref2.theme,
      children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["onIncrement", "onDecrement", "theme", "children"]);

  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(Container, props, children && /*#__PURE__*/React.createElement(Label, null, children), /*#__PURE__*/React.createElement(ThemedButtonIcon, {
    "aria-label": "Back",
    onClick: onDecrement,
    disabled: typeof onDecrement === 'undefined',
    theme: themeContext
  }, /*#__PURE__*/React.createElement(IconChevronLeft, {
    iconSize: 16
  })), /*#__PURE__*/React.createElement(ThemedButtonIcon, {
    "aria-label": "Forward",
    onClick: onIncrement,
    disabled: typeof onIncrement === 'undefined',
    theme: themeContext
  }, /*#__PURE__*/React.createElement(IconChevronRight, {
    iconSize: 16
  })));
}

var paginationControlsHelpers = {
  darkTheme: {
    paginationControls: 'dark'
  }
};
/**
* **PaginationControls** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/PaginationControls) | [Storybook](https://encore-web.spotify.net/?path=/story/components-pagination-paginationcontrols--default) | [Encore](https://encore.spotify.net/web/components/pagination?format=figma-figma#paginationcontrols) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=608:35) |
*
* PaginationControls navigate between pages of data, by showing left and right chevron buttons for paging backward or forward through data, with the option for descriptive text shown inline.
*
* @example
* export const Default = () => (
*  <PaginationControls onDecrement={() => {}} onIncrement={() => {}}>
*    1-10 of 100
*  </PaginationControls>
*);
*
*/

export var PaginationControls = Object.assign(PaginationControlsComponent, paginationControlsHelpers);
export default PaginationControls;