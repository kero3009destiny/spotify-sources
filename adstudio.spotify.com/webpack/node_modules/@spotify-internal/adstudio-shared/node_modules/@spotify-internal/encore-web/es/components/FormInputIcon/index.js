import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { ThemeProvider } from 'styled-components';
import { IconLeading } from "./IconLeading";
import { IconTrailing } from "./IconTrailing";
import { InputContainer } from "./InputContainer";

function FormInputIconComponent(_ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      iconLeading = _ref.iconLeading,
      iconTrailing = _ref.iconTrailing,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["theme", "iconLeading", "iconTrailing", "children"]);

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(InputContainer, Object.assign({
    iconLeading: iconLeading,
    iconTrailing: iconTrailing
  }, props), iconLeading && /*#__PURE__*/React.createElement(IconLeading, {
    "aria-hidden": "true",
    iconLeading: iconLeading
  }), children, iconTrailing && /*#__PURE__*/React.createElement(IconTrailing, {
    "aria-hidden": "true",
    iconTrailing: iconTrailing
  })));
}

var formInputIconHelpers = {
  darkTheme: {
    formInputIcon: 'dark'
  }
};
/**
* **FormInputIcon** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/FormInputIcon) | [Storybook](https://encore-web.spotify.net/?path=/story/components-form-forminputicon--default) | [Encore](https://encore.spotify.net/web/components/form?format=figma-figma#forminputicon) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=0:858) |
*
* The FormInputIcon wraps a FormInput and properly position a leading or trailing icon within it.
*
* @example
* export const Default = () => (
*  <FormInputIcon iconLeading={<IconSearch />}>
*    <FormInput type="text" placeholder="Search" />
*  </FormInputIcon>
*);
*
*/

export var FormInputIcon = Object.assign(FormInputIconComponent, formInputIconHelpers);
export default FormInputIcon;