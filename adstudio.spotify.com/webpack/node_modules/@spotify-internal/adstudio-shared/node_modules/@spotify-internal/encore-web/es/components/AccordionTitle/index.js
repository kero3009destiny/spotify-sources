import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useContext } from 'react';
import { gray7, gray90, screenSmMin } from '@spotify-internal/encore-foundation';
import styled, { css, ThemeProvider } from 'styled-components';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { IconChevronDown } from "../Icon/IconChevronDown";
import { Type } from "../Type";
import { Title } from "./Title";
var screenSmMinIconSize = 32;

var textColor = function textColor(theme) {
  return theme.accordionContent === 'dark' ? gray90 : gray7;
};

var AccordionIcon = styled(IconChevronDown).attrs(function (_ref) {
  var theme = _ref.theme;
  return {
    color: textColor(theme)
  };
}).withConfig({
  displayName: "AccordionTitle__AccordionIcon",
  componentId: "sc-17iamdf-0"
})(["@media (min-width:", "){height:", "px;width:", "px;}transition:transform 150ms;", ";"], screenSmMin, screenSmMinIconSize, screenSmMinIconSize, function (props) {
  return props.isExpanded && css(["transform:rotate(180deg);"]);
});
export function AccordionTitleComponent(_ref2) {
  var _ref2$isExpanded = _ref2.isExpanded,
      isExpanded = _ref2$isExpanded === void 0 ? false : _ref2$isExpanded,
      _ref2$heading = _ref2.heading,
      heading = _ref2$heading === void 0 ? 'h2' : _ref2$heading,
      children = _ref2.children,
      _ref2$theme = _ref2.theme,
      theme = _ref2$theme === void 0 ? {} : _ref2$theme,
      props = _objectWithoutProperties(_ref2, ["isExpanded", "heading", "children", "theme"]);

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Type, {
    as: heading,
    condensed: true
  }, /*#__PURE__*/React.createElement(Title, Object.assign({
    isUsingKeyboard: isUsingKeyboard
  }, props), /*#__PURE__*/React.createElement(Type, {
    condensed: true,
    variant: Type.heading3
  }, children), /*#__PURE__*/React.createElement(AccordionIcon, {
    isExpanded: isExpanded
  }))));
}
var accordionTitleHelpers = {
  darkTheme: {
    accordionTitle: 'dark'
  }
};
/**
* **AccordionTitle** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/AccordionTitle) |  [Encore](https://encore.spotify.net/web/components/accordion) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=4037:6872) |
*
* Title of the accordion component, seen on open and closed views.
*
* @example
* No example for this component
*
*/

export var AccordionTitle = Object.assign(AccordionTitleComponent, accordionTitleHelpers);
export default AccordionTitle;