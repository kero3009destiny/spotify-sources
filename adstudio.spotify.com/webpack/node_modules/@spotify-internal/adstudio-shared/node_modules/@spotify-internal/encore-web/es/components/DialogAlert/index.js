import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { ThemeProvider } from 'styled-components';
import { Dialog } from "./Dialog";
import { Footer } from "./Footer";
import { Title } from "./Title";
var DialogAlertComponent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var dialogTitle = _ref.dialogTitle,
      body = _ref.body,
      footer = _ref.footer,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["dialogTitle", "body", "footer", "theme"]);

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({
    ref: ref
  }, props), /*#__PURE__*/React.createElement("header", null, /*#__PURE__*/React.createElement(Title, null, dialogTitle)), body, /*#__PURE__*/React.createElement(Footer, null, footer)));
});
var dialogAlertHelpers = {
  darkTheme: {
    dialogAlert: 'dark'
  }
};
/**
* **DialogAlert** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/DialogAlert) | [Storybook](https://encore-web.spotify.net/?path=/story/components-dialog-dialogalert--default) | [Encore](https://encore.spotify.net/web/components/dialog?format=figma-figma#dialogalert) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=0:1353) |
*
* DialogAlert will display a warning or verify that a user wants to continue and uses tertiary buttons.
*
* @example
* export const Default = () => (
*  <DialogAlert
*    aria-label="Title"
*    aria-describedby="dialogBody"
*    dialogTitle="Title"
*    body={
*      <Type id="dialogBody" as="p" condensed>
*        Aenean lacinia bibendum nulla sed consectetur. Cras justo odio, dapibus ac facilisis in,
*        egestas eget quam. Duis mollis, est non commodo luctus.
*      </Type>
*    }
*    footer={
*      <div>
*        <ButtonTertiary buttonSize={ButtonTertiary.sm} condensed>
*          Button
*        </ButtonTertiary>
*        <ButtonTertiary buttonSize={ButtonTertiary.sm} color="green" condensed>
*          Button
*        </ButtonTertiary>
*      </div>
*    }
*  />
*);
*
*/

export var DialogAlert = Object.assign(DialogAlertComponent, dialogAlertHelpers);
export default DialogAlert;