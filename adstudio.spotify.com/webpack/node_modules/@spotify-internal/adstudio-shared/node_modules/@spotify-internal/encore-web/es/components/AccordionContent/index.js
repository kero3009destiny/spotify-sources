import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { ThemeProvider } from 'styled-components';
import { Content } from "./Content";

function AccordionContentComponent(_ref) {
  var isExpanded = _ref.isExpanded,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["isExpanded", "theme"]);

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, isExpanded && /*#__PURE__*/React.createElement(Content, Object.assign({
    isExpanded: isExpanded
  }, props)));
}

var accordionContentHelpers = {
  darkTheme: {
    accordionContent: 'dark'
  }
};
/**
* **AccordionContent** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/AccordionContent) |  [Encore](https://encore.spotify.net/web/components/accordion) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=4037:6870) |
*
* Content area inside the opened view of the accordion component.
*
* @example
* No example for this component
*
*/

export var AccordionContent = Object.assign(AccordionContentComponent, accordionContentHelpers);
export default AccordionContent;