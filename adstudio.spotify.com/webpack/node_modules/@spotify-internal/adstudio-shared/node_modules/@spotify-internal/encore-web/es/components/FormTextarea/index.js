import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useContext } from 'react';
import styled, { ThemeProvider } from 'styled-components';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { formControlBase, formControlBaseTextarea, formControlErrorTheme, formControlTheme } from "../../styles";

var textareaTheme = function textareaTheme(theme) {
  return theme.formTextarea === 'dark' ? 'dark' : 'light';
};

var Textarea = styled.textarea.withConfig({
  displayName: "FormTextarea__Textarea",
  componentId: "zsefrq-0"
})(["", ";", ";", ";", ";"], formControlBase(), formControlBaseTextarea(), function (props) {
  return formControlTheme({
    theme: textareaTheme(props.theme),
    isUsingKeyboard: props.isUsingKeyboard,
    error: props.error
  });
}, function (props) {
  return props.error && formControlErrorTheme({
    theme: textareaTheme(props.theme),
    isUsingKeyboard: props.isUsingKeyboard
  });
});
var FormTextareaComponent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      props = _objectWithoutProperties(_ref, ["theme"]);

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Textarea, Object.assign({
    ref: ref,
    isUsingKeyboard: isUsingKeyboard
  }, props)));
});
var formTextareaHelpers = {
  darkTheme: {
    formTextarea: 'dark'
  },
  displayName: 'FormTextarea'
};
/**
* **FormTextarea** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/FormTextarea) | [Storybook](https://encore-web.spotify.net/?path=/story/components-form-formtextarea--default) | [Encore](https://encore.spotify.net/web/components/form?format=figma-figma#formtextarea) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=423:839) |
*
* FormTextArea is a multi-line expandable text input, used within a form to capture long form text input
*
* @example
* export const Default = () => <FormTextarea defaultValue="Default" />;
*
*/

export var FormTextarea = Object.assign(FormTextareaComponent, formTextareaHelpers);
export default FormTextarea;