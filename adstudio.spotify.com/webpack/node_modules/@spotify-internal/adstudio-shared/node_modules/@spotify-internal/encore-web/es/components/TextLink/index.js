import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useContext } from 'react';
import { ThemeProvider } from 'styled-components';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { Link } from "./Link";
var TextLinkComponent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["theme", "children"]);

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(Link, Object.assign({
    isUsingKeyboard: isUsingKeyboard
  }, props, {
    ref: ref
  }), children));
});
TextLinkComponent.defaultProps = {
  textColor: 'inherit'
};
var textLinkHelpers = {
  darkTheme: {
    textLink: 'dark'
  }
};
/**
* **TextLink** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/components/TextLink) | [Storybook](https://encore-web.spotify.net/?path=/story/components-textlink--default) | [Encore](https://encore.spotify.net/web/components/textlink) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=423:1058) |
*
* A text link is a text-based anchor link that users can follow to another place. It comes in standalone or inline variants.
*
* @example
* export const Default = () => <TextLink href="#">Text link</TextLink>;
*
*/

export var TextLink = Object.assign(TextLinkComponent, textLinkHelpers);
export default TextLink;