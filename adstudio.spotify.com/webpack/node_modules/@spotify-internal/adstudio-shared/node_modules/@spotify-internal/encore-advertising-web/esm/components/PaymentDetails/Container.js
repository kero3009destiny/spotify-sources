import React from 'react';
import styled, { css } from 'styled-components';
import { spacer8, spacer16, spacer32, black, } from '@spotify-internal/encore-foundation';
import { Panel } from '../Panel';
import { Type } from '@spotify-internal/encore-web';
const ContentIcon = styled.div `
  display: flex;
  flex-direction: column;
  height: ${spacer32};
  justify-content: center;
  padding-right: ${spacer16};
`;
const PaymentDetailsContent = styled.div `
  ${props => props.loading &&
    css `
      align-items: center;
      display: flex;
      justify-content: center;
      width: 100%;
    `}
`;
const Description = styled(Type.p) `
  margin-bottom: 0;
  padding-bottom: 0;
  padding-top: ${spacer8};

  &&& a {
    color: ${black};
  }
`;
export default function Container({ className, children, cta, description, error, hideShadow, icon: Icon, noBorder, noPadding, warning, loading, }) {
    let showBorder = !noBorder;
    let showShadow = !hideShadow;
    if (noBorder) {
        showBorder = false;
        showShadow = false;
    }
    return (React.createElement("div", { className: className },
        React.createElement(Panel, { ctaList: cta ? [cta] : undefined, shadow: showShadow, border: showBorder, error: error, padding: !noPadding, warning: warning },
            Icon && React.createElement(ContentIcon, null, Icon && React.createElement(Icon, null)),
            React.createElement(PaymentDetailsContent, { loading: loading }, children)),
        description && (React.createElement(Description, { variant: Type.body2, weight: Type.book }, description))));
}
//# sourceMappingURL=Container.js.map