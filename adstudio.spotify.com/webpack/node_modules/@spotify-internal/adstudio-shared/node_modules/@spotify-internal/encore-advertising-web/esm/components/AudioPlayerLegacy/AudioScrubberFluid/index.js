var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { spacer4 } from '@spotify-internal/encore-web';
import { PlaybackScrubber } from './PlaybackScrubber';
import { PlaybackTimecode as OrigPlaybackTimecode, } from './PlaybackTimecode';
const PlaybackTimecode = styled(OrigPlaybackTimecode) `
  padding-top: ${spacer4};
`;
const AudioScrubberFluidContainer = styled.section `
  width: 100%;
`;
export default function AudioScrubberFluid(_a) {
    var { currentTime, duration, onSliderChange, playingRatio = 0, scrubberProps, timeCodeProps } = _a, props = __rest(_a, ["currentTime", "duration", "onSliderChange", "playingRatio", "scrubberProps", "timeCodeProps"]);
    return (React.createElement(AudioScrubberFluidContainer, Object.assign({}, props),
        React.createElement(PlaybackScrubber, Object.assign({ value: playingRatio, onChange: onSliderChange }, scrubberProps)),
        React.createElement(PlaybackTimecode, Object.assign({ startTime: currentTime, endTime: duration, hideDivider: true }, timeCodeProps))));
}
//# sourceMappingURL=index.js.map