var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled, { withTheme } from 'styled-components';
import { FormCheckbox, spacer16 } from '@spotify-internal/encore-web';
export const ColumnWrapper = styled.div `
  display: grid;
  grid-template-columns: ${props => {
    var _a, _b;
    return `repeat(${(_a = props.columns) !== null && _a !== void 0 ? _a : 'auto-fit'}, minmax(${(_b = props.minColumnWidth) !== null && _b !== void 0 ? _b : '1fr'}, 1fr))`;
}};
  ${props => props.columnGap && `grid-column-gap: ${props.columnGap};`}
  ${props => props.rowGap && `grid-row-gap: ${props.rowGap};`}
`;
const CheckboxListWithoutTheme = ({ items, selectedItems, theme, small, onChange, columns, minColumnWidth = 'auto', columnGap = spacer16, disabled: listDisabled, rowGap, }) => {
    const mappedItems = items.map((_a) => {
        var { id, value, disabled: itemDisabled } = _a, itemProps = __rest(_a, ["id", "value", "disabled"]);
        const disabled = itemDisabled || listDisabled;
        return (React.createElement(FormCheckbox, Object.assign({}, itemProps, { id: id, key: id, "data-testid": id, value: id, checked: selectedItems.has(id), theme: theme, small: small, onChange: onChange, disabled: disabled }), value));
    });
    return (React.createElement(ColumnWrapper, { columns: columns, minColumnWidth: minColumnWidth, columnGap: columnGap, rowGap: rowGap }, mappedItems));
};
export const CheckboxList = withTheme(CheckboxListWithoutTheme);
export default CheckboxList;
//# sourceMappingURL=index.js.map