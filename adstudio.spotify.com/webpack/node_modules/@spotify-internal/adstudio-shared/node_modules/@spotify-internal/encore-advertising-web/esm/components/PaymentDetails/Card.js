import React from 'react';
import ReactMarkdown from 'react-markdown';
import { DEFAULT_CARD_CTA_TEXT, DEFAULT_REDIRECTING_CTA_TEXT, DEFAULT_CARD_DESCRIPTION, DEFAULT_CARD_SUCCESS_TEXT, DEFAULT_CARD_DESCRIPTION_SUB, } from './constants';
import { getFormattedCardNumber, getCreditCardConfig } from './utils';
import Container from './Container';
import { Type } from '@spotify-internal/encore-web';
const DEFAULT_CARD_DETAIL = {
    paymentMethod: '',
    cardNumber: '',
};
export default function Card({ cardCTAtext = DEFAULT_CARD_CTA_TEXT, cardDescription = DEFAULT_CARD_DESCRIPTION, cardDescriptionSubtext = DEFAULT_CARD_DESCRIPTION_SUB, cardSuccessText = DEFAULT_CARD_SUCCESS_TEXT, redirectingCTAtext = DEFAULT_REDIRECTING_CTA_TEXT, detail = DEFAULT_CARD_DETAIL, hideShadow, noBorder, noPadding, onClickCheckout, redirecting, viewOnly, }) {
    const { icon: Icon } = getCreditCardConfig(detail);
    const formattedCard = getFormattedCardNumber(detail);
    const cta = !viewOnly
        ? {
            label: redirecting ? redirectingCTAtext : cardCTAtext,
            disabled: redirecting,
            onClick: onClickCheckout,
        }
        : undefined;
    return (React.createElement(Container, { hideShadow: hideShadow, noBorder: noBorder, noPadding: noPadding, icon: Icon, cta: cta, description: React.createElement(ReactMarkdown, { source: cardDescription +
                (cardDescriptionSubtext && '<br />') +
                cardDescriptionSubtext, escapeHtml: false, linkTarget: "_blank" }) },
        React.createElement(Type, { variant: Type.body1, weight: Type.book },
            formattedCard &&
                [...formattedCard].map((item, idx) => {
                    const key = `card-number-position-${idx}`;
                    switch (item) {
                        case '*':
                            return React.createElement("span", { key: key }, "\u2022");
                        case ' ':
                            return React.createElement("span", { key: key }, "\u00A0");
                        default:
                            return React.createElement("span", { key: key }, item);
                    }
                }),
            !formattedCard && cardSuccessText)));
}
//# sourceMappingURL=Card.js.map