var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { useVideo } from '../../hooks/useVideo';
import { PlayPauseButton } from '../PlayPauseButton';
import { black, white } from '@spotify-internal/encore-web';
import { Box } from '../Box';
import styled from 'styled-components';
const ICON_SIZE = 48;
const StyledPlayPauseButton = styled(PlayPauseButton) `
  position: absolute;
  z-index: 1;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transition: opacity 0.3s;
  opacity: ${props => (props.isVisible ? 1 : 0)};
`;
const VideoContainer = styled(Box) `
  > video {
    max-width: 100%;
    max-height: 100%;
  }
  :hover {
    & > ${StyledPlayPauseButton} {
      opacity: 1;
    }
  }
`;
export const VideoPlayer = (_a) => {
    var { className, videoProps, width = '100%', height = '100%', rounded, animatedPlayButton } = _a, layoutProps = __rest(_a, ["className", "videoProps", "width", "height", "rounded", "animatedPlayButton"]);
    const [videoElement, videoState, videoControls] = useVideo(videoProps);
    return (React.createElement(VideoContainer, Object.assign({ className: className, width: width, height: height, justifyContent: "center", borderRadius: !rounded ? '0px' : undefined, border: "none", bg: black, p: 0 }, layoutProps),
        React.createElement(StyledPlayPauseButton, { isVisible: !!videoState.paused, onPlay: videoControls.play, onPause: videoControls.pause, color: white, paused: videoState.paused, iconSize: ICON_SIZE, animated: animatedPlayButton }),
        videoElement));
};
//# sourceMappingURL=index.js.map