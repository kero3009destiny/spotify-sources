var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box } from '../Box';
import { HStack } from '../Stack';
import { BlurredBackground } from './BlurredBackground';
import { useAudio } from '../../hooks/useAudio';
import { PlaybackController, } from '../PlaybackController';
import { spacer24, spacer32 } from '@spotify-internal/encore-foundation';
import styled from 'styled-components';
const ActionsWrapper = styled(HStack.Item) `
  display: flex;
  align-items: center;
  & > a,
  & > button {
    margin-left: ${spacer32};
    margin-right: 0;
  }
`;
export const AudioPlayer = (_a) => {
    var { className, audioProps, bgImage, bgColor, animatedPlayButton, name, nameUrl, actions } = _a, props = __rest(_a, ["className", "audioProps", "bgImage", "bgColor", "animatedPlayButton", "name", "nameUrl", "actions"]);
    const [audioElement, audioState, audioControls] = useAudio(audioProps);
    const hasBackground = bgImage !== null && bgImage !== void 0 ? bgImage : bgColor;
    const Player = (React.createElement(React.Fragment, null,
        React.createElement(HStack, { gap: spacer24, wrap: true },
            React.createElement(HStack.Item, { flex: 1 },
                React.createElement(PlaybackController, { name: name, nameUrl: nameUrl, time: audioState.time, duration: audioState.duration, paused: audioState.paused, onPause: audioControls.pause, onPlay: audioControls.play, onScrub: audioControls.seek, overMedia: !!hasBackground, animated: animatedPlayButton })),
            React.createElement(ActionsWrapper, null, actions)),
        audioElement));
    if (!hasBackground)
        return React.createElement("div", Object.assign({}, props), Player);
    return (React.createElement(Box, Object.assign({}, props, { px: spacer32, py: spacer24, bg: "none", border: "none" }),
        React.createElement(BlurredBackground, { bgColor: bgColor, bgImage: bgImage }),
        Player));
};
//# sourceMappingURL=index.js.map