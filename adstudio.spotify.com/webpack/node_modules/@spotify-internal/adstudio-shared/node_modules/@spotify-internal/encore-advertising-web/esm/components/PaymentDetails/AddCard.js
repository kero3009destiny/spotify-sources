import React from 'react';
import ReactMarkdown from 'react-markdown';
import { DEFAULT_REDIRECTING_CTA_TEXT, DEFAULT_ADD_CARD_TEXT, DEFAULT_ADD_CARD_SUBTEXT, DEFAULT_ADD_CARD_CTA_TEXT, DEFAULT_CANNOT_ADD_CARD_SUBTEXT, } from './constants';
import Container from './Container';
import { Type } from '@spotify-internal/encore-web';
export default function AddCard({ addCardCTAtext = DEFAULT_ADD_CARD_CTA_TEXT, addCardSubtext = DEFAULT_ADD_CARD_SUBTEXT, addCardText = DEFAULT_ADD_CARD_TEXT, redirectingCTAtext = DEFAULT_REDIRECTING_CTA_TEXT, viewOnlySubText = DEFAULT_CANNOT_ADD_CARD_SUBTEXT, hideShadow, noBorder, noPadding, onClickCheckout, redirecting, viewOnly, }) {
    return (React.createElement(Container, { cta: !viewOnly
            ? {
                label: redirecting ? redirectingCTAtext : addCardCTAtext,
                disabled: redirecting,
                onClick: onClickCheckout,
            }
            : undefined, hideShadow: hideShadow, noBorder: noBorder, noPadding: noPadding },
        React.createElement(Type.p, { variant: Type.body1, weight: Type.book, condensed: true },
            React.createElement(ReactMarkdown, { source: addCardText, linkTarget: "_blank", renderers: {
                    paragraph: ({ children }) => React.createElement("span", null, children),
                } })),
        React.createElement(Type.p, { variant: Type.body2, weight: Type.book },
            React.createElement(ReactMarkdown, { linkTarget: "_blank", source: viewOnly ? viewOnlySubText : addCardSubtext, renderers: {
                    paragraph: ({ children }) => React.createElement("span", null, children),
                } }))));
}
//# sourceMappingURL=AddCard.js.map