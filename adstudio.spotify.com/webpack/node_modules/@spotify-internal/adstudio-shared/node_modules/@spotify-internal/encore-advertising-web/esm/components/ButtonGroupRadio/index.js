var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { ButtonGroup } from '../ButtonGroup';
export const ButtonGroupRadio = (_a) => {
    var { value, defaultValue, onChange, onClick } = _a, props = __rest(_a, ["value", "defaultValue", "onChange", "onClick"]);
    const [current, setCurrent] = React.useState(value !== null && value !== void 0 ? value : defaultValue);
    const currentArr = React.useMemo(() => (current ? [current] : []), [current]);
    React.useEffect(() => {
        if (value !== undefined)
            setCurrent(value);
    }, [value]);
    const onRadioClick = React.useCallback((buttonValue, e) => {
        onClick === null || onClick === void 0 ? void 0 : onClick(buttonValue, e);
        if (buttonValue !== current)
            onChange === null || onChange === void 0 ? void 0 : onChange(buttonValue, current);
        if (value === undefined)
            setCurrent(buttonValue);
    }, [current, onChange, onClick, value]);
    return React.createElement(ButtonGroup, Object.assign({}, props, { value: currentArr, onClick: onRadioClick }));
};
//# sourceMappingURL=index.js.map