"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Footer = exports.Body = exports.Header = exports.StyledDialog = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _encoreWeb = require("@spotify-internal/encore-web");

var _EscapableBackdrop = _interopRequireDefault(require("../EscapableBackdrop"));

var _onEnter = _interopRequireDefault(require("../../utils/helpers/onEnter"));

var _mixins = require("../../styles/mixins");

var _DialogOutsideClick = _interopRequireDefault(require("../DialogOutsideClick"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var StyledDialog = _styledComponents["default"].div.withConfig({
  displayName: "DialogConfirmation__StyledDialog",
  componentId: "sc-2mxhaj-0"
})(["", " max-width:800px;min-width:600px;outline:none;width:70vw;"], _mixins.dialogStyle);

exports.StyledDialog = StyledDialog;

var AlertWrapper = _styledComponents["default"].div.withConfig({
  displayName: "DialogConfirmation__AlertWrapper",
  componentId: "sc-2mxhaj-1"
})(["border-top-left-radius:", ";border-top-right-radius:", ";overflow:hidden;"], _encoreFoundation.spacer4, _encoreFoundation.spacer4);

var DetailsWrapper = _styledComponents["default"].div.withConfig({
  displayName: "DialogConfirmation__DetailsWrapper",
  componentId: "sc-2mxhaj-2"
})([""]);

var Header = _styledComponents["default"].header.withConfig({
  displayName: "DialogConfirmation__Header",
  componentId: "sc-2mxhaj-3"
})(["@media (max-width:", "){padding:", " ", " ", ";}@media (min-width:", "){padding:", " ", " ", ";}", ";"], _encoreFoundation.screenXsMax, _encoreFoundation.spacer16, _encoreFoundation.spacer24, _encoreFoundation.spacer8, _encoreFoundation.screenXsMin, _encoreFoundation.spacer24, _encoreFoundation.spacer32, _encoreFoundation.spacer8, function (props) {
  return props.hasBorder && (0, _styledComponents.css)(["border-bottom:1px solid ", ";"], _encoreFoundation.gray90);
});

exports.Header = Header;

var Body = _styledComponents["default"].div.withConfig({
  displayName: "DialogConfirmation__Body",
  componentId: "sc-2mxhaj-4"
})(["overflow:", ";position:relative;padding:", ";@media (max-width:", "){padding:", ";}@media (min-width:", "){padding:", ";}"], function (props) {
  return props.allowContentOverflow ? 'visible' : 'auto';
}, function (props) {
  return props.flush && 0;
}, _encoreFoundation.screenXsMax, function (props) {
  return !props.flush && "0 ".concat(_encoreFoundation.spacer24, " ").concat(_encoreFoundation.spacer24);
}, _encoreFoundation.screenXsMin, function (props) {
  return !props.flush && "0 ".concat(_encoreFoundation.spacer32, " ").concat(_encoreFoundation.spacer24);
});

exports.Body = Body;

var Footer = _styledComponents["default"].footer.withConfig({
  displayName: "DialogConfirmation__Footer",
  componentId: "sc-2mxhaj-5"
})(["border-top:1px solid ", ";text-align:right;@media (max-width:", "){padding:", ";}@media (min-width:", "){padding:", " ", " ", ";}"], _encoreFoundation.gray90, _encoreFoundation.screenXsMax, _encoreFoundation.spacer24, _encoreFoundation.screenXsMin, _encoreFoundation.spacer24, _encoreFoundation.spacer32, _encoreFoundation.spacer24);

exports.Footer = Footer;

var DialogConfirmation = /*#__PURE__*/function (_Component) {
  _inherits(DialogConfirmation, _Component);

  var _super = _createSuper(DialogConfirmation);

  function DialogConfirmation() {
    var _this;

    _classCallCheck(this, DialogConfirmation);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      hasBorder: false
    });

    return _this;
  }

  _createClass(DialogConfirmation, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      /* eslint-disable no-console */
      if (this.props.title && console && console.warn) {
        console.warn("\n        The 'title' prop on DialogConfirmation has been renamed to 'dialogTitle'\n        to match the other Dialog* components. Please updated your usage as this will\n        be deprecated in a future release.\n      ");
      }
      /* eslint-enable no-console */

    }
  }, {
    key: "addHeaderBorder",
    value: function addHeaderBorder() {
      /* Add a border to the header only when the body has been scrolled */
      var dialogBody = document.querySelector('div[data-id="body"]');
      this.setState({
        hasBorder: dialogBody.scrollTop !== 0
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          alert = _this$props.alert,
          allowContentOverflow = _this$props.allowContentOverflow,
          details = _this$props.details,
          dialogTitle = _this$props.dialogTitle,
          flush = _this$props.flush,
          title = _this$props.title,
          body = _this$props.body,
          footer = _this$props.footer,
          onClose = _this$props.onClose,
          dialogClasses = _this$props.dialogClasses,
          rest = _objectWithoutProperties(_this$props, ["alert", "allowContentOverflow", "details", "dialogTitle", "flush", "title", "body", "footer", "onClose", "dialogClasses"]);

      var hasBorder = this.state.hasBorder;
      var header = dialogTitle || title;

      if (typeof header === 'string') {
        header = /*#__PURE__*/_react["default"].createElement(_encoreWeb.Type.h1, {
          condensed: true,
          variant: _encoreWeb.Type.heading3,
          weight: _encoreWeb.Type.black
        }, header);
      } // a11y note: click handler on the div serves the purpose of eating click events
      // before they get to escapable backdrop, and serve no other purpose.


      return /*#__PURE__*/_react["default"].createElement(_EscapableBackdrop["default"], {
        onClose: onClose
      }, /*#__PURE__*/_react["default"].createElement(_DialogOutsideClick["default"], {
        handleClick: onClose
      }, /*#__PURE__*/_react["default"].createElement(StyledDialog, _extends({
        className: dialogClasses,
        onClick: function onClick(e) {
          return e.stopPropagation();
        },
        onKeyPress: (0, _onEnter["default"])(function (e) {
          return e.stopPropagation();
        }),
        role: "dialog",
        tabIndex: "-1"
      }, rest), alert && /*#__PURE__*/_react["default"].createElement(AlertWrapper, null, alert), header && /*#__PURE__*/_react["default"].createElement(Header, {
        hasBorder: hasBorder
      }, header), details && /*#__PURE__*/_react["default"].createElement(DetailsWrapper, null, details), /*#__PURE__*/_react["default"].createElement(Body, {
        allowContentOverflow: allowContentOverflow,
        flush: flush,
        "data-id": "body",
        onScroll: function onScroll() {
          return _this2.addHeaderBorder();
        }
      }, body), !!footer && /*#__PURE__*/_react["default"].createElement(Footer, null, footer))));
    }
  }]);

  return DialogConfirmation;
}(_react.Component);

exports["default"] = DialogConfirmation;

_defineProperty(DialogConfirmation, "propTypes", {
  alert: _propTypes["default"].node,
  allowContentOverflow: _propTypes["default"].bool,
  body: _propTypes["default"].node.isRequired,
  details: _propTypes["default"].node,
  dialogTitle: _propTypes["default"].string,
  dialogClasses: _propTypes["default"].string,
  flush: _propTypes["default"].bool,
  footer: _propTypes["default"].node,
  onClose: _propTypes["default"].func,
  title: _propTypes["default"].node
});

_defineProperty(DialogConfirmation, "defaultProps", {
  flush: false
});