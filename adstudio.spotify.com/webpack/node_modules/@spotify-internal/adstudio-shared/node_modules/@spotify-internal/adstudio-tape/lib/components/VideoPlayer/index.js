"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _PlayPauseButton = _interopRequireDefault(require("../PlayPauseButton"));

var _formatLengthOrPercentage = require("../../utils/helpers/formatLengthOrPercentage");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ICON_SIZE = 48;

var VideoContainer = _styledComponents["default"].div.withConfig({
  displayName: "VideoPlayer__VideoContainer",
  componentId: "sc-5m9bj3-0"
})(["width:", ";height:", ";position:relative;"], function (props) {
  return (0, _formatLengthOrPercentage.formatLengthOrPercentage)(props.width);
}, function (props) {
  return (0, _formatLengthOrPercentage.formatLengthOrPercentage)(props.height);
});

var OverlayContainer = _styledComponents["default"].div.withConfig({
  displayName: "VideoPlayer__OverlayContainer",
  componentId: "sc-5m9bj3-1"
})(["position:absolute;width:inherit;height:inherit;top:0;display:table;"]);

var ButtonContainer = _styledComponents["default"].div.withConfig({
  displayName: "VideoPlayer__ButtonContainer",
  componentId: "sc-5m9bj3-2"
})(["display:table-cell;vertical-align:middle;"]);

var ButtonStyled = (0, _styledComponents["default"])(_PlayPauseButton["default"]).withConfig({
  displayName: "VideoPlayer__ButtonStyled",
  componentId: "sc-5m9bj3-3"
})(["margin-left:auto;margin-right:auto;"]);

var VideoPlayer = /*#__PURE__*/function (_PureComponent) {
  _inherits(VideoPlayer, _PureComponent);

  var _super = _createSuper(VideoPlayer);

  function VideoPlayer(props) {
    var _this;

    _classCallCheck(this, VideoPlayer);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "componentWillUnmount", function () {
      _this.pauseVideo();
    });

    _defineProperty(_assertThisInitialized(_this), "getInitialState", function () {
      return {
        playing: false,
        showPlayButton: true
      };
    });

    _defineProperty(_assertThisInitialized(_this), "toggleButtonState", function () {
      var playing = _this.state.playing;

      _this.setState({
        playing: !playing
      });
    });

    _defineProperty(_assertThisInitialized(_this), "toggleVideo", function () {
      var playing = _this.state.playing;

      if (playing) {
        _this.pauseVideo();
      } else {
        _this.playVideo();
      }

      _this.toggleButtonState();
    });

    _defineProperty(_assertThisInitialized(_this), "playVideo", function () {
      _this.vidRef.current.play();
    });

    _defineProperty(_assertThisInitialized(_this), "pauseVideo", function () {
      _this.vidRef.current.pause();
    });

    _defineProperty(_assertThisInitialized(_this), "mouseEnter", function () {
      _this.setState({
        showPlayButton: true
      });
    });

    _defineProperty(_assertThisInitialized(_this), "mouseLeave", function () {
      var playing = _this.state.playing;

      if (playing) {
        _this.setState({
          showPlayButton: false
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "resetVideo", function () {
      _this.setState({
        playing: false,
        showPlayButton: true
      });
    });

    _this.state = _this.getInitialState();
    _this.vidRef = /*#__PURE__*/_react["default"].createRef();
    return _this;
  }

  _createClass(VideoPlayer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          videoUrl = _this$props.videoUrl,
          width = _this$props.width,
          height = _this$props.height;
      var _this$state = this.state,
          playing = _this$state.playing,
          showPlayButton = _this$state.showPlayButton;
      return /*#__PURE__*/_react["default"].createElement(VideoContainer, {
        width: width,
        height: height,
        onMouseEnter: this.mouseEnter,
        onMouseLeave: this.mouseLeave
      }, /*#__PURE__*/_react["default"].createElement("video", {
        ref: this.vidRef,
        width: width,
        height: height,
        onEnded: this.resetVideo
      }, /*#__PURE__*/_react["default"].createElement("source", {
        src: videoUrl
      })), /*#__PURE__*/_react["default"].createElement(OverlayContainer, null, /*#__PURE__*/_react["default"].createElement(ButtonContainer, null, showPlayButton && /*#__PURE__*/_react["default"].createElement(ButtonStyled, {
        onClick: this.toggleVideo,
        color: _encoreFoundation.white,
        circle: true,
        playing: playing,
        size: ICON_SIZE
      }))));
    }
  }]);

  return VideoPlayer;
}(_react.PureComponent);

exports["default"] = VideoPlayer;
VideoPlayer.propTypes = {
  videoUrl: _propTypes["default"].string.isRequired,
  width: _propTypes["default"].number.isRequired,
  height: _propTypes["default"].number.isRequired
};