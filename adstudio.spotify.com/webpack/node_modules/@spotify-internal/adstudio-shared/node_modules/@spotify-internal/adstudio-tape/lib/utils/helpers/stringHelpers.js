"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getWordCount = getWordCount;
exports.formatToSentenceCase = formatToSentenceCase;
exports.getBooleanFromString = void 0;

/**
 * We need to get the actual wordcount, not including extra spaces,
 * multiple line returns, etc.
 *
 * As a result, we can't use `input.split(' ').length`, as it'd give us the
 * wrong number depending on input.
 *
 * Since this needs to run on every keystroke, performance is key.
 * To that end, I set up a jsperf with several approaches:
 * https://jsperf.com/getting-word-count-from-string/
 *
 * As you can see, the approach employed below is faster than any
 * other by roughly 80%, with some of our more common approaches
 * coming in at 80-98% slower.
 *
 * @param {String} input - A string we want to count words in.
 */
function getWordCount(input) {
  var count = 0;
  var words = input.split(/\s+/);
  var length = words.length;

  for (var i = 0; i < length; i++) {
    if (words[i]) {
      count++;
    }
  }

  return count;
}
/**
 * Convert a word or string to sentence case (i.e. first letter capitalized, rest lowercase).
 * Special handling for the words "iOS" and "RnB" to preserve their case.
 * @param {string} word The word to convert
 * @returns {string} The converted word
 */


function formatToSentenceCase(word) {
  var stringWord = word.toString();

  if (stringWord.toLowerCase() === 'ios') {
    return 'iOS';
  }

  if (stringWord.toLowerCase() === 'rnb') {
    return 'RnB';
  }

  return stringWord.charAt(0).toUpperCase() + stringWord.slice(1).toLowerCase();
}
/**
 * Examines as string for a boolean value, using common string tokens for truthiness or falsiness.
 *  If none found returns the original string, otherwise returns the boolean extracted.
 * @param {string} string String to examine.
 * @returns {boolean|string} Result of examination.
 */


var getBooleanFromString = function getBooleanFromString(string) {
  switch (string) {
    case 1:
      return true;

    case 0:
    case null:
    case undefined:
      return false;

    default:
  }

  switch (string.toLowerCase().trim()) {
    case 'true':
    case 'yes':
    case '1':
      return true;

    case 'false':
    case 'no':
    case '0':
      return false;

    default:
      return string;
  }
};

exports.getBooleanFromString = getBooleanFromString;