"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = IconMusicNote;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = require("styled-components");

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function IconMusicNote(_ref) {
  var color = _ref.color,
      className = _ref.className;
  var strokeColor;
  var theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  switch (color) {
    case 'black':
      strokeColor = '#000';
      break;

    case 'gray40':
      strokeColor = '#616161';
      break;

    default:
      strokeColor = theme.colors.primaryColor;
      break;
  }

  return /*#__PURE__*/_react["default"].createElement("svg", {
    className: className,
    width: "40px",
    height: "40px",
    viewBox: "0 0 40 40",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, /*#__PURE__*/_react["default"].createElement("defs", null), /*#__PURE__*/_react["default"].createElement("g", {
    id: "bg-track-icon",
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "Upload_Audio-Copy",
    transform: "translate(-1533.000000, -968.000000)"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    className: "Icon",
    transform: "translate(1512.000000, 944.982914)"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "icon-music-note",
    transform: "translate(19.500000, 20.000000)"
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    id: "Rectangle-2",
    x: "0.828825043",
    y: "0",
    width: "48",
    height: "48"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M3.00017743,36.045584 C3.02528472,39.3502228 5.71788856,42.0124022 9.02259849,41.9999564 C12.3273084,41.9875106 14.9997842,39.3051258 15,36.0003916 C15.0001047,34.3971405 14.3585596,32.8605328 13.2184673,31.7333226 C12.0783749,30.6061124 10.5345767,29.9820696 8.93143073,30.0003925 C5.62691318,30.0381609 2.97507014,32.7409452 3.00017743,36.045584 Z",
    id: "Path",
    stroke: strokeColor,
    strokeWidth: "2"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M27,31 C27,34.3137085 29.6862915,37 33,37 C36.3137085,37 39,34.3137085 39,31 C39,27.6862915 36.3137085,25 33,25 C29.6862915,25 27,27.6862915 27,31 Z",
    id: "Path",
    stroke: strokeColor,
    strokeWidth: "2"
  }), /*#__PURE__*/_react["default"].createElement("polyline", {
    id: "Shape",
    stroke: strokeColor,
    strokeWidth: "2",
    points: "15 37 15 11.9574194 39 5 39 30.723871"
  }))))));
}

IconMusicNote.propTypes = {
  color: _propTypes["default"].oneOf(['black', 'gray40', 'azure']),
  className: _propTypes["default"].string,
  theme: _propTypes["default"].object
};
IconMusicNote.defaultProps = {
  color: 'black',
  className: 'icon-music-note'
};