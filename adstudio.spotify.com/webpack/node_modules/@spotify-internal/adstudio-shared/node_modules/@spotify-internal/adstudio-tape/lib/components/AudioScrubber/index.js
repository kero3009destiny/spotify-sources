"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Scrubber;
exports.PlaybackTimecode = exports.ScrubberContainer = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _PlaybackScrubber = _interopRequireDefault(require("../PlaybackScrubber"));

var _PlaybackTimecode = _interopRequireDefault(require("../PlaybackTimecode"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ScrubberContainer = _styledComponents["default"].section.withConfig({
  displayName: "AudioScrubber__ScrubberContainer",
  componentId: "qwai71-0"
})(["display:flex;align-items:center;width:100%;"]);

exports.ScrubberContainer = ScrubberContainer;
var PlaybackTimecode = (0, _styledComponents["default"])(_PlaybackTimecode["default"]).withConfig({
  displayName: "AudioScrubber__PlaybackTimecode",
  componentId: "qwai71-1"
})(["padding-left:", ";flex-grow:0;flex-shrink:0;"], _encoreFoundation.spacer8);
exports.PlaybackTimecode = PlaybackTimecode;

function Scrubber(_ref) {
  var currentTime = _ref.currentTime,
      duration = _ref.duration,
      onSliderChange = _ref.onSliderChange,
      _ref$playingRatio = _ref.playingRatio,
      playingRatio = _ref$playingRatio === void 0 ? 0 : _ref$playingRatio,
      props = _objectWithoutProperties(_ref, ["currentTime", "duration", "onSliderChange", "playingRatio"]);

  return /*#__PURE__*/_react["default"].createElement(ScrubberContainer, props, /*#__PURE__*/_react["default"].createElement(_PlaybackScrubber["default"], {
    onChange: onSliderChange,
    value: playingRatio
  }), /*#__PURE__*/_react["default"].createElement(PlaybackTimecode, {
    startTime: currentTime,
    endTime: duration
  }));
}

Scrubber.propTypes = {
  currentTime: _propTypes["default"].number,
  duration: _propTypes["default"].number,
  onSliderChange: _propTypes["default"].func,
  playingRatio: _propTypes["default"].number
};