"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _encoreWeb = require("@spotify-internal/encore-web");

var _FileUpload = _interopRequireDefault(require("./FileUpload"));

var _LoadingDisplay = _interopRequireDefault(require("./LoadingDisplay"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Uploader = /*#__PURE__*/function (_PureComponent) {
  _inherits(Uploader, _PureComponent);

  var _super = _createSuper(Uploader);

  function Uploader() {
    var _this;

    _classCallCheck(this, Uploader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "maybeRenderError", function () {
      var errorMessage = _this.props.errorMessage;
      return errorMessage ? /*#__PURE__*/_react["default"].createElement(_encoreWeb.Type.p, {
        color: _encoreFoundation.failure,
        variant: _encoreWeb.Type.body1,
        weight: _encoreWeb.Type.book
      }, errorMessage) : null;
    });

    return _this;
  }

  _createClass(Uploader, [{
    key: "maybeRenderUploadingProgress",
    value: function maybeRenderUploadingProgress() {
      var _this$props = this.props,
          displayComponentProps = _this$props.displayComponentProps,
          isUploading = _this$props.isUploading,
          processingText = _this$props.processingText,
          previewName = _this$props.previewName,
          uploadingProgress = _this$props.uploadingProgress,
          uploadingText = _this$props.uploadingText;
      return isUploading ? /*#__PURE__*/_react["default"].createElement(_LoadingDisplay["default"], {
        name: previewName || displayComponentProps.name,
        processingText: processingText,
        progress: uploadingProgress,
        uploadingText: uploadingText
      }) : null;
    }
  }, {
    key: "maybeRenderDisplayComponent",
    value: function maybeRenderDisplayComponent() {
      var _this$props2 = this.props,
          deleteLabel = _this$props2.deleteLabel,
          DisplayComponent = _this$props2.displayComponent,
          displayComponentProps = _this$props2.displayComponentProps,
          isUploading = _this$props2.isUploading,
          onClickDelete = _this$props2.onClickDelete,
          previewName = _this$props2.previewName,
          previewSrc = _this$props2.previewSrc,
          shouldShowDownload = _this$props2.shouldShowDownload,
          shouldShowUploader = _this$props2.shouldShowUploader;
      return !shouldShowUploader && !isUploading ? /*#__PURE__*/_react["default"].createElement(DisplayComponent, _extends({
        deleteLabel: deleteLabel,
        onClickDelete: onClickDelete,
        shouldShowDownload: shouldShowDownload
      }, displayComponentProps, {
        name: previewName || displayComponentProps.name,
        src: previewSrc || displayComponentProps.src,
        panelBorder: true
      })) : null;
    }
  }, {
    key: "maybeRenderUploadComponent",
    value: function maybeRenderUploadComponent() {
      var _this$props3 = this.props,
          accept = _this$props3.accept,
          deleteLabel = _this$props3.deleteLabel,
          id = _this$props3.id,
          isUploading = _this$props3.isUploading,
          onError = _this$props3.onError,
          onUpload = _this$props3.onUpload,
          shouldShowUploader = _this$props3.shouldShowUploader,
          displayIcon = _this$props3.displayIcon,
          dragAndDropText = _this$props3.dragAndDropText,
          uploadFileText = _this$props3.uploadFileText,
          uploadText = _this$props3.uploadText,
          skipValidation = _this$props3.skipValidation,
          iconContainerHeight = _this$props3.iconContainerHeight,
          isVideoUploader = _this$props3.isVideoUploader;
      return shouldShowUploader && !isUploading ? /*#__PURE__*/_react["default"].createElement(_FileUpload["default"], {
        accept: accept,
        deleteLabel: deleteLabel,
        skipValidation: skipValidation,
        id: id,
        onError: onError,
        onUpload: onUpload,
        displayIcon: displayIcon,
        dragAndDropText: dragAndDropText,
        uploadFileText: uploadFileText,
        uploadText: uploadText,
        iconContainerHeight: iconContainerHeight,
        isVideoUploader: isVideoUploader
      }) : null;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement("div", null, this.maybeRenderDisplayComponent(), this.maybeRenderUploadComponent(), this.maybeRenderUploadingProgress(), this.maybeRenderError());
    }
  }]);

  return Uploader;
}(_react.PureComponent);

exports["default"] = Uploader;

_defineProperty(Uploader, "propTypes", {
  accept: _propTypes["default"].shape({
    'audio/mp3': _propTypes["default"].string,
    'audio/mpeg': _propTypes["default"].string,
    'audio/ogg': _propTypes["default"].string,
    'audio/wav': _propTypes["default"].string,
    'audio/x-wav': _propTypes["default"].string,
    'image/jpeg': _propTypes["default"].string,
    'image/png': _propTypes["default"].string,
    'video/mp4': _propTypes["default"].string,
    'video/quicktime': _propTypes["default"].string
  }),
  deleteLabel: _propTypes["default"].string,
  displayComponent: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func]),
  displayComponentProps: _propTypes["default"].shape({
    src: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
    name: _propTypes["default"].string
  }),
  displayIcon: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func]).isRequired,
  dragAndDropText: _propTypes["default"].string,
  errorMessage: _propTypes["default"].string,
  skipValidation: _propTypes["default"].bool,
  id: _propTypes["default"].string.isRequired,
  iconContainerHeight: _propTypes["default"].string,
  isUploading: _propTypes["default"].bool,
  isVideoUploader: _propTypes["default"].bool,
  onClickDelete: _propTypes["default"].func.isRequired,
  onError: _propTypes["default"].func.isRequired,
  onUpload: _propTypes["default"].func.isRequired,
  previewName: _propTypes["default"].string,
  previewSrc: _propTypes["default"].string,
  processingText: _propTypes["default"].string,
  resetCode: _propTypes["default"].number,
  shouldShowDownload: _propTypes["default"].bool,
  shouldShowUploader: _propTypes["default"].bool,
  uploadingProgress: _propTypes["default"].number,
  uploadingText: _propTypes["default"].string,
  uploadFileText: _propTypes["default"].string,
  uploadText: _propTypes["default"].string.isRequired
});