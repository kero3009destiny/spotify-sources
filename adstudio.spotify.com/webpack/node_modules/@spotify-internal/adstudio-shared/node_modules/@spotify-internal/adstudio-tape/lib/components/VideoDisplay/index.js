"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VideoDisplay = VideoDisplay;
exports["default"] = exports.IconContainer = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _encoreWeb = require("@spotify-internal/encore-web");

var _downloadFile = require("../../utils/helpers/downloadFile");

var _onEnter = _interopRequireDefault(require("../../utils/helpers/onEnter"));

var _Panel = _interopRequireDefault(require("../Panel"));

var _constants = require("./constants");

var _config = require("../../config");

var _IconVideoLandscape = _interopRequireDefault(require("../Icons/IconVideoLandscape"));

var _IconVideoPortrait = _interopRequireDefault(require("../Icons/IconVideoPortrait"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var ICON_SIZE = 80;

var Display = _styledComponents["default"].div.withConfig({
  displayName: "VideoDisplay__Display",
  componentId: "f09jbv-0"
})(["align-items:center;display:flex;justify-content:flex-start;min-width:0;"]);

var IconContainer = _styledComponents["default"].div.withConfig({
  displayName: "VideoDisplay__IconContainer",
  componentId: "f09jbv-1"
})(["flex-shrink:0;margin-right:", ";"], _encoreFoundation.spacer16);

exports.IconContainer = IconContainer;
var Name = (0, _styledComponents["default"])(_encoreWeb.Type.p).withConfig({
  displayName: "VideoDisplay__Name",
  componentId: "f09jbv-2"
})(["flex:1;flex-direction:column;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap;"]);

function VideoDisplay(_ref) {
  var className = _ref.className,
      src = _ref.src,
      name = _ref.name,
      creativeFormat = _ref.creativeFormat,
      shouldShowDownload = _ref.shouldShowDownload,
      onClickDelete = _ref.onClickDelete,
      onClickVideo = _ref.onClickVideo,
      downloadLabel = _ref.downloadLabel,
      deleteLabel = _ref.deleteLabel,
      panelBorder = _ref.panelBorder;
  var icon = creativeFormat === _config.CREATIVE_FORMAT.VIDEO_LANDSCAPE_FORMAT ? /*#__PURE__*/_react["default"].createElement(_IconVideoLandscape["default"], {
    iconSize: ICON_SIZE,
    color: _encoreFoundation.gray50
  }) : /*#__PURE__*/_react["default"].createElement(_IconVideoPortrait["default"], {
    iconSize: ICON_SIZE,
    color: _encoreFoundation.gray50
  });

  var content = /*#__PURE__*/_react["default"].createElement(Display, {
    className: className
  }, /*#__PURE__*/_react["default"].createElement(IconContainer, null, icon), /*#__PURE__*/_react["default"].createElement(Name, {
    variant: _encoreWeb.Type.body1,
    weight: _encoreWeb.Type.book
  }, name));

  if (onClickVideo) {
    content = /*#__PURE__*/_react["default"].createElement("a", {
      onClick: onClickVideo,
      onKeyPress: (0, _onEnter["default"])(onClickVideo),
      role: "button",
      tabIndex: "0"
    }, content);
  }

  var ctaList = [];

  if (shouldShowDownload) {
    ctaList.push({
      label: downloadLabel,
      onClick: function onClick() {
        (0, _downloadFile.downloadFile)(name, src);
      }
    });
  }

  if (onClickDelete) {
    ctaList.push({
      label: deleteLabel,
      onClick: onClickDelete
    });
  }

  return /*#__PURE__*/_react["default"].createElement(_Panel["default"], {
    border: false,
    ctaList: ctaList,
    ctaListStacked: true,
    shadow: panelBorder
  }, content);
}

VideoDisplay.propTypes = {
  className: _propTypes["default"].string,
  src: _propTypes["default"].string,
  name: _propTypes["default"].string,
  creativeFormat: _propTypes["default"].string,
  onClickDelete: _propTypes["default"].func,
  onClickVideo: _propTypes["default"].func,
  shouldShowDownload: _propTypes["default"].bool,
  deleteLabel: _propTypes["default"].string.isRequired,
  downloadLabel: _propTypes["default"].string.isRequired,
  panelBorder: _propTypes["default"].bool
};
VideoDisplay.defaultProps = {
  creativeFormat: _config.CREATIVE_FORMAT.VIDEO_LANDSCAPE_FORMAT,
  deleteLabel: _constants.DELETE_LABEL,
  downloadLabel: _constants.DOWNLOAD_LABEL,
  panelBorder: false
};
var _default = VideoDisplay;
exports["default"] = _default;