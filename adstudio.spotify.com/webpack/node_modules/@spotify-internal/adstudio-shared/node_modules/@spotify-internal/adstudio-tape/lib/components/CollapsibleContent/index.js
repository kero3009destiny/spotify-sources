"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Icons = _interopRequireDefault(require("../Icons"));

var _Panel = _interopRequireDefault(require("../Panel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var IconChevronDown = _Icons["default"].IconChevronDown,
    IconChevronUp = _Icons["default"].IconChevronUp;

var IconToggle = function IconToggle(_ref) {
  var expanded = _ref.expanded,
      iconColor = _ref.iconColor;
  return expanded ? /*#__PURE__*/_react["default"].createElement(IconChevronUp, {
    color: iconColor
  }) : /*#__PURE__*/_react["default"].createElement(IconChevronDown, {
    color: iconColor
  });
};

IconToggle.propTypes = {
  expanded: _propTypes["default"].bool,
  iconColor: _propTypes["default"].oneOf(['black', 'gray40', ''])
};

var PanelContainer = _styledComponents["default"].div.withConfig({
  displayName: "CollapsibleContent__PanelContainer",
  componentId: "sc-1n29h3v-0"
})(["display:flex;flex:1;height:100%;width:100%;"]);

var BottomPanelContainer = (0, _styledComponents["default"])(PanelContainer).withConfig({
  displayName: "CollapsibleContent__BottomPanelContainer",
  componentId: "sc-1n29h3v-1"
})(["display:", ""], function (props) {
  return props.visible ? 'unset' : 'none';
});
var hideBottomBorder = (0, _styledComponents.css)(["border-bottom:unset;border-radius:4px 4px 0 0;"]);
var hideTopBorder = (0, _styledComponents.css)(["border-top:unset;border-radius:0 0 4px 4px;"]);
var StyledPanel = (0, _styledComponents["default"])(_Panel["default"]).withConfig({
  displayName: "CollapsibleContent__StyledPanel",
  componentId: "sc-1n29h3v-2"
})(["flex-grow:1;flex-shrink:1;"]);
var TopPanel = (0, _styledComponents["default"])(StyledPanel).withConfig({
  displayName: "CollapsibleContent__TopPanel",
  componentId: "sc-1n29h3v-3"
})(["", ";"], function (props) {
  return props.hideBorder && hideBottomBorder;
});
var BottomPanel = (0, _styledComponents["default"])(StyledPanel).withConfig({
  displayName: "CollapsibleContent__BottomPanel",
  componentId: "sc-1n29h3v-4"
})(["", ";"], function (props) {
  return props.visible && hideTopBorder;
});

var CollapsibleContent = function CollapsibleContent(_ref2) {
  var iconColor = _ref2.iconColor,
      topContent = _ref2.topContent,
      bottomContent = _ref2.bottomContent,
      showContent = _ref2.showContent,
      onClick = _ref2.onClick;
  return /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement(PanelContainer, null, /*#__PURE__*/_react["default"].createElement(TopPanel, {
    hideBorder: showContent,
    ctaList: [{
      label: /*#__PURE__*/_react["default"].createElement(IconToggle, {
        expanded: showContent,
        iconColor: iconColor
      }),
      onClick: onClick
    }]
  }, topContent)), /*#__PURE__*/_react["default"].createElement(BottomPanelContainer, {
    visible: showContent
  }, /*#__PURE__*/_react["default"].createElement(BottomPanel, {
    visible: showContent
  }, bottomContent)));
};

CollapsibleContent.defaultProps = {
  iconColor: 'black'
};
CollapsibleContent.propTypes = {
  bottomContent: _propTypes["default"].node.isRequired,
  iconColor: _propTypes["default"].oneOf(['black', 'gray40', 'azure']),
  onClick: _propTypes["default"].func.isRequired,
  showContent: _propTypes["default"].bool,
  topContent: _propTypes["default"].node.isRequired
};
var _default = CollapsibleContent;
exports["default"] = _default;