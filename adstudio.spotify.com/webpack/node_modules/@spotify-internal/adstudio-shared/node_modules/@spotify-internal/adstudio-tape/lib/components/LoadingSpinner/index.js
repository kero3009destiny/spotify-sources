"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var plum = '#705378';
var offset = '187';
var duration = '2.4s';

var LoadingSpinner = function LoadingSpinner(_ref) {
  var color = _ref.color,
      diameter = _ref.diameter,
      theme = _ref.theme;
  return /*#__PURE__*/_react["default"].createElement(StyledSpinner, {
    viewBox: "0 0 100 100",
    width: diameter,
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react["default"].createElement("circle", {
    className: "pathIndeterminate",
    cx: "50",
    cy: "50",
    fill: "none",
    r: "25",
    stroke: theme ? theme.colors.primaryColor : color,
    strokeLinecap: "round",
    strokeWidth: "2.5"
  }));
};

var StyledSpinner = _styledComponents["default"].svg.withConfig({
  displayName: "LoadingSpinner__StyledSpinner",
  componentId: "ua7puv-0"
})(["animation:rotator ", " linear infinite;&& .pathIndeterminate{animation:dash ", " ease-in-out infinite;stroke-dasharray:", ";stroke-dashoffset:0;transform-origin:50% 50%;}@keyframes rotator{0%{transform:rotate(0deg);}100%{transform:rotate(270deg);}}@keyframes dash{0%{stroke-dashoffset:", ";}50%{stroke-dashoffset:", ";transform:rotate(135deg);}100%{stroke-dashoffset:", ";transform:rotate(450deg);}}"], duration, duration, offset, offset, offset / 4, offset);

LoadingSpinner.defaultProps = {
  color: plum,
  diameter: '210px'
};
LoadingSpinner.propTypes = {
  color: _propTypes["default"].string,
  diameter: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  theme: _propTypes["default"].object
};

var _default = (0, _styledComponents.withTheme)(LoadingSpinner);

exports["default"] = _default;