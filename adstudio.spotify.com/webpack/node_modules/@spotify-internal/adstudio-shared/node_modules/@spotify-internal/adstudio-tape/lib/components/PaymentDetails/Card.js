"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Card;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _Type = _interopRequireDefault(require("../Type"));

var _constants = require("./constants");

var _utils = require("./utils");

var _Container = _interopRequireDefault(require("./Container"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function Card(_ref) {
  var cardCTAtext = _ref.cardCTAtext,
      cardDescription = _ref.cardDescription,
      cardDescriptionSubtext = _ref.cardDescriptionSubtext,
      cardSuccessText = _ref.cardSuccessText,
      detail = _ref.detail,
      hideShadow = _ref.hideShadow,
      onClickCheckout = _ref.onClickCheckout,
      redirecting = _ref.redirecting,
      redirectingCTAtext = _ref.redirectingCTAtext,
      viewOnly = _ref.viewOnly;

  var _getCreditCardConfig = (0, _utils.getCreditCardConfig)(detail),
      Icon = _getCreditCardConfig.icon;

  var formattedCard = (0, _utils.getFormattedCardNumber)(detail);
  return /*#__PURE__*/_react["default"].createElement(_Container["default"], {
    hideShadow: hideShadow,
    icon: Icon,
    cta: !viewOnly && {
      label: redirecting ? redirectingCTAtext : cardCTAtext,
      disabled: redirecting,
      onClick: onClickCheckout
    },
    description: /*#__PURE__*/_react["default"].createElement(_reactMarkdown["default"], {
      source: cardDescription + (cardDescriptionSubtext && '<br />') + cardDescriptionSubtext,
      escapeHtml: false,
      linkTarget: "_blank"
    })
  }, /*#__PURE__*/_react["default"].createElement(_Type["default"], {
    variant: "body-1-book"
  }, formattedCard && _toConsumableArray(formattedCard).map(function (item, idx) {
    var key = "card-number-position-".concat(idx);

    switch (item) {
      case '*':
        return /*#__PURE__*/_react["default"].createElement("span", {
          key: key
        }, "\u2022");

      case ' ':
        return /*#__PURE__*/_react["default"].createElement("span", {
          key: key
        }, "\xA0");

      default:
        return /*#__PURE__*/_react["default"].createElement("span", {
          key: key
        }, item);
    }
  }), !formattedCard && cardSuccessText));
}

Card.propTypes = {
  cardSuccessText: _propTypes["default"].string,
  cardCTAtext: _propTypes["default"].string,
  cardDescription: _propTypes["default"].string,
  cardDescriptionSubtext: _propTypes["default"].string,
  detail: _propTypes["default"].shape({
    cardNumber: _propTypes["default"].string,
    paymentMethod: _propTypes["default"].string,
    expiryMonth: _propTypes["default"].string,
    expiryYear: _propTypes["default"].string
  }),
  hideShadow: _propTypes["default"].bool,
  onClickCheckout: _propTypes["default"].func,
  redirecting: _propTypes["default"].bool,
  redirectingCTAtext: _propTypes["default"].string,
  viewOnly: _propTypes["default"].bool
};
Card.defaultProps = {
  cardCTAtext: _constants.DEFAULT_CARD_CTA_TEXT,
  cardDescription: _constants.DEFAULT_CARD_DESCRIPTION,
  cardDescriptionSubtext: _constants.DEFAULT_CARD_DESCRIPTION_SUB,
  cardSuccessText: _constants.DEFAULT_CARD_SUCCESS_TEXT,
  redirectingCTAtext: _constants.DEFAULT_REDIRECTING_CTA_TEXT
};