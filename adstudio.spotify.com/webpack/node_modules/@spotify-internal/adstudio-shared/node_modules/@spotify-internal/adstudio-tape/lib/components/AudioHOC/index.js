"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = audioPlayerHOC;
exports.soundPropTypes = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _HTML5AudioWrapper = _interopRequireDefault(require("./HTML5AudioWrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var soundPropTypes = _propTypes["default"].shape({
  play: _propTypes["default"].func.isRequired,
  pause: _propTypes["default"].func.isRequired,
  stop: _propTypes["default"].func.isRequired,
  seek: _propTypes["default"].func.isRequired,
  playing: _propTypes["default"].bool.isRequired,
  playingRatio: _propTypes["default"].number.isRequired,
  currentTime: _propTypes["default"].number.isRequired,
  duration: _propTypes["default"].number.isRequired,
  disabled: _propTypes["default"].bool
}).isRequired;

exports.soundPropTypes = soundPropTypes;

function audioPlayerHOC(ProvidedComponent) {
  var WrappedAudioPlayerComponent = /*#__PURE__*/function (_Component) {
    _inherits(WrappedAudioPlayerComponent, _Component);

    var _super = _createSuper(WrappedAudioPlayerComponent);

    function WrappedAudioPlayerComponent(props) {
      var _this;

      _classCallCheck(this, WrappedAudioPlayerComponent);

      _this = _super.call(this, props);

      _defineProperty(_assertThisInitialized(_this), "getInitialState", function () {
        return {
          playing: false,
          playingRatio: 0.0,
          currentTime: 0,
          duration: 0
        };
      });

      _defineProperty(_assertThisInitialized(_this), "getNoops", function () {
        return {
          play: function play() {},
          pause: function pause() {},
          stop: function stop() {},
          seek: function seek() {}
        };
      });

      _this.state = _this.getInitialState();
      _this.play = _this.play.bind(_assertThisInitialized(_this));
      _this.pause = _this.pause.bind(_assertThisInitialized(_this));
      _this.stop = _this.stop.bind(_assertThisInitialized(_this));
      _this.seek = _this.seek.bind(_assertThisInitialized(_this));
      _this.setDuration = _this.setDuration.bind(_assertThisInitialized(_this));
      _this.setTimeUpdate = _this.setTimeUpdate.bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass(WrappedAudioPlayerComponent, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        /*
          AudioContext has been commented out, because while I would like to
          support that where possible, it's best for us to trim down our app's
          complexity, and audio is no trivial beast to tame.
        */
        // const AudioContext = window.AudioContext || window.webkitAudioContext;
        // const isWebAudioEnabled = AudioContext !== null;
        var events = {
          setDuration: this.setDuration,
          setTimeUpdate: this.setTimeUpdate,
          ended: function ended() {
            return _this2.setState(function () {
              return {
                playing: false
              };
            });
          }
        }; // if (isWebAudioEnabled) {
        //   this.sound = new WebAudioWrapper(new AudioContext(), this.props.audioBuffer, events);
        // } else {
        //   this.sound = new HTML5AudioWrapper(this.audio, events);
        // }

        this.sound = new _HTML5AudioWrapper["default"](this.audio, events);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.sound) {
          this.sound.pause();
          this.sound.clearAnimationFrame();
        }

        this.sound = null;
      }
    }, {
      key: "setDuration",
      value: function setDuration(duration) {
        this.setState(function () {
          return {
            duration: duration
          };
        });
      }
    }, {
      key: "setTimeUpdate",
      value: function setTimeUpdate(playingRatio, currentTime) {
        this.setState(function () {
          return {
            playingRatio: playingRatio,
            currentTime: currentTime
          };
        });
      }
    }, {
      key: "play",
      value: function play() {
        if (this.props.stopsOtherAudioWhenPlayed && document) {
          var sounds = document.getElementsByTagName('audio');

          for (var i = 0; i < sounds.length; i += 1) {
            sounds[i].pause();
          }
        }

        if (this.state.playing) {
          this.setState(function () {
            return {
              playing: false
            };
          });
          this.sound.pause();
        } else {
          this.setState(function () {
            return {
              playing: true
            };
          });
          this.sound.play();
        }
      }
    }, {
      key: "pause",
      value: function pause() {
        this.setState(function () {
          return {
            playing: false
          };
        });
        this.sound.pause();
      }
    }, {
      key: "stop",
      value: function stop() {
        var _this3 = this;

        this.setState(function (state) {
          return _objectSpread(_objectSpread({}, _this3.getInitialState()), {}, {
            duration: state.duration
          });
        });
      }
    }, {
      key: "seek",
      value: function seek(position) {
        var seekPosition = position;

        if (position.currentTarget) {
          seekPosition = position.currentTarget.value;
        }

        seekPosition = Number(seekPosition);

        if (isFinite(seekPosition) && this.sound) {
          this.sound.seek(seekPosition);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var sound = _objectSpread(_objectSpread({}, this.state), {}, {
          play: this.play,
          pause: this.pause,
          stop: this.stop,
          seek: this.seek
        });

        var src = this.props.src;
        var audioSrcList = [];

        if (!src) {
          sound = _objectSpread(_objectSpread(_objectSpread({}, sound), this.getNoops()), {}, {
            disabled: true
          });
        } else if (Array.isArray(src)) {
          audioSrcList = src;
        } else {
          audioSrcList = [src];
        }

        return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(ProvidedComponent, _extends({}, this.props, {
          sound: sound,
          src: src
        })), /*#__PURE__*/_react["default"].createElement("audio", {
          preload: "auto",
          onPause: function onPause() {
            _this4.pause();
          },
          ref: function ref(audio) {
            _this4.audio = audio;
          }
        }, /*#__PURE__*/_react["default"].createElement("track", _extends({
          kind: "captions"
        }, this.props)), audioSrcList.map(function (source) {
          return /*#__PURE__*/_react["default"].createElement("source", {
            key: "audio-source-".concat(source),
            src: source
          });
        })));
      }
    }]);

    return WrappedAudioPlayerComponent;
  }(_react.Component);

  WrappedAudioPlayerComponent.propTypes = {
    src: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
    stopsOtherAudioWhenPlayed: _propTypes["default"].bool
  };
  return WrappedAudioPlayerComponent;
}