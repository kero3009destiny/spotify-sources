"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchPricing = fetchPricing;
exports.buildPricingRequest = buildPricingRequest;
exports.fetchAudienceEstimate = fetchAudienceEstimate;
exports.buildAudienceEstimateRequest = buildAudienceEstimateRequest;

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _uniqBy2 = _interopRequireDefault(require("lodash/uniqBy"));

var _upperCase2 = _interopRequireDefault(require("lodash/upperCase"));

var _adstudioWebgateFetch = require("@spotify-internal/adstudio-webgate-fetch");

var _HttpServiceConfigOptions = require("@spotify-internal/adstudio-bff-clients/clients/HttpServiceConfigOptions");

var _AdStudioBffService = require("@spotify-internal/adstudio-bff-clients/clients/AdStudioBffService");

var _AudienceRequest = require("@spotify-internal/adstudio-bff-clients/models/com/spotify/adstudiobff/proto/AudienceRequest");

var _FormatType = require("../config/FormatType");

var _objects = require("./objects");

var _numbers = require("./numbers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var V4_PRICER_PATH = '/v4/price';
var V4_PRICER_ENDPOINT = "adstudiopricer".concat(V4_PRICER_PATH);
var V4_PRICER_SANDBOX_ENDPOINT = "adstudiopricer-sandbox".concat(V4_PRICER_PATH);

function fetchPricing(_x) {
  return _fetchPricing.apply(this, arguments);
}

function _fetchPricing() {
  _fetchPricing = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(props) {
    var adAccountId, adAccountCountry, _props$apiHost, apiHost, areArtistsTargeted, areGenresTargeted, arePlaylistsTargeted, areAudienceSegmentsTargeted, arePodcastContextualTargetsTargeted, arePodcastSensitiveTopicsExcluded, areCustomAudiencesTargeted, format, flightId, geoLocations, isScmCampaign, platforms, onPricingError, onPricingRequest, onPricingSuccess, _props$pricerEndpoint, pricerEndpoint, res, fetchProps, resp;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            adAccountId = props.adAccountId, adAccountCountry = props.adAccountCountry, _props$apiHost = props.apiHost, apiHost = _props$apiHost === void 0 ? 'https://exp.wg.spotify.com' : _props$apiHost, areArtistsTargeted = props.areArtistsTargeted, areGenresTargeted = props.areGenresTargeted, arePlaylistsTargeted = props.arePlaylistsTargeted, areAudienceSegmentsTargeted = props.areAudienceSegmentsTargeted, arePodcastContextualTargetsTargeted = props.arePodcastContextualTargetsTargeted, arePodcastSensitiveTopicsExcluded = props.arePodcastSensitiveTopicsExcluded, areCustomAudiencesTargeted = props.areCustomAudiencesTargeted, format = props.format, flightId = props.flightId, geoLocations = props.geoLocations, isScmCampaign = props.isScmCampaign, platforms = props.platforms, onPricingError = props.onPricingError, onPricingRequest = props.onPricingRequest, onPricingSuccess = props.onPricingSuccess, _props$pricerEndpoint = props.pricerEndpoint, pricerEndpoint = _props$pricerEndpoint === void 0 ? apiHost.includes('https://exp.wg.spotify.com') ? V4_PRICER_SANDBOX_ENDPOINT : V4_PRICER_ENDPOINT : _props$pricerEndpoint;
            onPricingRequest === null || onPricingRequest === void 0 ? void 0 : onPricingRequest(props);
            res = null;
            fetchProps = (0, _objects.rmUndefinedAttrs)({
              adAccountId: adAccountId,
              adAccountCountry: adAccountCountry,
              areArtistsTargeted: areArtistsTargeted,
              areGenresTargeted: areGenresTargeted,
              arePlaylistsTargeted: arePlaylistsTargeted,
              areAudienceSegmentsTargeted: areAudienceSegmentsTargeted,
              arePodcastContextualTargetsTargeted: arePodcastContextualTargetsTargeted,
              arePodcastSensitiveTopicsExcluded: arePodcastSensitiveTopicsExcluded,
              areCustomAudiencesTargeted: areCustomAudiencesTargeted,
              format: format,
              flightId: flightId,
              isScmCampaign: isScmCampaign,
              geoLocations: geoLocations,
              platforms: platforms
            });
            _context.prev = 4;
            _context.next = 7;
            return (0, _adstudioWebgateFetch.webgateFetch)("".concat(apiHost, "/").concat(pricerEndpoint), {
              body: JSON.stringify(fetchProps),
              method: 'POST'
            });

          case 7:
            resp = _context.sent;
            _context.t0 = resp.status;
            _context.next = _context.t0 === 200 ? 11 : _context.t0 === 400 ? 15 : 17;
            break;

          case 11:
            _context.next = 13;
            return resp.json();

          case 13:
            res = _context.sent;
            return _context.abrupt("break", 22);

          case 15:
            res = null;
            return _context.abrupt("break", 22);

          case 17:
            _context.t1 = Error;
            _context.next = 20;
            return resp.text();

          case 20:
            _context.t2 = _context.sent;
            throw new _context.t1(_context.t2);

          case 22:
            onPricingSuccess === null || onPricingSuccess === void 0 ? void 0 : onPricingSuccess(res);
            return _context.abrupt("return", res);

          case 26:
            _context.prev = 26;
            _context.t3 = _context["catch"](4);
            onPricingError === null || onPricingError === void 0 ? void 0 : onPricingError(_context.t3);
            _context.t3.type = 'pricing';
            throw _context.t3;

          case 31:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[4, 26]]);
  }));
  return _fetchPricing.apply(this, arguments);
}

function buildPricingRequest(props) {
  var adAccountId = props.adAccountId,
      adAccountCountry = props.adAccountCountry,
      apiHost = props.apiHost,
      artistIds = props.artistIds,
      audienceSegments = props.audienceSegments,
      contextualTargetingIds = props.contextualTargetingIds,
      contentSafetyIds = props.contentSafetyIds,
      customAudiences = props.customAudiences,
      format = props.format,
      flightId = props.flightId,
      isScmCampaign = props.isScmCampaign,
      genres = props.genres,
      _props$geos = props.geos,
      geos = _props$geos === void 0 ? [] : _props$geos,
      onPricingError = props.onPricingError,
      onPricingRequest = props.onPricingRequest,
      onPricingSuccess = props.onPricingSuccess,
      _props$platforms = props.platforms,
      platforms = _props$platforms === void 0 ? [] : _props$platforms,
      playlists = props.playlists,
      pricerEndpoint = props.pricerEndpoint;
  var pricingRequestProps = {
    adAccountId: adAccountId,
    adAccountCountry: adAccountCountry,
    apiHost: apiHost,
    areArtistsTargeted: !!(artistIds !== null && artistIds !== void 0 && artistIds.length),
    areGenresTargeted: !!(genres !== null && genres !== void 0 && genres.length),
    arePlaylistsTargeted: !!(playlists !== null && playlists !== void 0 && playlists.length),
    areAudienceSegmentsTargeted: !!(audienceSegments !== null && audienceSegments !== void 0 && audienceSegments.length),
    areCustomAudiencesTargeted: !!(customAudiences !== null && customAudiences !== void 0 && customAudiences.length),
    arePodcastContextualTargetsTargeted: !!(contextualTargetingIds !== null && contextualTargetingIds !== void 0 && contextualTargetingIds.length),
    arePodcastSensitiveTopicsExcluded: !!(contentSafetyIds !== null && contentSafetyIds !== void 0 && contentSafetyIds.length),
    format: format,
    flightId: flightId,
    geoLocations: (0, _uniqBy2["default"])(geos, 'type').map(function (geo) {
      return (0, _pick2["default"])(geo, ['countryCode', 'geoId', 'type']);
    }),
    isScmCampaign: isScmCampaign,
    onPricingError: onPricingError,
    onPricingRequest: onPricingRequest,
    onPricingSuccess: onPricingSuccess,
    // pricer expects uppercase, audience expects lowercase. what's a kid to do?
    platforms: platforms.map(_upperCase2["default"]),
    pricerEndpoint: pricerEndpoint
  };
  return pricingRequestProps;
}

function fetchAudienceEstimate(_x2) {
  return _fetchAudienceEstimate.apply(this, arguments);
}

function _fetchAudienceEstimate() {
  _fetchAudienceEstimate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(props) {
    var ageRanges, artistIds, audienceSegmentIds, brandSafetyCategories, budgetMicros, contextualTargetingCategories, currencyCode, dateBegin, dateEnd, _props$edgeProxyHost, edgeProxyHost, _props$format, format, _props$frequencyCaps, frequencyCaps, genders, genres, geos, onAudienceEstimateError, onAudienceEstimateRequest, onAudienceEstimateSuccess, platforms, playlists, pricing, config, request, res, valsToNumber, _i, _valsToNumber, key, val;

    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            ageRanges = props.ageRanges, artistIds = props.artistIds, audienceSegmentIds = props.audienceSegmentIds, brandSafetyCategories = props.brandSafetyCategories, budgetMicros = props.budgetMicros, contextualTargetingCategories = props.contextualTargetingCategories, currencyCode = props.currencyCode, dateBegin = props.dateBegin, dateEnd = props.dateEnd, _props$edgeProxyHost = props.edgeProxyHost, edgeProxyHost = _props$edgeProxyHost === void 0 ? 'https://adstudio-app-api-sandbox.spotify.net' : _props$edgeProxyHost, _props$format = props.format, format = _props$format === void 0 ? _FormatType.Format.AUDIO : _props$format, _props$frequencyCaps = props.frequencyCaps, frequencyCaps = _props$frequencyCaps === void 0 ? [] : _props$frequencyCaps, genders = props.genders, genres = props.genres, geos = props.geos, onAudienceEstimateError = props.onAudienceEstimateError, onAudienceEstimateRequest = props.onAudienceEstimateRequest, onAudienceEstimateSuccess = props.onAudienceEstimateSuccess, platforms = props.platforms, playlists = props.playlists, pricing = props.pricing;
            onAudienceEstimateRequest === null || onAudienceEstimateRequest === void 0 ? void 0 : onAudienceEstimateRequest(props);
            config = new _HttpServiceConfigOptions.HttpServiceConfigOptions().setBaseUrl('proto').setHost(edgeProxyHost).setVersion('v1');
            request = new _AudienceRequest.AudienceRequest().setAgeRanges(ageRanges).setArtistIds(artistIds).setAudienceSegmentIds(audienceSegmentIds).setBrandSafetyCategories(brandSafetyCategories).setBudgetMicros(budgetMicros).setContextualTargetingCategories(contextualTargetingCategories).setCurrencyCode(currencyCode).setDateBegin(dateBegin).setDateEnd(dateEnd).setFormat(format).setFrequencyCaps(frequencyCaps).setGenders(genders).setGenres(genres).setGeos(geos).setPlatforms(platforms).setPlaylists(playlists).setPricing(pricing).toObject();
            _context2.prev = 4;
            _context2.next = 7;
            return new _AdStudioBffService.AdStudioBffService(_adstudioWebgateFetch.protoFetch, config).getAudienceEstimate(request);

          case 7:
            res = _context2.sent;

            if (res) {
              valsToNumber = ['maxAdsServed', 'maxReach', 'minAdsServed', 'minReach'];

              for (_i = 0, _valsToNumber = valsToNumber; _i < _valsToNumber.length; _i++) {
                key = _valsToNumber[_i];
                val = res[key];
                if (val) res[key] = typeof val === 'boolean' ? val : (0, _numbers.toNumber)(val);
              }
            }

            onAudienceEstimateSuccess === null || onAudienceEstimateSuccess === void 0 ? void 0 : onAudienceEstimateSuccess(res);
            return _context2.abrupt("return", res);

          case 13:
            _context2.prev = 13;
            _context2.t0 = _context2["catch"](4);
            onAudienceEstimateError === null || onAudienceEstimateError === void 0 ? void 0 : onAudienceEstimateError(_context2.t0.message);
            throw _context2.t0;

          case 17:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[4, 13]]);
  }));
  return _fetchAudienceEstimate.apply(this, arguments);
}

function buildAudienceEstimateRequest(_ref) {
  var ageRanges = _ref.ageRanges,
      artistIds = _ref.artistIds,
      audienceSegments = _ref.audienceSegments,
      budget = _ref.budget,
      contentSafetyIds = _ref.contentSafetyIds,
      contextualTargetingIds = _ref.contextualTargetingIds,
      currencyCode = _ref.currencyCode,
      customAudiences = _ref.customAudiences,
      dateBegin = _ref.dateBegin,
      dateEnd = _ref.dateEnd,
      format = _ref.format,
      frequencyCaps = _ref.frequencyCaps,
      edgeProxyHost = _ref.edgeProxyHost,
      genders = _ref.genders,
      genres = _ref.genres,
      geos = _ref.geos,
      onAudienceEstimateError = _ref.onAudienceEstimateError,
      onAudienceEstimateRequest = _ref.onAudienceEstimateRequest,
      onAudienceEstimateSuccess = _ref.onAudienceEstimateSuccess,
      platforms = _ref.platforms,
      playlists = _ref.playlists,
      pricing = _ref.pricing;
  var combinedAudienceSegmentIds;

  if (audienceSegments && customAudiences) {
    combinedAudienceSegmentIds = [].concat(_toConsumableArray(audienceSegments), _toConsumableArray(customAudiences));
  } else if (audienceSegments) {
    combinedAudienceSegmentIds = audienceSegments;
  } else if (customAudiences) {
    combinedAudienceSegmentIds = customAudiences;
  }

  var audienceRequestProps = {
    ageRanges: ageRanges,
    artistIds: artistIds,
    audienceSegmentIds: combinedAudienceSegmentIds,
    brandSafetyCategories: contentSafetyIds,
    budgetMicros: Math.round(Number(budget || 0) * 1e6),
    // avoid floatingpoint issues
    contextualTargetingCategories: contextualTargetingIds,
    currencyCode: currencyCode,
    dateBegin: dateBegin,
    dateEnd: dateEnd,
    edgeProxyHost: edgeProxyHost,
    format: format,
    frequencyCaps: frequencyCaps,
    genders: genders,
    genres: genres,
    geos: geos,
    onAudienceEstimateError: onAudienceEstimateError,
    onAudienceEstimateRequest: onAudienceEstimateRequest,
    onAudienceEstimateSuccess: onAudienceEstimateSuccess,
    platforms: platforms,
    playlists: playlists,
    pricing: pricing
  };
  return audienceRequestProps;
}