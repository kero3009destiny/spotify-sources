"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectBar = SelectBar;
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Item = _interopRequireDefault(require("./Item"));

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var StyledSelectBar = _styledComponents["default"].ul.withConfig({
  displayName: "SelectBar__StyledSelectBar",
  componentId: "w4ewy3-0"
})(["border-radius:", ";display:flex;list-style-type:none;margin:0;padding:0;"], _encoreAdvertisingWeb.spacer4);

var onEnterFactory = function onEnterFactory(fn) {
  return function (e) {
    if (e.key === 'Enter') {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      fn.apply(void 0, [e].concat(args));
    }
  };
};

var defaultActiveStateComparator = function defaultActiveStateComparator(key, value) {
  return key === value;
};

function SelectBar(_ref) {
  var activeColor = _ref.activeColor,
      className = _ref.className,
      disabled = _ref.disabled,
      disableOnClickWhenActive = _ref.disableOnClickWhenActive,
      onChange = _ref.onChange,
      options = _ref.options,
      value = _ref.value,
      theme = _ref.theme,
      _ref$activeStateCompa = _ref.activeStateComparator,
      activeStateComparator = _ref$activeStateCompa === void 0 ? defaultActiveStateComparator : _ref$activeStateCompa,
      props = _objectWithoutProperties(_ref, ["activeColor", "className", "disabled", "disableOnClickWhenActive", "onChange", "options", "value", "theme", "activeStateComparator"]);

  var onChangeFactory = function onChangeFactory(key) {
    return function () {
      if (!disabled) {
        onChange(key);
      }
    };
  };

  return /*#__PURE__*/_react["default"].createElement(StyledSelectBar, _extends({
    className: (0, _classnames["default"])('ta-select-bar', className),
    role: "radiogroup",
    tabindex: "-1"
  }, props), options.map(function (item) {
    return /*#__PURE__*/_react["default"].createElement(_Item["default"], _extends({
      activeColor: theme ? theme.colors.primaryColor : activeColor,
      disabled: disabled,
      disableOnClickWhenActive: disableOnClickWhenActive,
      isActive: activeStateComparator(item.key, value),
      key: item.key,
      onClick: onChangeFactory(item.key),
      onKeyDown: onEnterFactory(onChangeFactory(item.key)),
      role: "radio",
      tabindex: "0"
    }, item));
  }));
}

var _default = (0, _styledComponents.withTheme)(SelectBar);

exports["default"] = _default;
SelectBar.propTypes = {
  activeColor: _propTypes["default"].string,
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  disableOnClickWhenActive: _propTypes["default"].bool,
  id: _propTypes["default"].string,
  onChange: _propTypes["default"].func.isRequired,
  options: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    key: _propTypes["default"].string.isRequired,
    value: _propTypes["default"].string.isRequired
  })),
  value: _propTypes["default"].string,
  theme: _propTypes["default"].shape({}),
  activeStateComparator: _propTypes["default"].func
};
SelectBar.defaultProps = {
  className: ''
};