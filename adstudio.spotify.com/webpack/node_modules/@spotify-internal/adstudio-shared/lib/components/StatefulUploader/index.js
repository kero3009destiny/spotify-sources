"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _partial2 = _interopRequireDefault(require("lodash/partial"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _adstudioTape = require("@spotify-internal/adstudio-tape");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var StatefulUploader = /*#__PURE__*/function (_Component) {
  _inherits(StatefulUploader, _Component);

  var _super = _createSuper(StatefulUploader);

  function StatefulUploader() {
    var _this;

    _classCallCheck(this, StatefulUploader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleClickDelete = function () {
      _this.props.onClickDelete();

      _this.setState({
        shouldShowUploader: true,
        previewSrc: null,
        previewName: null
      });
    };

    _this.handleFileUpload = function (file) {
      // Convert the file to a Data URI
      var reader = new FileReader();
      reader.addEventListener("load", (0, _partial2["default"])(_this.handleFileUploadComplete, file), false);

      if (file) {
        reader.readAsDataURL(file);
      }
    };

    _this.handleFileUploadComplete = function (file, e) {
      var onUpload = _this.props.onUpload;

      _this.setState({
        shouldShowUploader: false,
        previewName: file.name,
        previewSrc: e.target.result
      });

      onUpload(file, e.target.result);
    };

    return _this;
  }

  _createClass(StatefulUploader, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.initializeState(this.props.displayComponentProps);
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(_ref) {
      var resetCode = _ref.resetCode,
          displayComponentProps = _ref.displayComponentProps;

      if (resetCode !== this.props.resetCode) {
        this.initializeState(displayComponentProps);
      }
    }
  }, {
    key: "initializeState",
    value: function initializeState(displayComponentProps) {
      if (displayComponentProps && displayComponentProps.src) {
        this.setState({
          shouldShowUploader: false,
          previewName: null,
          previewSrc: null
        });
      } else {
        this.setState({
          shouldShowUploader: true,
          previewName: null,
          previewSrc: null
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_adstudioTape.Uploader, _extends({}, this.props, this.state, {
        onClickDelete: this.handleClickDelete,
        onUpload: this.handleFileUpload
      }));
    }
  }]);

  return StatefulUploader;
}(_react.Component);

exports["default"] = StatefulUploader;
StatefulUploader.propTypes = {
  accept: _propTypes["default"].object,
  displayComponent: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func]),
  displayComponentProps: _propTypes["default"].shape({
    src: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
    name: _propTypes["default"].string
  }),
  displayIcon: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func]).isRequired,
  errorMessage: _propTypes["default"].string,
  id: _propTypes["default"].string.isRequired,
  isUploading: _propTypes["default"].bool,
  onClickDelete: _propTypes["default"].func.isRequired,
  onError: _propTypes["default"].func.isRequired,
  onUpload: _propTypes["default"].func.isRequired,
  resetCode: _propTypes["default"].number,
  shouldShowDownload: _propTypes["default"].bool,
  uploadText: _propTypes["default"].string.isRequired,
  uploadingProgress: _propTypes["default"].number
};