"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ArtistTargetingSearch;

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _react = _interopRequireDefault(require("react"));

var _TargetingSearch = _interopRequireDefault(require("../TargetingSearch"));

var _Suggestion = _interopRequireDefault(require("./Suggestion"));

var _Value = _interopRequireDefault(require("./Value"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ArtistTargetingSearch(props) {
  var inlineValueProps = {};

  if (props.inlineValue) {
    inlineValueProps.renderValue = function (props) {
      var disabled = props.disabled,
          _props$value = props.value,
          value = _props$value === void 0 ? [] : _props$value,
          handleRemove = props.handleRemove,
          keyField = props.keyField,
          valueField = props.valueField;
      var item = value[0] || {};
      return /*#__PURE__*/_react["default"].createElement(_Value["default"], {
        disabled: disabled,
        item: item,
        onClick: function onClick() {
          return handleRemove(item);
        },
        keyField: keyField,
        key: item[keyField],
        valueField: valueField
      });
    };
  }

  return /*#__PURE__*/_react["default"].createElement(_TargetingSearch["default"], _extends({}, props, inlineValueProps, {
    clickthroughUrl: "https://open.spotify.com/artist",
    preloadOptions: false,
    renderSuggestion: function renderSuggestion(suggestionProps) {
      return /*#__PURE__*/_react["default"].createElement(_Suggestion["default"], suggestionProps);
    },
    targetingEntity: "artist"
  }));
}

ArtistTargetingSearch.propTypes = (0, _omit2["default"])(_TargetingSearch["default"].propTypes, ['preloadOptions', 'renderSuggestion', 'targetingEntity']);
ArtistTargetingSearch.defaultProps = {
  suggestionsLimit: Infinity
};