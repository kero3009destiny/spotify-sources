"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _utilities = require("../../utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AM = 'AM';
var PM = 'PM';

var HourPicker = _styledComponents["default"].input.withConfig({
  displayName: "TimePicker__HourPicker",
  componentId: "exapbx-0"
})(["text-align:right;"]);

var MinutePicker = _styledComponents["default"].input.withConfig({
  displayName: "TimePicker__MinutePicker",
  componentId: "exapbx-1"
})([""]);

var MeridianPicker = _styledComponents["default"].select.withConfig({
  displayName: "TimePicker__MeridianPicker",
  componentId: "exapbx-2"
})(["-webkit-appearance:none;-moz-appearance:none;appearance:none;background:transparent;"]);

var Colon = _styledComponents["default"].span.withConfig({
  displayName: "TimePicker__Colon",
  componentId: "exapbx-3"
})([""]);

var TimePickerContainer = _styledComponents["default"].div.withConfig({
  displayName: "TimePicker__TimePickerContainer",
  componentId: "exapbx-4"
})(["border:1px solid ", ";border-radius:", ";margin:", " 0 0;padding:", " ", ";width:130px;", ",", ",", "{background:transparent;border:0;width:", ";}", " ", ""], _encoreAdvertisingWeb.gray60, _encoreAdvertisingWeb.spacer4, _encoreAdvertisingWeb.spacer16, _encoreAdvertisingWeb.spacer8, _encoreAdvertisingWeb.spacer4, HourPicker, MinutePicker, MeridianPicker, _encoreAdvertisingWeb.spacer32, function (props) {
  return props.disabled && (0, _styledComponents.css)(["background-color:", ";border-color:", ";cursor:not-allowed;", ",", ",", ",", "{color:", ";cursor:not-allowed;}"], _encoreAdvertisingWeb.gray95, _encoreAdvertisingWeb.gray75, HourPicker, MinutePicker, MeridianPicker, Colon, _encoreAdvertisingWeb.gray75);
}, function (props) {
  return props.error && "border-color: ".concat(_encoreAdvertisingWeb.failure, ";");
});

var TimePicker = /*#__PURE__*/function (_Component) {
  _inherits(TimePicker, _Component);

  var _super = _createSuper(TimePicker);

  function TimePicker(props) {
    var _this;

    _classCallCheck(this, TimePicker);

    _this = _super.call(this, props);
    var _props$timeMaximums = props.timeMaximums,
        hoursMax = _props$timeMaximums.hours,
        minutesMax = _props$timeMaximums.minutes;
    _this.handleOnClick = _this.handleOnClick.bind(_assertThisInitialized(_this));
    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
    _this.handleHourChange = _this.handleTimeChange.bind(_assertThisInitialized(_this), 'hours', hoursMax);
    _this.handleMinuteChange = _this.handleTimeChange.bind(_assertThisInitialized(_this), 'minutes', minutesMax);
    _this.handleOnChangeMeridian = _this.handleOnChangeMeridian.bind(_assertThisInitialized(_this));
    _this.handleOnBlurHours = _this.handleOnBlurHours.bind(_assertThisInitialized(_this));
    _this.handleOnBlurMinutes = _this.handleOnBlurMinutes.bind(_assertThisInitialized(_this));
    var _props$value = props.value,
        hours = _props$value.hours,
        minutes = _props$value.minutes,
        meridian = _props$value.meridian;
    _this.state = {
      hours: hours,
      minutes: minutes,
      meridian: meridian
    };
    return _this;
  }

  _createClass(TimePicker, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var _nextProps$value = nextProps.value,
          hours = _nextProps$value.hours,
          minutes = _nextProps$value.minutes,
          meridian = _nextProps$value.meridian;
      this.setState({
        hours: hours,
        minutes: minutes,
        meridian: meridian
      });
    }
  }, {
    key: "handleOnClick",
    value: function handleOnClick(e) {
      e.target.select();
    }
  }, {
    key: "handleChange",
    value: function handleChange(_ref) {
      var _ref$hours = _ref.hours,
          hours = _ref$hours === void 0 ? this.props.value.hours : _ref$hours,
          _ref$minutes = _ref.minutes,
          minutes = _ref$minutes === void 0 ? this.props.value.minutes : _ref$minutes,
          _ref$meridian = _ref.meridian,
          meridian = _ref$meridian === void 0 ? this.props.value.meridian : _ref$meridian;
      // Defaults in case user enters empty string
      var newTimeState = {
        hours: hours || '12',
        minutes: minutes || '01',
        meridian: meridian
      };
      this.props.onChange(newTimeState);
    }
  }, {
    key: "handleTimeChange",
    value: function handleTimeChange(unit, max, _ref2) {
      var value = _ref2.target.value;

      if (value.trim().length === 0 || (0, _utilities.inRange)(value, 0, max)) {
        this.setState(_defineProperty({}, unit, value));
      }
    }
  }, {
    key: "handleOnChangeMeridian",
    value: function handleOnChangeMeridian(_ref3) {
      var meridian = _ref3.target.value;
      this.handleChange({
        meridian: meridian
      });
    }
  }, {
    key: "handleOnBlurHours",
    value: function handleOnBlurHours(_ref4) {
      var hours = _ref4.target.value;
      this.handleChange({
        hours: hours
      });
    }
  }, {
    key: "handleOnBlurMinutes",
    value: function handleOnBlurMinutes(_ref5) {
      var minutes = _ref5.target.value;
      this.handleChange({
        minutes: minutes
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          error = _this$props.error;
      var _this$state = this.state,
          hours = _this$state.hours,
          minutes = _this$state.minutes,
          meridian = _this$state.meridian;
      return /*#__PURE__*/_react["default"].createElement(TimePickerContainer, {
        disabled: disabled,
        error: error
      }, /*#__PURE__*/_react["default"].createElement(HourPicker, {
        "data-test": "hour-picker",
        disabled: disabled,
        maxLength: "2",
        onBlur: this.handleOnBlurHours,
        onChange: this.handleHourChange,
        onClick: this.handleOnClick,
        size: "2",
        type: "text",
        value: hours
      }), /*#__PURE__*/_react["default"].createElement(Colon, null, ":"), /*#__PURE__*/_react["default"].createElement(MinutePicker, {
        "data-test": "minute-picker",
        disabled: disabled,
        maxLength: "2",
        onBlur: this.handleOnBlurMinutes,
        onChange: this.handleMinuteChange,
        onClick: this.handleOnClick,
        size: "2",
        type: "text",
        value: minutes
      }), meridian && /*#__PURE__*/_react["default"].createElement(MeridianPicker, {
        "data-test": "meridian-picker",
        disabled: disabled,
        onChange: this.handleOnChangeMeridian,
        onKeyUp: this.handleOnKeyUpMeridian,
        value: meridian
      }, /*#__PURE__*/_react["default"].createElement("option", {
        value: AM
      }, "AM"), /*#__PURE__*/_react["default"].createElement("option", {
        value: PM
      }, "PM")));
    }
  }]);

  return TimePicker;
}(_react.Component);

exports["default"] = TimePicker;
TimePicker.propTypes = {
  disabled: _propTypes["default"].bool,
  error: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].bool]),
  onChange: _propTypes["default"].func.isRequired,
  timeMaximums: _propTypes["default"].shape({
    hours: _propTypes["default"].number.isRequired,
    minutes: _propTypes["default"].number.isRequired
  }),
  value: _propTypes["default"].shape({
    hours: _propTypes["default"].string.isRequired,
    minutes: _propTypes["default"].string.isRequired,
    meridian: _propTypes["default"].oneOf([AM, PM])
  })
};