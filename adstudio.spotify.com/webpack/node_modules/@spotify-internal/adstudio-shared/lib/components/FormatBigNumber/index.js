"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildBigNumber = buildBigNumber;
exports.FormatBigNumber = FormatBigNumber;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _FormatNumber = _interopRequireDefault(require("../FormatNumber"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var THRESHOLDS = [{
  threshold: 1e3,
  suffix: 'k'
}, {
  threshold: 1e6,
  suffix: 'm'
}, {
  threshold: 1e9,
  suffix: 'b'
}];

function buildBigNumber(underlyingNumber) {
  var number = underlyingNumber;
  var suffix = '';
  THRESHOLDS.forEach(function (_ref) {
    var threshold = _ref.threshold,
        newSuffix = _ref.suffix;
    var newNumber = underlyingNumber / threshold;

    if (newNumber >= 1) {
      suffix = newSuffix;
      number = Number(newNumber.toPrecision(3));
    }
  });
  return {
    number: number,
    suffix: suffix
  };
}
/**
 * given a number and a format-number options object, render the formatted number
 */


function FormatBigNumber(_ref2) {
  var underlyingNumber = _ref2.number,
      _ref2$format = _ref2.format,
      format = _ref2$format === void 0 ? {} : _ref2$format;

  var _buildBigNumber = buildBigNumber(underlyingNumber),
      number = _buildBigNumber.number,
      suffix = _buildBigNumber.suffix;

  return /*#__PURE__*/_react["default"].createElement(_FormatNumber["default"], {
    format: _objectSpread(_objectSpread({}, format), {}, {
      suffix: "".concat(suffix).concat(format.suffix || '')
    }),
    number: number
  });
}

FormatBigNumber.propTypes = {
  format: _propTypes["default"].object,
  number: _propTypes["default"].number.isRequired
};
var _default = FormatBigNumber;
exports["default"] = _default;