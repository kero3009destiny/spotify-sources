"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.BulkLocationsUploader = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _remove = _interopRequireDefault(require("lodash/remove"));

var _uniq = _interopRequireDefault(require("lodash/uniq"));

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _api = require("./api");

var _Body = require("./Body");

var _adstudioTape = require("@spotify-internal/adstudio-tape");

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _constants = require("./constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var StyledDialogConfirmation = (0, _styledComponents["default"])(_encoreAdvertisingWeb.DialogConfirmation).withConfig({
  displayName: "BulkLocationsUploader__StyledDialogConfirmation",
  componentId: "sc-1puvzwv-0"
})(["min-width:600px;max-width:800px;height:70vh;min-width:600px;max-width:800px;width:70vw;& > div{flex:1;}"]);
var DEFAULT_STATE = {
  hasFetched: false,
  matchedLocations: [],
  showMatches: false,
  textInput: '',
  unmatchedLocations: [],
  overTargetingLimit: false,
  currentTargetCount: 0
};

var BulkLocationsUploader = /*#__PURE__*/function (_Component) {
  _inherits(BulkLocationsUploader, _Component);

  var _super = _createSuper(BulkLocationsUploader);

  function BulkLocationsUploader() {
    var _this;

    _classCallCheck(this, BulkLocationsUploader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = DEFAULT_STATE;
    _this.NEWLINE_AND_SEMICOLONS_REGEX = new RegExp(/[\n|\r|\n\r|;]+/gm);

    _this.onClose = function () {
      _this.setState(DEFAULT_STATE);

      _this.props.onModalClose();
    };

    _this.onDeleteLocation = function (loc) {
      _this.setState({
        matchedLocations: (0, _remove["default"])(_this.state.matchedLocations, function (obj) {
          return obj.geoId !== loc.geoId;
        })
      });
    };

    _this.onDeleteError = function (err) {
      _this.setState({
        unmatchedLocations: (0, _remove["default"])(_this.state.unmatchedLocations, function (obj) {
          return obj !== err;
        })
      });
    };

    _this.onInputSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var text, locationsArray, _yield$fetchLocations, validLocations, invalidLocations;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              /* Delimit by newline or semicolon, trim all leading and trailing whitespace, then remove any empty values */
              text = _this.state.textInput;
              locationsArray = _this.parseBulkLocationsToArray(text); // Don't call API if empty

              if (!(0, _isEmpty["default"])(locationsArray)) {
                _context.next = 5;
                break;
              }

              _this.setState({
                hasFetched: true
              });

              return _context.abrupt("return");

            case 5:
              _context.next = 7;
              return (0, _api.fetchLocations)(locationsArray, _this.props.parentCountry, _this.props.edgeHost);

            case 7:
              _yield$fetchLocations = _context.sent;
              validLocations = _yield$fetchLocations.validLocations;
              invalidLocations = _yield$fetchLocations.invalidLocations;

              if (validLocations && invalidLocations) {
                _this.setState({
                  matchedLocations: validLocations,
                  unmatchedLocations: (0, _uniq["default"])(invalidLocations),
                  hasFetched: true,
                  showMatches: true
                });
              }

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return _this;
  }

  _createClass(BulkLocationsUploader, [{
    key: "parseBulkLocationsToArray",
    value: function parseBulkLocationsToArray(values) {
      return values.split(this.NEWLINE_AND_SEMICOLONS_REGEX).map(function (postalCode) {
        return postalCode.trim();
      }).filter(function (val) {
        return !!val;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          onSubmit = _this$props.onSubmit,
          limit = _this$props.limit,
          initialTargetCount = _this$props.initialTargetCount,
          strings = _this$props.strings;
      var _this$state = this.state,
          hasFetched = _this$state.hasFetched,
          matchedLocations = _this$state.matchedLocations,
          showMatches = _this$state.showMatches,
          unmatchedLocations = _this$state.unmatchedLocations,
          overTargetingLimit = _this$state.overTargetingLimit,
          currentTargetCount = _this$state.currentTargetCount;
      var CANCEL_BUTTON = strings.CANCEL_BUTTON,
          DIALOG_TITLE = strings.DIALOG_TITLE,
          ADD_LOCATIONS_BUTTON_TEXT = strings.ADD_LOCATIONS_BUTTON_TEXT,
          MATCH_LOCATIONS_BUTTON_TEXT = strings.MATCH_LOCATIONS_BUTTON_TEXT;

      var getAddLocationsButtonText = function getAddLocationsButtonText(num) {
        return ADD_LOCATIONS_BUTTON_TEXT.replace(/\[num\]/, num);
      };

      var numMatches = matchedLocations.length;
      var numErrors = unmatchedLocations.length;
      var nextButtonText = showMatches ? getAddLocationsButtonText(numMatches) : MATCH_LOCATIONS_BUTTON_TEXT;
      return /*#__PURE__*/_react["default"].createElement(_adstudioTape.EscapableBackdrop, null, /*#__PURE__*/_react["default"].createElement(StyledDialogConfirmation, {
        id: "bulk-locations-uploader",
        dialogTitle: /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.h1, {
          variant: _encoreAdvertisingWeb.Type.heading3,
          condensed: true
        }, DIALOG_TITLE),
        body: /*#__PURE__*/_react["default"].createElement(_Body.Body, {
          overTargetingLimit: overTargetingLimit,
          limit: limit,
          targetCount: currentTargetCount ? currentTargetCount : initialTargetCount,
          hasFetched: hasFetched,
          matchedLocations: matchedLocations,
          numErrors: numErrors,
          numMatches: numMatches,
          onChange: function onChange(e) {
            var locationsArray = _this2.parseBulkLocationsToArray(e.target.value);

            var updatedTargetCount = locationsArray.length + initialTargetCount;

            _this2.setState({
              textInput: e.target.value,
              overTargetingLimit: updatedTargetCount > limit,
              currentTargetCount: updatedTargetCount
            });
          },
          onDeleteLocation: this.onDeleteLocation,
          onDeleteError: this.onDeleteError,
          showMatches: showMatches,
          strings: strings,
          unmatchedLocations: unmatchedLocations
        }),
        footer: /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.ButtonTertiary, {
          id: "bulk-locations-upload-cancel",
          onClick: this.onClose
        }, CANCEL_BUTTON), /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.ButtonPrimary, {
          id: "bulk-locations-upload-next",
          onClick: function onClick() {
            if (!showMatches) {
              // Fetch location matches
              _this2.onInputSubmit();
            } else {
              // Submit matched locations
              onSubmit(matchedLocations);
            }
          },
          disabled: showMatches && numMatches === 0 || !this.state.textInput || overTargetingLimit
        }, nextButtonText)),
        onClose: this.onClose
      }));
    }
  }]);

  return BulkLocationsUploader;
}(_react.Component);

exports.BulkLocationsUploader = BulkLocationsUploader;
var _default = BulkLocationsUploader;
exports["default"] = _default;
BulkLocationsUploader.propTypes = {
  parentCountry: _propTypes["default"].string.isRequired,
  onModalClose: _propTypes["default"].func.isRequired,
  onSubmit: _propTypes["default"].func.isRequired,
  edgeHost: _propTypes["default"].string.isRequired,
  availableLimit: _propTypes["default"].number.isRequired,
  limit: _propTypes["default"].number.isRequired,
  initialTargetCount: _propTypes["default"].number.isRequired,
  strings: _propTypes["default"].object
};
BulkLocationsUploader.defaultProps = {
  strings: _constants.BULK_LOCATION_STRINGS
};