"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Body = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _LocationsReview = _interopRequireDefault(require("./LocationsReview"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var BodyContainer = _styledComponents["default"].div.withConfig({
  displayName: "Body__BodyContainer",
  componentId: "rx4q9s-0"
})(["display:flex;flex-direction:column;height:100%;"]);

var LocationsInput = (0, _styledComponents["default"])(_encoreAdvertisingWeb.FormTextarea).withConfig({
  displayName: "Body__LocationsInput",
  componentId: "rx4q9s-1"
})(["width:100%;resize:vertical;flex:1;", ""], function (props) {
  return props.error && "border-color: ".concat(_encoreAdvertisingWeb.failure, ";");
});

var LocationCounter = _styledComponents["default"].div.withConfig({
  displayName: "Body__LocationCounter",
  componentId: "rx4q9s-2"
})([""]);

var LocationCounterWithError = _styledComponents["default"].div.withConfig({
  displayName: "Body__LocationCounterWithError",
  componentId: "rx4q9s-3"
})(["width:100%;display:grid;grid-template-columns:1fr 200px;", "{justify-self:end;}"], LocationCounter);

var Body = function Body(_ref) {
  var onChange = _ref.onChange,
      hasFetched = _ref.hasFetched,
      matchedLocations = _ref.matchedLocations,
      numErrors = _ref.numErrors,
      numMatches = _ref.numMatches,
      onDeleteError = _ref.onDeleteError,
      onDeleteLocation = _ref.onDeleteLocation,
      showMatches = _ref.showMatches,
      unmatchedLocations = _ref.unmatchedLocations,
      overTargetingLimit = _ref.overTargetingLimit,
      limit = _ref.limit,
      strings = _ref.strings,
      targetCount = _ref.targetCount;

  // Show locations review if input was submitted
  if (showMatches) {
    return /*#__PURE__*/_react["default"].createElement(_LocationsReview["default"], {
      hasFetchedLocations: hasFetched,
      matchedLocations: matchedLocations,
      numErrors: numErrors,
      numMatches: numMatches,
      onDeleteLocation: onDeleteLocation,
      onDeleteError: onDeleteError,
      strings: strings,
      unmatchedLocations: unmatchedLocations
    });
  }

  var PLACEHOLDER_TEXT = strings.PLACEHOLDER_TEXT,
      UPLOAD_BODY_TEXT = strings.UPLOAD_BODY_TEXT,
      UPLOAD_SUBDESCRIPTION_TEXT = strings.UPLOAD_SUBDESCRIPTION_TEXT,
      LOCATION_COUNT_TEXT = strings.LOCATION_COUNT_TEXT,
      LOCATION_LIMIT_ERROR_TEXT = strings.LOCATION_LIMIT_ERROR_TEXT; // Otherwise show locations text input

  var locationLimitErrorText = function locationLimitErrorText(l) {
    return LOCATION_LIMIT_ERROR_TEXT.replace(/\[limit\]/, l);
  };

  var locationCountText = function locationCountText(num, l) {
    return LOCATION_COUNT_TEXT.replace(/\[num\]/, num).replace(/\[limit\]/, l);
  };

  return /*#__PURE__*/_react["default"].createElement(BodyContainer, null, /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.p, {
    variant: _encoreAdvertisingWeb.Type.body1,
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold
  }, UPLOAD_BODY_TEXT), /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.p, {
    variant: _encoreAdvertisingWeb.Type.body1,
    weight: _encoreAdvertisingWeb.Type.book
  }, UPLOAD_SUBDESCRIPTION_TEXT)), /*#__PURE__*/_react["default"].createElement(LocationsInput, {
    id: "bulk-locations-upload-input",
    placeholder: PLACEHOLDER_TEXT,
    onChange: onChange,
    error: overTargetingLimit
  }), /*#__PURE__*/_react["default"].createElement(LocationCounterWithError, null, /*#__PURE__*/_react["default"].createElement("div", null, overTargetingLimit ? /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.p, {
    variant: _encoreAdvertisingWeb.Type.body2,
    color: _encoreAdvertisingWeb.failure
  }, locationLimitErrorText(limit)) : null), /*#__PURE__*/_react["default"].createElement(LocationCounter, null, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.p, {
    variant: _encoreAdvertisingWeb.Type.body2,
    color: overTargetingLimit ? _encoreAdvertisingWeb.failure : _encoreAdvertisingWeb.gray60
  }, locationCountText(targetCount, limit)))));
};

exports.Body = Body;
Body.propTypes = {
  onChange: _propTypes["default"].func.isRequired,
  hasFetched: _propTypes["default"].bool.isRequired,
  overTargetingLimit: _propTypes["default"].bool.isRequired,
  matchedLocations: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    geoId: _propTypes["default"].string,
    name: _propTypes["default"].string,
    parentName: _propTypes["default"].string,
    type: _propTypes["default"].string,
    typeDisplayName: _propTypes["default"].string
  })),
  numErrors: _propTypes["default"].number.isRequired,
  numMatches: _propTypes["default"].number.isRequired,
  onDeleteError: _propTypes["default"].func.isRequired,
  onDeleteLocation: _propTypes["default"].func.isRequired,
  showMatches: _propTypes["default"].bool.isRequired,
  unmatchedLocations: _propTypes["default"].array.isRequired,
  limit: _propTypes["default"].number.isRequired,
  strings: _propTypes["default"].object,
  targetCount: _propTypes["default"].number.isRequired
};
Body.defaultProps = {
  strings: _constants.BULK_LOCATION_STRINGS
};