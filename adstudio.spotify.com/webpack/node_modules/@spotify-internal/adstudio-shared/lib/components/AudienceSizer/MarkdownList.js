"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarkdownList = MarkdownList;

var _react = _interopRequireDefault(require("react"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var MarkdownListContainer = _styledComponents["default"].div.withConfig({
  displayName: "MarkdownList__MarkdownListContainer",
  componentId: "d929to-0"
})(["margin-bottom:", ";"], _encoreAdvertisingWeb.spacer8);

var StyledList = _styledComponents["default"].ul.withConfig({
  displayName: "MarkdownList__StyledList",
  componentId: "d929to-1"
})(["padding-left:19px;padding-bottom:0;margin:4px 0 0;list-style-type:disc;"]);

var StyledListItem = _styledComponents["default"].li.withConfig({
  displayName: "MarkdownList__StyledListItem",
  componentId: "d929to-2"
})(["display:list-item;font-size:inherit;"]);

function MarkdownList(_ref) {
  var className = _ref.className,
      source = _ref.source;
  var isCreateFlowRedesignEnabled = true;
  return /*#__PURE__*/_react["default"].createElement(MarkdownListContainer, {
    className: className
  }, /*#__PURE__*/_react["default"].createElement(_reactMarkdown["default"], {
    escapeHtml: false,
    renderers: {
      paragraph: function paragraph(props) {
        return /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.p, _extends({
          variant: _encoreAdvertisingWeb.Type.body3,
          color: isCreateFlowRedesignEnabled ? _encoreAdvertisingWeb.gray30 : undefined,
          condensed: true
        }, props));
      },
      list: StyledList,
      listItem: StyledListItem
    },
    source: source
  }));
}