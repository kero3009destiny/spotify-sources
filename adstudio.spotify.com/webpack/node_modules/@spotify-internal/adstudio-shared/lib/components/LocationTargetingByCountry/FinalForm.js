"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.LocationTargetingByCountry = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _get = _interopRequireDefault(require("lodash/get"));

var _reactFinalForm = require("react-final-form");

var _ApiContainer = _interopRequireDefault(require("./ApiContainer"));

var _CountrySearch = _interopRequireWildcard(require("./CountrySearch/CountrySearch"));

var _LocationSearch = _interopRequireWildcard(require("./LocationSearch/LocationSearch"));

var _LocationTargetingOptions = _interopRequireWildcard(require("./LocationTargetingOptions/LocationTargetingOptions"));

var _constants = require("../AdTargeting/constants");

var _constants2 = require("../BulkLocationsUploader/constants");

var _validators = require("@spotify-internal/adstudio-web-utils/lib/validators");

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _validators2 = require("../../utils/validators");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Container = _styledComponents["default"].div.withConfig({
  displayName: "FinalForm__Container",
  componentId: "j0tbhx-0"
})([""]);

var SearchSection = (0, _styledComponents["default"])(_reactFinalForm.Field).withConfig({
  displayName: "FinalForm__SearchSection",
  componentId: "j0tbhx-1"
})(["& > div{padding-bottom:", ";}"], _encoreAdvertisingWeb.spacer16);
var DEFAULT_STRINGS = {
  countrySearch: _CountrySearch.DEFAULT_STRINGS,
  locationSearch: _objectSpread(_objectSpread({}, _LocationSearch.DEFAULT_STRINGS), {}, {
    SELECT_ONE_LOCATION: _constants.SELECT_ONE_LOCATION
  }),
  targetingOptions: _LocationTargetingOptions.DEFAULT_STRINGS,
  bulkUploader: _constants2.BULK_LOCATION_STRINGS
};

var ErrorMessage = function ErrorMessage(_ref) {
  var meta = _ref.fieldRenderProps.meta;
  if (!meta.error || !meta.touched) return null;
  return /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.FormHelpText, {
    error: true
  }, meta.error);
};

var LocationTargetingByCountry = function LocationTargetingByCountry(props) {
  var strings = props.strings || DEFAULT_STRINGS;
  var formApi = (0, _reactFinalForm.useForm)();
  var locationsField = (0, _reactFinalForm.useField)(props.locationFieldName);
  var countryField = (0, _reactFinalForm.useField)(props.countryFieldName);
  var targetWholeCountryField = (0, _reactFinalForm.useField)(props.targetWholeCountryFieldName);
  var parentCountry = (0, _get["default"])(countryField, 'input.value.0.countryCode');
  var targetWholeCountry = targetWholeCountryField.input.value;
  return /*#__PURE__*/_react["default"].createElement(Container, null, /*#__PURE__*/_react["default"].createElement(_ApiContainer["default"], {
    apiHost: props.apiHost
  }, /*#__PURE__*/_react["default"].createElement(SearchSection, {
    name: props.countryFieldName,
    validate: (0, _validators2.withCustomMessage)(_validators.required, strings.countrySearch.COUNTRY_ERROR_MESSAGE),
    render: function render(fieldRenderProps) {
      return /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.EnhancedFormGroup, {
        label: strings.countrySearch.COUNTRY_LABEL,
        popover: /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.IconWithTooltip, {
          content: strings.countrySearch.COUNTRY_TOOLTIP_DESCRIPTION
        }),
        helpText: /*#__PURE__*/_react["default"].createElement(ErrorMessage, {
          fieldRenderProps: fieldRenderProps
        })
      }, /*#__PURE__*/_react["default"].createElement(_CountrySearch["default"], {
        fieldRenderProps: fieldRenderProps,
        disableCountry: props.disableCountry,
        excludeCountries: props.excludeCountries,
        handleRemoveCountry: function handleRemoveCountry() {
          formApi.batch(function () {
            fieldRenderProps.input.onChange([]);
            locationsField.input.onChange([]);
            targetWholeCountryField.input.onChange(false);
          });
        },
        language: props.language,
        strings: strings.countrySearch,
        onChange: fieldRenderProps.input.onChange
      }));
    }
  }), /*#__PURE__*/_react["default"].createElement(SearchSection, {
    name: props.locationFieldName,
    validate: (0, _validators2.withCustomMessage)((0, _validators2.combinedLocationValidatorCustomField)(props.targetWholeCountryFieldName), // FIXME(ADSD-869): when the validation is run, on some passes this
    //        value is undefined. Root cause should be addressed,
    //        but withCustomMessage has been patched to fallback to
    //        the validator's message to prevent invalid submissions.
    strings.locationSearch.SELECT_ONE_LOCATION, // @ts-ignore
    props.targetWholeCountryFieldName),
    render: function render(fieldRenderProps) {
      return /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.EnhancedFormGroup, {
        label: strings.locationSearch.LOCATION_LABEL,
        popover: /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.IconWithTooltip, {
          content: strings.locationSearch.LOCATION_TOOLTIP_DESCRIPTION
        }),
        helpText: /*#__PURE__*/_react["default"].createElement(ErrorMessage, {
          fieldRenderProps: fieldRenderProps
        })
      }, /*#__PURE__*/_react["default"].createElement(_LocationSearch["default"], {
        fieldRenderProps: fieldRenderProps,
        disableLocations: !parentCountry || targetWholeCountry,
        excludeCountries: props.excludeCountries,
        parentCountry: parentCountry,
        strings: strings.locationSearch,
        bulkUploaderStrings: strings.bulkUploader,
        language: props.language,
        limit: props.limit,
        subdivisionCategories: strings.subdivisionCategories,
        onChange: fieldRenderProps.input.onChange,
        deprecatedGeosFaqLink: props.deprecatedGeosFaqLink,
        handleDeprecatedGeos: props.handleDeprecatedGeos,
        geoLocationSearchableTypes: props.geoLocationSearchableTypes
      }));
    }
  }), /*#__PURE__*/_react["default"].createElement(_reactFinalForm.Field, {
    name: props.targetWholeCountryFieldName,
    type: "checkbox",
    render: function render(fieldRenderProps) {
      return /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.EnhancedFormGroup, {
        condensed: true,
        hideLabel: true
      }, /*#__PURE__*/_react["default"].createElement(_LocationTargetingOptions["default"], {
        fieldRenderProps: fieldRenderProps,
        disableTargetWholeCountry: !parentCountry,
        disableBulkUploadZip: !parentCountry || props.disableBulkUploadZip,
        strings: strings.targetingOptions,
        parentCountry: parentCountry,
        limit: props.limit,
        onLocationChange: locationsField.input.onChange,
        bulkUploaderStrings: strings.bulkUploader,
        targetedLocations: locationsField.input.value
      }));
    }
  })));
};

exports.LocationTargetingByCountry = LocationTargetingByCountry;
LocationTargetingByCountry.defaultProps = {
  excludeCountries: [],
  handleDeprecatedGeos: false
};
var _default = LocationTargetingByCountry;
exports["default"] = _default;