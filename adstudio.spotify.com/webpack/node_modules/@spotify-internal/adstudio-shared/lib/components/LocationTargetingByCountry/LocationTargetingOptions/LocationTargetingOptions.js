"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.LocationTargetingOptions = exports.BulkAddButton = exports.StyledCheckbox = exports.DEFAULT_STRINGS = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _uniqBy = _interopRequireDefault(require("lodash/uniqBy"));

var _ReduxFormFieldHOC = _interopRequireDefault(require("../../ReduxFormFieldHOC"));

var _adstudioTape = require("@spotify-internal/adstudio-tape");

var _CustomEncore = require("../../CustomEncore");

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _BulkLocationsUploader = _interopRequireDefault(require("../../BulkLocationsUploader"));

var _WithLocationLimitTooltip = _interopRequireDefault(require("../WithLocationLimitTooltip"));

var _constants = require("../constants");

var _i18n = require("../../../config/i18n");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DEFAULT_STRINGS = {
  BULK_ADD_MESSAGE: _constants.BULK_ADD_MESSAGE,
  LABEL_MESSAGE: _constants.LABEL_MESSAGE
};
exports.DEFAULT_STRINGS = DEFAULT_STRINGS;
var DEFAULT_HOST = 'https://edge-grpc.spotify.com';
var DEFAULT_PARENT_COUNTRY = _i18n.DEFAULT_COUNTRY;

var OptionsWrapper = _styledComponents["default"].div.withConfig({
  displayName: "LocationTargetingOptions__OptionsWrapper",
  componentId: "sc-1f0f535-0"
})(["display:flex;gap:", ";justify-content:flex-end;align-items:center;"], _encoreAdvertisingWeb.spacer16);

var StyledCheckbox = (0, _styledComponents["default"])(_adstudioTape.Checkbox).withConfig({
  displayName: "LocationTargetingOptions__StyledCheckbox",
  componentId: "sc-1f0f535-1"
})(["&&{margin-right:", ";cursor:", ";margin-bottom:0;}& + div > span{font-size:14px;color:", ";line-height:", ";}svg{margin-bottom:0;}"], _encoreAdvertisingWeb.spacer8, function (props) {
  return props.disabled && 'not-allowed';
}, function (props) {
  return props.disabled ? _encoreAdvertisingWeb.gray75 : 'initial';
}, _encoreAdvertisingWeb.spacer16);
exports.StyledCheckbox = StyledCheckbox;
var BulkAddButton = (0, _styledComponents["default"])(_CustomEncore.ButtonSecondary).withConfig({
  displayName: "LocationTargetingOptions__BulkAddButton",
  componentId: "sc-1f0f535-2"
})(["padding:10px;margin-bottom:", ";"], _encoreAdvertisingWeb.spacer32);
exports.BulkAddButton = BulkAddButton;

var BulkLocationsContainer = _styledComponents["default"].div.withConfig({
  displayName: "LocationTargetingOptions__BulkLocationsContainer",
  componentId: "sc-1f0f535-3"
})(["display:flex;justify-content:flex-end;"]); // TODO: Update naming to reflect Final Form adaptability


var ReduxCheckbox = (0, _ReduxFormFieldHOC["default"])(function (_ref) {
  var value = _ref.value,
      checked = _ref.checked,
      strings = _ref.strings,
      props = _objectWithoutProperties(_ref, ["value", "checked", "strings"]);

  return /*#__PURE__*/_react["default"].createElement(StyledCheckbox, _extends({}, props, {
    value: checked !== null && checked !== void 0 ? checked : value,
    checked: checked !== null && checked !== void 0 ? checked : value,
    label: strings.LABEL_MESSAGE
  }));
});

var LocationTargetingOptions = function LocationTargetingOptions(props) {
  var disableTargetWholeCountry = props.disableTargetWholeCountry,
      disableBulkUploadZip = props.disableBulkUploadZip,
      limit = props.limit,
      bulkUploaderStrings = props.bulkUploaderStrings,
      targetedLocations = props.targetedLocations,
      onLocationChange = props.onLocationChange,
      fieldRenderProps = props.fieldRenderProps;

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      showModal = _useState2[0],
      setShowModal = _useState2[1];

  var overTargetingLimit = targetedLocations.length >= limit;
  var strings = props.strings || DEFAULT_STRINGS;
  var edgeHost = props.edgeHost || DEFAULT_HOST;
  var parentCountry = props.parentCountry || DEFAULT_PARENT_COUNTRY;
  return /*#__PURE__*/_react["default"].createElement(OptionsWrapper, null, /*#__PURE__*/_react["default"].createElement(ReduxCheckbox, _extends({}, fieldRenderProps, {
    condensed: true,
    id: "target-country-checkbox",
    type: "checkbox",
    disabled: disableTargetWholeCountry,
    strings: strings || DEFAULT_STRINGS,
    flush: true
  })), /*#__PURE__*/_react["default"].createElement(BulkLocationsContainer, null, /*#__PURE__*/_react["default"].createElement(_WithLocationLimitTooltip["default"], {
    limit: limit,
    overTargetingLimit: overTargetingLimit
  }, /*#__PURE__*/_react["default"].createElement(_CustomEncore.ButtonSecondary, {
    id: "bulk-location-upload-button",
    buttonSize: _CustomEncore.ButtonSecondary.sm,
    onClick: function onClick() {
      setShowModal(true);
    },
    disabled: disableBulkUploadZip || overTargetingLimit
  }, strings.BULK_ADD_MESSAGE)), showModal && /*#__PURE__*/_react["default"].createElement(_BulkLocationsUploader["default"], {
    edgeHost: edgeHost,
    targetedLocations: targetedLocations,
    initialTargetCount: targetedLocations.length,
    limit: limit,
    onSubmit: function onSubmit(locations) {
      var mergedLocations = [].concat(_toConsumableArray(targetedLocations), _toConsumableArray(locations));
      onLocationChange((0, _uniqBy["default"])(mergedLocations, 'geoId'));
      setShowModal(false);
    },
    parentCountry: parentCountry,
    onModalClose: function onModalClose() {
      return setShowModal(false);
    },
    strings: bulkUploaderStrings
  })));
};

exports.LocationTargetingOptions = LocationTargetingOptions;
var _default = LocationTargetingOptions;
exports["default"] = _default;