"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Gender = exports.genders = void 0;

var _react = _interopRequireDefault(require("react"));

var _reduxForm = require("redux-form");

var _ReduxFormInlineCheckboxList = _interopRequireDefault(require("../../ReduxFormInlineCheckboxList"));

var _utils = require("../../SelectBar/utils");

var _validators = require("../../../utils/validators");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var genders = (0, _utils.addDataTestAttr)(_toConsumableArray(_constants.SUPPORTED_GENDERS.map(function (v) {
  return {
    key: v,
    value: v
  };
})));
exports.genders = genders;

var scopeEngine = function scopeEngine(allGenders, maleGender, femaleGender, noGenders) {
  var mapGendersStringToObject = function mapGendersStringToObject(genderInput) {
    return {
      Male: genderInput === allGenders || genderInput === maleGender,
      Female: genderInput === allGenders || genderInput === femaleGender
    };
  };

  var mapGendersObjectToString = function mapGendersObjectToString(gendersInput) {
    if (gendersInput.Male && gendersInput.Female) {
      return allGenders;
    } else if (gendersInput.Male) {
      return maleGender;
    } else if (gendersInput.Female) {
      return femaleGender;
    }

    return noGenders;
  };

  var ReduxFormInlineCheckboxListWrapper = function ReduxFormInlineCheckboxListWrapper(props) {
    var inputValue = props.input && props.input.value || _constants.ALL_GENDERS;
    var mappedGenders = mapGendersStringToObject(inputValue);
    return /*#__PURE__*/_react["default"].createElement(_ReduxFormInlineCheckboxList["default"], _extends({}, props, {
      value: mappedGenders
    }));
  };

  return {
    mapGendersStringToObject: mapGendersStringToObject,
    mapGendersObjectToString: mapGendersObjectToString,
    ReduxFormInlineCheckboxListWrapper: ReduxFormInlineCheckboxListWrapper
  };
};

var Gender = function Gender(props) {
  var strings = props.strings,
      allValues = _objectWithoutProperties(props, ["strings"]);

  var genderLabel = strings.GENDER,
      allGenders = strings.ALL_GENDERS,
      femaleGender = strings.FEMALE_GENDER,
      labels = strings.LABELS,
      maleGender = strings.MALE_GENDER,
      noGenders = strings.NO_GENDERS,
      selectGender = strings.SELECT_GENDER;
  var genderRequired = (0, _validators.withCustomMessage)(function (value) {
    return !(value === _constants.ALL_GENDERS || value === _constants.FEMALE_GENDER || value === _constants.MALE_GENDER);
  }, selectGender);
  var mappedGenders = genders.map(function (_ref) {
    var key = _ref.key,
        value = _ref.value;
    return {
      key: key,
      value: labels[_constants.GENDER][key]
    };
  });
  var engine = scopeEngine(allGenders, maleGender, femaleGender, noGenders);
  return /*#__PURE__*/_react["default"].createElement(_reduxForm.Field, _extends({}, allValues, {
    component: engine.ReduxFormInlineCheckboxListWrapper,
    id: "gender-all",
    items: mappedGenders,
    label: genderLabel,
    name: "targeting.gender",
    normalize: engine.mapGendersObjectToString,
    showAll: true,
    showAllLabel: strings.SHOW_ALL_TEXT,
    validate: [genderRequired]
  }));
};

exports.Gender = Gender;
Gender.propTypes = {
  strings: _propTypes["default"].shape({
    GENDER: _propTypes["default"].string,
    ALL_GENDERS: _propTypes["default"].string,
    FEMALE_GENDER: _propTypes["default"].string,
    LABELS: _propTypes["default"].object,
    MALE_GENDER: _propTypes["default"].string,
    NO_GENDERS: _propTypes["default"].string,
    SELECT_GENDER: _propTypes["default"].string
  })
};
Gender.defaultProps = {
  strings: {
    GENDER: _constants.GENDER,
    ALL_GENDERS: _constants.ALL_GENDERS,
    FEMALE_GENDER: _constants.FEMALE_GENDER,
    LABELS: _constants.LABELS,
    MALE_GENDER: _constants.MALE_GENDER,
    NO_GENDERS: _constants.NO_GENDERS,
    SHOW_ALL_TEXT: _constants.SHOW_ALL_TEXT,
    SELECT_GENDER: _constants.SELECT_GENDER
  }
};
var _default = Gender;
exports["default"] = _default;