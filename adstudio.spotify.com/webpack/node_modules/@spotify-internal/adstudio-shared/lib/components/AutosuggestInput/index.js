"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.handlers = exports.AutosuggestField = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _recompose = require("recompose");

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("../Autosuggest/utils");

var _Input = _interopRequireDefault(require("../Autosuggest/Input"));

var _Suggestion = _interopRequireDefault(require("../Autosuggest/Suggestion"));

var _SelectedInput = _interopRequireDefault(require("./SelectedInput"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Container = _styledComponents["default"].div.withConfig({
  displayName: "AutosuggestInput__Container",
  componentId: "sc-154ctqv-0"
})(["ul{list-style-type:none;padding:0;}"]);

var AutosuggestField = function AutosuggestField(props) {
  var className = props.className,
      disabled = props.disabled,
      exclude = props.exclude,
      keyField = props.keyField,
      handleAdd = props.handleAdd,
      handleRemove = props.handleRemove,
      handleInputChange = props.handleInputChange,
      _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options,
      placeholder = props.placeholder,
      value = props.value,
      valueField = props.valueField,
      rest = _objectWithoutProperties(props, ["className", "disabled", "exclude", "keyField", "handleAdd", "handleRemove", "handleInputChange", "options", "placeholder", "value", "valueField"]);

  var availableItems = (0, _utils.filterOutExcludedItems)(options, value, keyField);

  if (value.length) {
    return /*#__PURE__*/_react["default"].createElement(_SelectedInput["default"], {
      disabled: disabled,
      onClickRemove: handleRemove,
      value: value[0],
      valueField: valueField
    });
  }

  return /*#__PURE__*/_react["default"].createElement(Container, null, /*#__PURE__*/_react["default"].createElement(_Input["default"], _extends({}, rest, {
    availableItems: availableItems,
    browseEnabled: Boolean(options),
    className: (0, _classnames["default"])(className, "ta-".concat(name, "-autosuggest")),
    disabled: disabled,
    exclude: exclude,
    existingValue: value,
    keyField: keyField,
    onChange: handleInputChange,
    onSuggestionSelect: handleAdd,
    searchPlaceholder: placeholder,
    selectPlaceholder: placeholder,
    valueField: valueField
  })));
};

exports.AutosuggestField = AutosuggestField;
AutosuggestField.propTypes = {
  className: _propTypes["default"].string,
  debounced: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  exclude: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].func]),
  handleAdd: _propTypes["default"].func.isRequired,
  handleInputChange: _propTypes["default"].func.isRequired,
  handleRemove: _propTypes["default"].func.isRequired,
  keyField: _propTypes["default"].string,
  name: _propTypes["default"].string.isRequired,
  onBlur: _propTypes["default"].func,
  onChange: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  onInputChange: _propTypes["default"].func,
  onSortSuggestions: _propTypes["default"].func,
  options: _propTypes["default"].array,
  placeholder: _propTypes["default"].string,
  renderSuggestion: _propTypes["default"].func.isRequired,
  value: _propTypes["default"].array.isRequired,
  valueField: _propTypes["default"].string
};
/* eslint-disable react/prop-types */

var defaultRenderSuggestion = function defaultRenderSuggestion(props) {
  return /*#__PURE__*/_react["default"].createElement(_Suggestion["default"], props);
};
/* eslint-enable react/prop-types */


var handlers = {
  handleAdd: function handleAdd(_ref) {
    var onBlur = _ref.onBlur,
        value = _ref.value;
    return function (item) {
      if (typeof onBlur === 'function') {
        return onBlur(value.concat(item));
      }
    };
  },
  handleRemove: function handleRemove(_ref2) {
    var onBlur = _ref2.onBlur,
        value = _ref2.value,
        keyField = _ref2.keyField;
    return function (item) {
      if (typeof onBlur === 'function') {
        return onBlur((0, _utils.filterOutExcludedItems)(value, [item], keyField));
      }
    };
  },
  handleInputChange: function handleInputChange(_ref3) {
    var onInputChange = _ref3.onInputChange;
    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var _args = arguments;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(typeof onInputChange === 'function')) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", onInputChange.apply(void 0, _args));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
  }
};
exports.handlers = handlers;

var _default = (0, _recompose.compose)((0, _recompose.defaultProps)({
  keyField: 'id',
  placeholder: 'Search',
  renderSuggestion: defaultRenderSuggestion,
  valueField: 'name'
}), (0, _recompose.withProps)(function (_ref5) {
  var value = _ref5.value;
  return {
    value: value || []
  };
}), (0, _recompose.withHandlers)(handlers))(AutosuggestField);

exports["default"] = _default;