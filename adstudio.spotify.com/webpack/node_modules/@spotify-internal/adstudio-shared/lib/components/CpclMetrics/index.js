"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CpclMetrics = CpclMetrics;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _encoreAdvertisingWeb = require("@spotify-internal/encore-advertising-web");

var _DetailViewerList = _interopRequireDefault(require("../DetailViewerList"));

var _DetailViewerListItem = _interopRequireDefault(require("../DetailViewerListItem"));

var _IntlFormatNumber = _interopRequireDefault(require("../IntlFormatNumber"));

var _LegendDot = _interopRequireDefault(require("../LegendDot"));

var _i18n = require("../../config/i18n");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function CpclMetrics(_ref) {
  var metrics = _ref.metrics,
      hasMetrics = _ref.hasMetrics,
      listensLegend = _ref.listensLegend,
      servedLegend = _ref.servedLegend,
      _ref$showClicks = _ref.showClicks,
      showClicks = _ref$showClicks === void 0 ? true : _ref$showClicks,
      _ref$countryCode = _ref.countryCode,
      countryCode = _ref$countryCode === void 0 ? _i18n.DEFAULT_COUNTRY : _ref$countryCode,
      strings = _ref.strings;
  var _metrics$clicks = metrics.clicks,
      clicks = _metrics$clicks === void 0 ? 0 : _metrics$clicks,
      _metrics$completionRa = metrics.completionRate,
      completionRate = _metrics$completionRa === void 0 ? 0.0 : _metrics$completionRa,
      _metrics$ctr = metrics.ctr,
      ctr = _metrics$ctr === void 0 ? 0.0 : _metrics$ctr,
      _metrics$frequency = metrics.frequency,
      frequency = _metrics$frequency === void 0 ? 0.0 : _metrics$frequency,
      _metrics$frequencyPai = metrics.frequencyPaidListens,
      frequencyPaidListens = _metrics$frequencyPai === void 0 ? 0.0 : _metrics$frequencyPai,
      _metrics$adsServed = metrics.adsServed,
      adsServed = _metrics$adsServed === void 0 ? 0 : _metrics$adsServed,
      _metrics$paidListens = metrics.paidListens,
      paidListens = _metrics$paidListens === void 0 ? 0 : _metrics$paidListens,
      _metrics$reach = metrics.reach,
      reach = _metrics$reach === void 0 ? 0 : _metrics$reach,
      _metrics$reachPaidLis = metrics.reachPaidListens,
      reachPaidListens = _metrics$reachPaidLis === void 0 ? 0 : _metrics$reachPaidLis;
  var REACH_OF_LISTENS = strings.REACH_OF_LISTENS,
      REACH_OF_ADS_SERVER = strings.REACH_OF_ADS_SERVER,
      REACH_OF_FREQ_OF_LISTENS = strings.REACH_OF_FREQ_OF_LISTENS,
      AD_LISTENS = strings.AD_LISTENS,
      ADS_SERVED = strings.ADS_SERVED,
      AD_LISTEN_RATE = strings.AD_LISTEN_RATE;
  return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_DetailViewerList["default"], {
    inline: true
  }, /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    label: /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, listensLegend && /*#__PURE__*/_react["default"].createElement(_LegendDot["default"], {
      color: listensLegend
    }), AD_LISTENS),
    performanceItem: true
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.h2, {
    variant: _encoreAdvertisingWeb.Type.heading2,
    "data-test": "ad-listens-value"
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: paidListens
  }))), /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    label: /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, servedLegend && /*#__PURE__*/_react["default"].createElement(_LegendDot["default"], {
      color: servedLegend
    }), ADS_SERVED),
    performanceItem: true
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.h2, {
    "data-test": "ads-served-value",
    variant: _encoreAdvertisingWeb.Type.heading2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: adsServed
  }))), /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    label: AD_LISTEN_RATE,
    performanceItem: true
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type.h2, {
    "data-test": "ad-listen-rate-value",
    variant: _encoreAdvertisingWeb.Type.heading2
  }, completionRate === null ? 'N/A' : /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: completionRate,
    type: "percent"
  })))), /*#__PURE__*/_react["default"].createElement(_DetailViewerList["default"], {
    inline: true,
    leftSideLabel: true
  }, /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: REACH_OF_LISTENS
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "reach-of-ad-listens-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: reachPaidListens
  }))), /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: REACH_OF_ADS_SERVER
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "reach-of-ads-served-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: reach
  }))), showClicks ? /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: "CTR: "
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "ctr-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, ctr === null ? 'N/A' : /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: ctr,
    type: "percent"
  }))) : /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], null)), /*#__PURE__*/_react["default"].createElement(_DetailViewerList["default"], {
    inline: true,
    leftSideLabel: true
  }, /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: REACH_OF_FREQ_OF_LISTENS
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "avg-freq-of-ad-listens-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    maximumFractionDigits: 2,
    number: frequencyPaidListens
  }))), /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: "Avg freq of ads served: "
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "avg-freq-of-ads-served-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    maximumFractionDigits: 2,
    number: frequency
  }))), showClicks ? /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], {
    empty: !hasMetrics,
    leftSideLabel: "Clicks: "
  }, /*#__PURE__*/_react["default"].createElement(_encoreAdvertisingWeb.Type, {
    "data-test": "clicks-value",
    condensed: true,
    weight: _encoreAdvertisingWeb.Type.bold,
    variant: _encoreAdvertisingWeb.Type.body2
  }, /*#__PURE__*/_react["default"].createElement(_IntlFormatNumber["default"], {
    countryCode: countryCode,
    number: clicks
  }))) : /*#__PURE__*/_react["default"].createElement(_DetailViewerListItem["default"], null)));
}

CpclMetrics.propTypes = {
  countryCode: _propTypes["default"].string,
  hasMetrics: _propTypes["default"].bool,
  listensLegend: _propTypes["default"].string,
  metrics: _propTypes["default"].shape({
    clicks: _propTypes["default"].number,
    completionRate: _propTypes["default"].number,
    ctr: _propTypes["default"].number,
    frequency: _propTypes["default"].number,
    frequencyPaidListens: _propTypes["default"].number,
    adsServed: _propTypes["default"].number,
    paidListens: _propTypes["default"].number,
    reach: _propTypes["default"].number,
    reachPaidListens: _propTypes["default"].number
  }),
  servedLegend: _propTypes["default"].string,
  showClicks: _propTypes["default"].bool,
  strings: _propTypes["default"].shape({
    REACH_OF_LISTENS: _propTypes["default"].string,
    REACH_OF_ADS_SERVER: _propTypes["default"].string,
    REACH_OF_FREQ_OF_LISTENS: _propTypes["default"].string,
    AD_LISTENS: _propTypes["default"].string,
    ADS_SERVED: _propTypes["default"].string,
    AD_LISTEN_RATE: _propTypes["default"].string
  })
}; // currently only used by Admin. If used by Voltron, pass in translated strings. Or remove this component from shared (https://jira.spotify.net/browse/ASMIR-1121)

CpclMetrics.defaultProps = {
  strings: {
    REACH_OF_LISTENS: 'Reach of ad completes: ',
    REACH_OF_ADS_SERVER: 'Reach of ads served: ',
    REACH_OF_FREQ_OF_LISTENS: 'Freq of ad completes: ',
    AD_LISTENS: 'Ad completes',
    ADS_SERVED: 'Ads served',
    AD_LISTEN_RATE: 'Ad completion rate'
  }
};
var _default = CpclMetrics;
exports["default"] = _default;