/**
 * @fileoverview gRPC-Web generated client stub for com.spotify.targetingservice.proto
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.com = {};
proto.com.spotify = {};
proto.com.spotify.targetingservice = {};
proto.com.spotify.targetingservice.proto = require('./service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodDescriptor_TargetingService_getGenreTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getGenreTargeting',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.TargetingRequest,
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodInfo_TargetingService_getGenreTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.TargetingResultsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getGenreTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getGenreTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getGenreTargeting,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getGenreTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getGenreTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getGenreTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodDescriptor_TargetingService_getPlaylistTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getPlaylistTargeting',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.TargetingRequest,
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodInfo_TargetingService_getPlaylistTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.TargetingResultsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getPlaylistTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getPlaylistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getPlaylistTargeting,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getPlaylistTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getPlaylistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getPlaylistTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodDescriptor_TargetingService_getAllGenreTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getAllGenreTargeting',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodInfo_TargetingService_getAllGenreTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.TargetingResultsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getAllGenreTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getAllGenreTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getAllGenreTargeting,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getAllGenreTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getAllGenreTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getAllGenreTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodDescriptor_TargetingService_getAllPlaylistTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getAllPlaylistTargeting',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 */
const methodInfo_TargetingService_getAllPlaylistTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.TargetingResultsResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.TargetingResultsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getAllPlaylistTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getAllPlaylistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getAllPlaylistTargeting,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.TargetingResultsResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getAllPlaylistTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getAllPlaylistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getAllPlaylistTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse>}
 */
const methodDescriptor_TargetingService_getGeoLocationTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getGeoLocationTargeting',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest,
  proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse>}
 */
const methodInfo_TargetingService_getGeoLocationTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getGeoLocationTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getGeoLocationTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getGeoLocationTargeting,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.GeoLocationTargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.GeoLocationTargetingResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getGeoLocationTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getGeoLocationTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getGeoLocationTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest,
 *   !proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse>}
 */
const methodDescriptor_TargetingService_queryGeoLocations = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/queryGeoLocations',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest,
  proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest,
 *   !proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse>}
 */
const methodInfo_TargetingService_queryGeoLocations = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.queryGeoLocations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/queryGeoLocations',
      request,
      metadata || {},
      methodDescriptor_TargetingService_queryGeoLocations,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.GeoLocationQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.GeoLocationQueryResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.queryGeoLocations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/queryGeoLocations',
      request,
      metadata || {},
      methodDescriptor_TargetingService_queryGeoLocations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.ArtistTargetingResponse>}
 */
const methodDescriptor_TargetingService_getArtistTargeting = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getArtistTargeting',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.TargetingRequest,
  proto.com.spotify.targetingservice.proto.ArtistTargetingResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.ArtistTargetingResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.TargetingRequest,
 *   !proto.com.spotify.targetingservice.proto.ArtistTargetingResponse>}
 */
const methodInfo_TargetingService_getArtistTargeting = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.ArtistTargetingResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.ArtistTargetingResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.ArtistTargetingResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.ArtistTargetingResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getArtistTargeting =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getArtistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getArtistTargeting,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.TargetingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.ArtistTargetingResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getArtistTargeting =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getArtistTargeting',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getArtistTargeting);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest,
 *   !proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse>}
 */
const methodDescriptor_TargetingService_validatePostalCodes = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/validatePostalCodes',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest,
  proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest,
 *   !proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse>}
 */
const methodInfo_TargetingService_validatePostalCodes = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse,
  /**
   * @param {!proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse.deserializeBinary
);


/**
 * @param {!proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.validatePostalCodes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/validatePostalCodes',
      request,
      metadata || {},
      methodDescriptor_TargetingService_validatePostalCodes,
      callback);
};


/**
 * @param {!proto.com.spotify.targetingservice.proto.ValidatePostalCodeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.ValidatePostalCodeResponse>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.validatePostalCodes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/validatePostalCodes',
      request,
      metadata || {},
      methodDescriptor_TargetingService_validatePostalCodes);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.Categories>}
 */
const methodDescriptor_TargetingService_getCategories = new grpc.web.MethodDescriptor(
  '/com.spotify.targetingservice.proto.TargetingService/getCategories',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.com.spotify.targetingservice.proto.Categories,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.Categories.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.google.protobuf.Empty,
 *   !proto.com.spotify.targetingservice.proto.Categories>}
 */
const methodInfo_TargetingService_getCategories = new grpc.web.AbstractClientBase.MethodInfo(
  proto.com.spotify.targetingservice.proto.Categories,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.com.spotify.targetingservice.proto.Categories.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.targetingservice.proto.Categories)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.targetingservice.proto.Categories>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.targetingservice.proto.TargetingServiceClient.prototype.getCategories =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getCategories',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getCategories,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.targetingservice.proto.Categories>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.targetingservice.proto.TargetingServicePromiseClient.prototype.getCategories =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.targetingservice.proto.TargetingService/getCategories',
      request,
      metadata || {},
      methodDescriptor_TargetingService_getCategories);
};


module.exports = proto.com.spotify.targetingservice.proto;

