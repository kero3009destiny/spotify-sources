
// THIS FILE IS AUTO-GENERATED BY PROTO-REQUEST
/* eslint-disable */
"use strict";


// Exported root namespace
Object.defineProperty(exports, '__esModule', { value: true });
var $root = {};
var AdStudioBffOffersService = {};
    

$root.com = (function() {
    /**
     * Namespace com.
     * @exports com
     * @namespace
     */
    var com = {};

    com.spotify = (function() {
        /**
         * Namespace spotify.
         * @memberof com
         * @namespace
         */
        var spotify = {};

        spotify.adstudiobff = (function() {
            /**
             * Namespace adstudiobff.
             * @memberof com.spotify
             * @namespace
             */
            var adstudiobff = {};

            adstudiobff.proto = (function() {
                /**
                 * Namespace proto.
                 * @memberof com.spotify.adstudiobff
                 * @namespace
                 */
                var proto = {};

                proto.AdStudioBffOffersService = (function() {
                        
                    /**
                     * Properties of a AdStudioBffOffersService.
                     * @memberof com.spotify.adstudiobff.proto
                     */
                     
                     /**
                      * Fetch function type, set when instantiating this service class.
                      * @callback FetchFunction
                      * @param {string} uri
                      * @param {Object} options
                      * @returns {Promise<any>}
                      */
                     
                    /**
                     * An HttpServiceClient class to send requests to the AdStudioBffOffersService.
                     * @memberof com.spotify.adstudiobff.proto
                     * @classdesc AdStudioBffOffersService to send requests to the AdStudioBffOffersService.
                     * @param {FetchFunction} fetchFn
                     * @param {protorequest.HttpServiceConfigOptions} options
                     * @constructor
                     */
                    AdStudioBffOffersService = function(fetchFn, options) {
                        this.fetchFn = fetchFn;
                        this.host = options.host;
                        this.baseUrl = options.baseUrl;
                        this.version = options.version || "";
                        this.headers = options.headers || new Headers();
                    };
                
                    /**
                     * Sends the fetch request decorated with the configured host.  Only for internal use.
                     */
                    AdStudioBffOffersService.prototype.protoFetch = function(url, opts) {
                      return this.fetchFn(this.host + url, opts);
                    };
                
                    /**
                     * Sets the headers to be sent with all requests to this service.
                     * @function setHeaders
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffOffersService
                     * @param {Headers} headers
                     * @instance
                     * @returns {com.spotify.adstudiobff.proto.AdStudioBffOffersService} AdStudioBffOffersService
                     */
                    AdStudioBffOffersService.prototype.setHeaders = function(headers) {
                      this.headers = headers;
                      return this;
                    };
                
                    /**
                     * Get the headers being sent with all requests to this service.
                     * @function getHeaders
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffOffersService
                     * @instance
                     * @returns {Headers}
                     */
                    AdStudioBffOffersService.prototype.getHeaders = function() {
                      return this.headers;
                    };
                
                    /**
                     * Calls AdStudioBffOffersService.getAvailableOffers
                     * @function getAvailableOffers
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffOffersService
                     * @param {com.spotify.adstudiobff.proto.GetAvailableOffersRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetAvailableOffersResponse>} getAvailableOffers
                     */
                    AdStudioBffOffersService.prototype.getAvailableOffers = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffOffersService/' + this.version +  (this.version ? '/' : '') + 'getAvailableOffers';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    return AdStudioBffOffersService;
                })();

                return proto;
            })();

            return adstudiobff;
        })();

        return spotify;
    })();

    return com;
})();


exports["default"] = $root;
exports["$root"] = $root;
exports["AdStudioBffOffersService"] = AdStudioBffOffersService;
