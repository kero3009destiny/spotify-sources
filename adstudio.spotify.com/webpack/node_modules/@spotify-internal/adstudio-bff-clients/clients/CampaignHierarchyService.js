
// THIS FILE IS AUTO-GENERATED BY PROTO-REQUEST
/* eslint-disable */
"use strict";


// Exported root namespace
Object.defineProperty(exports, '__esModule', { value: true });
var $root = {};
var CampaignHierarchyService = {};
    

$root.com = (function() {
    /**
     * Namespace com.
     * @exports com
     * @namespace
     */
    var com = {};

    com.spotify = (function() {
        /**
         * Namespace spotify.
         * @memberof com
         * @namespace
         */
        var spotify = {};

        spotify.adstudiobff = (function() {
            /**
             * Namespace adstudiobff.
             * @memberof com.spotify
             * @namespace
             */
            var adstudiobff = {};

            adstudiobff.proto = (function() {
                /**
                 * Namespace proto.
                 * @memberof com.spotify.adstudiobff
                 * @namespace
                 */
                var proto = {};

                proto.CampaignHierarchyService = (function() {
                        
                    /**
                     * Properties of a CampaignHierarchyService.
                     * @memberof com.spotify.adstudiobff.proto
                     */
                     
                     /**
                      * Fetch function type, set when instantiating this service class.
                      * @callback FetchFunction
                      * @param {string} uri
                      * @param {Object} options
                      * @returns {Promise<any>}
                      */
                     
                    /**
                     * An HttpServiceClient class to send requests to the CampaignHierarchyService.
                     * @memberof com.spotify.adstudiobff.proto
                     * @classdesc CampaignHierarchyService to send requests to the CampaignHierarchyService.
                     * @param {FetchFunction} fetchFn
                     * @param {protorequest.HttpServiceConfigOptions} options
                     * @constructor
                     */
                    CampaignHierarchyService = function(fetchFn, options) {
                        this.fetchFn = fetchFn;
                        this.host = options.host;
                        this.baseUrl = options.baseUrl;
                        this.version = options.version || "";
                        this.headers = options.headers || new Headers();
                    };
                
                    /**
                     * Sends the fetch request decorated with the configured host.  Only for internal use.
                     */
                    CampaignHierarchyService.prototype.protoFetch = function(url, opts) {
                      return this.fetchFn(this.host + url, opts);
                    };
                
                    /**
                     * Sets the headers to be sent with all requests to this service.
                     * @function setHeaders
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {Headers} headers
                     * @instance
                     * @returns {com.spotify.adstudiobff.proto.CampaignHierarchyService} CampaignHierarchyService
                     */
                    CampaignHierarchyService.prototype.setHeaders = function(headers) {
                      this.headers = headers;
                      return this;
                    };
                
                    /**
                     * Get the headers being sent with all requests to this service.
                     * @function getHeaders
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @instance
                     * @returns {Headers}
                     */
                    CampaignHierarchyService.prototype.getHeaders = function() {
                      return this.headers;
                    };
                
                    /**
                     * Calls CampaignHierarchyService.getCampaigns
                     * @function getCampaigns
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCampaignsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCampaignsResponse>} getCampaigns
                     */
                    CampaignHierarchyService.prototype.getCampaigns = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getCampaigns';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getFlights
                     * @function getFlights
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetFlightsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetFlightsResponse>} getFlights
                     */
                    CampaignHierarchyService.prototype.getFlights = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getFlights';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getCreatives
                     * @function getCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCreativesRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCreativesResponse>} getCreatives
                     */
                    CampaignHierarchyService.prototype.getCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getLifetimeCampaigns
                     * @function getLifetimeCampaigns
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCampaignsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCampaignsResponse>} getLifetimeCampaigns
                     */
                    CampaignHierarchyService.prototype.getLifetimeCampaigns = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getLifetimeCampaigns';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getLifetimeFlights
                     * @function getLifetimeFlights
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetFlightsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetFlightsResponse>} getLifetimeFlights
                     */
                    CampaignHierarchyService.prototype.getLifetimeFlights = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getLifetimeFlights';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getLifetimeCreatives
                     * @function getLifetimeCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCreativesRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCreativesResponse>} getLifetimeCreatives
                     */
                    CampaignHierarchyService.prototype.getLifetimeCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getLifetimeCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getFlight
                     * @function getFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetFlightRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetFlightResponse>} getFlight
                     */
                    CampaignHierarchyService.prototype.getFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getCampaign
                     * @function getCampaign
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCampaignRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCampaignResponse>} getCampaign
                     */
                    CampaignHierarchyService.prototype.getCampaign = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getCampaign';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getCreative
                     * @function getCreative
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.GetCreativeRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCreativeResponse>} getCreative
                     */
                    CampaignHierarchyService.prototype.getCreative = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getCreative';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createCampaign
                     * @function createCampaign
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.CreateCampaignRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateResponse>} createCampaign
                     */
                    CampaignHierarchyService.prototype.createCampaign = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createCampaign';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createCreative
                     * @function createCreative
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.CreateCreativeRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateResponse>} createCreative
                     */
                    CampaignHierarchyService.prototype.createCreative = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createCreative';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createFlight
                     * @function createFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.CreateFlightRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateResponse>} createFlight
                     */
                    CampaignHierarchyService.prototype.createFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createFlightLinks
                     * @function createFlightLinks
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.FlightLinkRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} createFlightLinks
                     */
                    CampaignHierarchyService.prototype.createFlightLinks = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createFlightLinks';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createBulkCreatives
                     * @function createBulkCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.BulkCreateCreativeRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.BulkCreateResponse>} createBulkCreatives
                     */
                    CampaignHierarchyService.prototype.createBulkCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createBulkCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createSequentialBulkCreatives
                     * @function createSequentialBulkCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.BulkCreateCreativeRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.BulkCreateResponse>} createSequentialBulkCreatives
                     */
                    CampaignHierarchyService.prototype.createSequentialBulkCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createSequentialBulkCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createBulkFlights
                     * @function createBulkFlights
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.BulkCreateFlightRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.BulkCreateResponse>} createBulkFlights
                     */
                    CampaignHierarchyService.prototype.createBulkFlights = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createBulkFlights';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createDuplicatedFlight
                     * @function createDuplicatedFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.CreateDuplicatedFlightRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateResponse>} createDuplicatedFlight
                     */
                    CampaignHierarchyService.prototype.createDuplicatedFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createDuplicatedFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.createFlightWithCreatives
                     * @function createFlightWithCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.CreateFlightWithCreativesRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateResponse>} createFlightWithCreatives
                     */
                    CampaignHierarchyService.prototype.createFlightWithCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'createFlightWithCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getBulkCreatives
                     * @function getBulkCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.BulkGetCreativesRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.BulkGetCreativesResponse>} getBulkCreatives
                     */
                    CampaignHierarchyService.prototype.getBulkCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getBulkCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.editCampaign
                     * @function editCampaign
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.EditCampaignRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} editCampaign
                     */
                    CampaignHierarchyService.prototype.editCampaign = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'editCampaign';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.editFlight
                     * @function editFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.EditFlightRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} editFlight
                     */
                    CampaignHierarchyService.prototype.editFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'editFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.editCreative
                     * @function editCreative
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.EditCreativeRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} editCreative
                     */
                    CampaignHierarchyService.prototype.editCreative = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'editCreative';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.editFlightLink
                     * @function editFlightLink
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.EditFlightLinkRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} editFlightLink
                     */
                    CampaignHierarchyService.prototype.editFlightLink = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'editFlightLink';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.editFlightLinks
                     * @function editFlightLinks
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.EditFlightLinksRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} editFlightLinks
                     */
                    CampaignHierarchyService.prototype.editFlightLinks = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'editFlightLinks';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.pauseResumeFlightLink
                     * @function pauseResumeFlightLink
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.PauseResumeFlightLinkRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} pauseResumeFlightLink
                     */
                    CampaignHierarchyService.prototype.pauseResumeFlightLink = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'pauseResumeFlightLink';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.pauseResumeFlight
                     * @function pauseResumeFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.PauseResumeFlightRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} pauseResumeFlight
                     */
                    CampaignHierarchyService.prototype.pauseResumeFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'pauseResumeFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.stopFlight
                     * @function stopFlight
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.StopFlightRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} stopFlight
                     */
                    CampaignHierarchyService.prototype.stopFlight = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'stopFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls CampaignHierarchyService.getPendingUserApprovalCreatives
                     * @function getPendingUserApprovalCreatives
                     * @memberof com.spotify.adstudiobff.proto.CampaignHierarchyService
                     * @param {com.spotify.adstudiobff.proto.PendingUserApprovalCreativesRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.PendingUserApprovalCreativesResponse>} getPendingUserApprovalCreatives
                     */
                    CampaignHierarchyService.prototype.getPendingUserApprovalCreatives = function(request) {
                        const url = '/' + this.baseUrl + '/CampaignHierarchyService/' + this.version +  (this.version ? '/' : '') + 'getPendingUserApprovalCreatives';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    return CampaignHierarchyService;
                })();

                return proto;
            })();

            return adstudiobff;
        })();

        return spotify;
    })();

    return com;
})();


exports["default"] = $root;
exports["$root"] = $root;
exports["CampaignHierarchyService"] = CampaignHierarchyService;
