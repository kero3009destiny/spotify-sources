
// THIS FILE IS AUTO-GENERATED BY PROTO-REQUEST
/* eslint-disable */
"use strict";


// Exported root namespace
Object.defineProperty(exports, '__esModule', { value: true });
var $root = {};
var AdStudioBffDraftsService = {};
    

$root.com = (function() {
    /**
     * Namespace com.
     * @exports com
     * @namespace
     */
    var com = {};

    com.spotify = (function() {
        /**
         * Namespace spotify.
         * @memberof com
         * @namespace
         */
        var spotify = {};

        spotify.adstudiobff = (function() {
            /**
             * Namespace adstudiobff.
             * @memberof com.spotify
             * @namespace
             */
            var adstudiobff = {};

            adstudiobff.proto = (function() {
                /**
                 * Namespace proto.
                 * @memberof com.spotify.adstudiobff
                 * @namespace
                 */
                var proto = {};

                proto.AdStudioBffDraftsService = (function() {
                        
                    /**
                     * Properties of a AdStudioBffDraftsService.
                     * @memberof com.spotify.adstudiobff.proto
                     */
                     
                     /**
                      * Fetch function type, set when instantiating this service class.
                      * @callback FetchFunction
                      * @param {string} uri
                      * @param {Object} options
                      * @returns {Promise<any>}
                      */
                     
                    /**
                     * An HttpServiceClient class to send requests to the AdStudioBffDraftsService.
                     * @memberof com.spotify.adstudiobff.proto
                     * @classdesc AdStudioBffDraftsService to send requests to the AdStudioBffDraftsService.
                     * @param {FetchFunction} fetchFn
                     * @param {protorequest.HttpServiceConfigOptions} options
                     * @constructor
                     */
                    AdStudioBffDraftsService = function(fetchFn, options) {
                        this.fetchFn = fetchFn;
                        this.host = options.host;
                        this.baseUrl = options.baseUrl;
                        this.version = options.version || "";
                        this.headers = options.headers || new Headers();
                    };
                
                    /**
                     * Sends the fetch request decorated with the configured host.  Only for internal use.
                     */
                    AdStudioBffDraftsService.prototype.protoFetch = function(url, opts) {
                      return this.fetchFn(this.host + url, opts);
                    };
                
                    /**
                     * Sets the headers to be sent with all requests to this service.
                     * @function setHeaders
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {Headers} headers
                     * @instance
                     * @returns {com.spotify.adstudiobff.proto.AdStudioBffDraftsService} AdStudioBffDraftsService
                     */
                    AdStudioBffDraftsService.prototype.setHeaders = function(headers) {
                      this.headers = headers;
                      return this;
                    };
                
                    /**
                     * Get the headers being sent with all requests to this service.
                     * @function getHeaders
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @instance
                     * @returns {Headers}
                     */
                    AdStudioBffDraftsService.prototype.getHeaders = function() {
                      return this.headers;
                    };
                
                    /**
                     * Calls AdStudioBffDraftsService.createColdStartDraft
                     * @function createColdStartDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.CreateColdStartDraftRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateColdStartDraftResponse>} createColdStartDraft
                     */
                    AdStudioBffDraftsService.prototype.createColdStartDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'createColdStartDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.createDraftForExistingCampaign
                     * @function createDraftForExistingCampaign
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.CreateDraftForExistingCampaignRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateDraftForExistingCampaignResponse>} createDraftForExistingCampaign
                     */
                    AdStudioBffDraftsService.prototype.createDraftForExistingCampaign = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'createDraftForExistingCampaign';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.createDraftForExistingFlight
                     * @function createDraftForExistingFlight
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.CreateDraftForExistingFlightRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.CreateDraftForExistingFlightResponse>} createDraftForExistingFlight
                     */
                    AdStudioBffDraftsService.prototype.createDraftForExistingFlight = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'createDraftForExistingFlight';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.updateCampaignDraft
                     * @function updateCampaignDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.UpdateCampaignDraftRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} updateCampaignDraft
                     */
                    AdStudioBffDraftsService.prototype.updateCampaignDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'updateCampaignDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.updateFlightDraft
                     * @function updateFlightDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.UpdateFlightDraftRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} updateFlightDraft
                     */
                    AdStudioBffDraftsService.prototype.updateFlightDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'updateFlightDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.updateCreativeDraft
                     * @function updateCreativeDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.UpdateCreativeDraftRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} updateCreativeDraft
                     */
                    AdStudioBffDraftsService.prototype.updateCreativeDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'updateCreativeDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.getEnrichedHierarchyDraft
                     * @function getEnrichedHierarchyDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.GetEnrichedHierarchyDraftRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.EnrichedHierarchyDraft>} getEnrichedHierarchyDraft
                     */
                    AdStudioBffDraftsService.prototype.getEnrichedHierarchyDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'getEnrichedHierarchyDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.getCampaignDrafts
                     * @function getCampaignDrafts
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.GetCampaignDraftsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCampaignDraftsResponse>} getCampaignDrafts
                     */
                    AdStudioBffDraftsService.prototype.getCampaignDrafts = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'getCampaignDrafts';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.getFlightDrafts
                     * @function getFlightDrafts
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.GetFlightDraftsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetFlightDraftsResponse>} getFlightDrafts
                     */
                    AdStudioBffDraftsService.prototype.getFlightDrafts = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'getFlightDrafts';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.getCreativeDrafts
                     * @function getCreativeDrafts
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.GetCreativeDraftsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetCreativeDraftsResponse>} getCreativeDrafts
                     */
                    AdStudioBffDraftsService.prototype.getCreativeDrafts = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'getCreativeDrafts';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.archiveHierarchyDrafts
                     * @function archiveHierarchyDrafts
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.ArchiveHierarchyDraftsRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} archiveHierarchyDrafts
                     */
                    AdStudioBffDraftsService.prototype.archiveHierarchyDrafts = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'archiveHierarchyDrafts';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.completeHierarchyDraft
                     * @function completeHierarchyDraft
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.CompleteHierarchyDraftRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} completeHierarchyDraft
                     */
                    AdStudioBffDraftsService.prototype.completeHierarchyDraft = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'completeHierarchyDraft';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.dismissHierarchyDraftReview
                     * @function dismissHierarchyDraftReview
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.DismissHierarchyDraftReviewRequest} request
                     * @instance
                     * @returns {Promise<google.protobuf.Empty>} dismissHierarchyDraftReview
                     */
                    AdStudioBffDraftsService.prototype.dismissHierarchyDraftReview = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'dismissHierarchyDraftReview';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    /**
                     * Calls AdStudioBffDraftsService.getReviewableHierarchyDrafts
                     * @function getReviewableHierarchyDrafts
                     * @memberof com.spotify.adstudiobff.proto.AdStudioBffDraftsService
                     * @param {com.spotify.adstudiobff.proto.GetReviewableHierarchyDraftsRequest} request
                     * @instance
                     * @returns {Promise<com.spotify.adstudiobff.proto.GetReviewableHierarchyDraftsResponse>} getReviewableHierarchyDrafts
                     */
                    AdStudioBffDraftsService.prototype.getReviewableHierarchyDrafts = function(request) {
                        const url = '/' + this.baseUrl + '/AdStudioBffDraftsService/' + this.version +  (this.version ? '/' : '') + 'getReviewableHierarchyDrafts';
                        const opts = {
                            method: 'POST',
                            body: JSON.stringify(request),
                            headers: this.headers
                        };
                        return this.protoFetch(url, opts)
                            .then(function(r) { return r.ok ? r.json() : Promise.reject(r); });
                    };

                    return AdStudioBffDraftsService;
                })();

                return proto;
            })();

            return adstudiobff;
        })();

        return spotify;
    })();

    return com;
})();


exports["default"] = $root;
exports["$root"] = $root;
exports["AdStudioBffDraftsService"] = AdStudioBffDraftsService;
