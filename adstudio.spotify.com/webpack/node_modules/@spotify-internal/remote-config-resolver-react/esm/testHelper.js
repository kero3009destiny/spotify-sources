var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import RemoteConfigProvider from './remoteConfigProvider';
import { Configuration } from '@spotify-internal/remote-config-resolver';
import React from 'react';
export default function wrapRenderFunction(properties, render, overrides) {
    var configuration = Configuration.withOverride(properties, overrides);
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (typeof args[0] === 'object' && !React.isValidElement(args[0])) {
            configuration.override(args.shift());
        }
        var el = args.shift();
        var wrapper = render.apply(void 0, __spreadArrays([React.createElement(RemoteConfigProvider, { resolver: configuration }, el)], args));
        return [wrapper, configuration];
    };
}
//# sourceMappingURL=testHelper.js.map