"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _forms = require("../../styles/mixins/forms");

var _Icons = _interopRequireDefault(require("../../components/Icons"));

var _Input = _interopRequireDefault(require("../../components/Input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var IconChevronDown = _Icons["default"].IconChevronDown;

var SelectDropdownContainer = _styledComponents["default"].div.withConfig({
  displayName: "SelectDropdown__SelectDropdownContainer",
  componentId: "sc-3msoy3-0"
})(["position:relative;"]);

var StyledInput = (0, _styledComponents["default"])(_Input["default"]).withConfig({
  displayName: "SelectDropdown__StyledInput",
  componentId: "sc-3msoy3-1"
})(["margin-top:", ";"], _encoreFoundation.spacer12);

var StyledSelect = _styledComponents["default"].select.withConfig({
  displayName: "SelectDropdown__StyledSelect",
  componentId: "sc-3msoy3-2"
})(["", " ", " ", ""], _forms.formControlBase, _forms.formControlBaseSelect, function (_ref) {
  var theme = _ref.theme,
      error = _ref.error,
      warning = _ref.warning;
  return (0, _forms.formControlTheme)({
    theme: theme,
    error: error,
    warning: warning
  });
});

var StyledIconChevronDown = (0, _styledComponents["default"])(IconChevronDown).withConfig({
  displayName: "SelectDropdown__StyledIconChevronDown",
  componentId: "sc-3msoy3-3"
})(["pointer-events:none;position:absolute;right:12px;top:50%;transform:translateY(-50%);"]);

var SelectDropdown = /*#__PURE__*/function (_Component) {
  _inherits(SelectDropdown, _Component);

  var _super = _createSuper(SelectDropdown);

  function SelectDropdown() {
    var _this;

    _classCallCheck(this, SelectDropdown);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      warningShown: {},
      freeResponseValue: '',
      selectDropdownValue: ''
    });

    _defineProperty(_assertThisInitialized(_this), "handleEvent", function (e, fnName) {
      var event = e;
      var _e$target = e.target,
          value = _e$target.value,
          name = _e$target.name;
      var fn = _this.props[fnName];

      if (name === 'selectDropdownValue' && value === _this.props.withOtherPlaceholder) {
        event = _this.state.freeResponseValue;
      }

      if (typeof fn === 'function') fn(event);

      _this.setState(_defineProperty({}, name, value));
    });

    return _this;
  }

  _createClass(SelectDropdown, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.checkForDeprecatedProps(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.checkForDeprecatedProps(nextProps);
    }
  }, {
    key: "checkForDeprecatedProps",
    value: function checkForDeprecatedProps(props) {
      if (props.filters) {
        this.warnForDeprecatedProp('filters', 'Use options instead.');
      }

      if (props.handleChange) {
        this.warnForDeprecatedProp('handleChange', 'Use onChange instead.');
      }
    }
  }, {
    key: "warnForDeprecatedProp",
    value: function warnForDeprecatedProp(propName, message) {
      if (!this.state.warningShown[propName]) {
        /* eslint-disable no-console */
        if (console && console.warn) {
          console.warn("The SelectDropdown prop \"".concat(propName, "\" is deprecated. ").concat(message));
        }
        /* eslint-enable no-console */


        this.setState(function (prevState) {
          return {
            warningShown: _objectSpread(_objectSpread({}, prevState.warningShown), {}, _defineProperty({}, propName, true))
          };
        });
      }
    }
  }, {
    key: "handleDisplayValues",
    value: function handleDisplayValues(name) {
      var _this$props = this.props,
          _this$props$options = _this$props.options,
          options = _this$props$options === void 0 ? [] : _this$props$options,
          value = _this$props.value,
          withOtherPlaceholder = _this$props.withOtherPlaceholder;
      var stateValue = this.state[name];
      var displayValue; // Set default values

      if (name === 'freeResponseValue') displayValue = value;else displayValue = withOtherPlaceholder; // Use the state if it is not empty or if there is no initialValue

      if (stateValue !== '' || !value) return stateValue; // If the initialValue is a dropdown option, handle it accordingly

      var isValueAnOption = options.some(function (_ref2) {
        var option = _ref2.key;
        return value === option;
      });

      if (isValueAnOption) {
        if (name === 'freeResponseValue') {
          // Avoid presetting the input with the dropdown initialValue
          displayValue = '';
        } else {
          // Capture the dropdown initialValue
          displayValue = value;
        }
      } // Update the state


      if (stateValue !== displayValue) {
        this.setState(_defineProperty({}, name, displayValue));
      }

      return displayValue;
    }
  }, {
    key: "maybeRenderFreeResponseInput",
    value: function maybeRenderFreeResponseInput() {
      var _this2 = this;

      var selectDropdownValue = this.state.selectDropdownValue;

      var _this$props2 = this.props,
          responsePlaceholder = _this$props2.responsePlaceholder,
          withOther = _this$props2.withOther,
          withOtherPlaceholder = _this$props2.withOtherPlaceholder,
          value = _this$props2.value,
          props = _objectWithoutProperties(_this$props2, ["responsePlaceholder", "withOther", "withOtherPlaceholder", "value"]);

      var shouldShowInput = selectDropdownValue === withOtherPlaceholder;
      return shouldShowInput && withOther && /*#__PURE__*/_react["default"].createElement(StyledInput, _extends({}, props, {
        name: "freeResponseValue",
        onChange: function onChange(e) {
          return _this2.handleEvent(e, 'onChange');
        },
        onBlur: function onBlur(e) {
          return _this2.handleEvent(e, 'onBlur');
        },
        placeholder: responsePlaceholder,
        value: this.handleDisplayValues('freeResponseValue')
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props3 = this.props,
          className = _this$props3.className,
          error = _this$props3.error,
          filters = _this$props3.filters,
          handleChange = _this$props3.handleChange,
          onChange = _this$props3.onChange,
          options = _this$props3.options,
          placeholder = _this$props3.placeholder,
          _this$props3$theme = _this$props3.theme,
          theme = _this$props3$theme === void 0 ? 'light' : _this$props3$theme,
          value = _this$props3.value,
          warning = _this$props3.warning,
          props = _objectWithoutProperties(_this$props3, ["className", "error", "filters", "handleChange", "onChange", "options", "placeholder", "theme", "value", "warning"]); // a11y note: blur is the main thing used here, onChange just happens to be
      // caught up in a deprecation here. Deleteing the onChange handler as part of the
      // deprecations will mean that we can delete this a11y override too.


      return /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement(SelectDropdownContainer, null, /*#__PURE__*/_react["default"].createElement(StyledSelect, _extends({}, props, {
        theme: theme,
        error: error,
        warning: warning,
        className: className,
        name: "selectDropdownValue",
        onChange: function onChange(e) {
          return _this3.handleEvent(e, 'onChange');
        },
        onBlur: function onBlur(e) {
          return _this3.handleEvent(e, 'onBlur');
        },
        value: this.handleDisplayValues('selectDropdownValue')
      }), placeholder && /*#__PURE__*/_react["default"].createElement("option", {
        hidden: true,
        value: ""
      }, placeholder), (options || filters || []).map(function (_ref3) {
        var key = _ref3.key,
            optionValue = _ref3.value,
            optionProps = _objectWithoutProperties(_ref3, ["key", "value"]);

        return /*#__PURE__*/_react["default"].createElement("option", _extends({
          key: "SelectDropdown-".concat(key),
          value: key
        }, optionProps), optionValue);
      })), /*#__PURE__*/_react["default"].createElement(StyledIconChevronDown, {
        iconSize: 16
      })), /*#__PURE__*/_react["default"].createElement("div", null, this.maybeRenderFreeResponseInput()));
    }
  }]);

  return SelectDropdown;
}(_react.Component);

exports["default"] = SelectDropdown;

_defineProperty(SelectDropdown, "propTypes", {
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  error: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].node]),
  filters: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    key: _propTypes["default"].string,
    value: _propTypes["default"].string
  })),
  handleChange: _propTypes["default"].func,
  onBlur: _propTypes["default"].func,
  onChange: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  options: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    key: _propTypes["default"].string,
    value: _propTypes["default"].string
  })),
  freeResponseOption: _propTypes["default"].shape({
    key: _propTypes["default"].string,
    value: _propTypes["default"].string
  }),
  withOther: _propTypes["default"].bool,
  withOtherPlaceholder: _propTypes["default"].string,
  placeholder: _propTypes["default"].string,
  responsePlaceholder: _propTypes["default"].string,
  theme: _propTypes["default"].string,
  value: _propTypes["default"].string,
  warning: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].node])
});

_defineProperty(SelectDropdown, "defaultProps", {
  withOther: true,
  withOtherPlaceholder: 'Other'
});