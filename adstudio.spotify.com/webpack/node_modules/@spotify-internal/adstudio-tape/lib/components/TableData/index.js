"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TableData;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreWeb = require("@spotify-internal/encore-web");

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _flex = require("../../styles/common/flex");

var _overflow = require("../../styles/common/overflow");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var StyledTableData = _styledComponents["default"].div.withConfig({
  displayName: "TableData__StyledTableData",
  componentId: "sc-168gpxx-0"
})(["", " padding:", ""], _flex.column, function (props) {
  return props.condensed ? "".concat(_encoreFoundation.spacer12, " ").concat(_encoreFoundation.spacer12, " ").concat(_encoreFoundation.spacer12, " ").concat(_encoreFoundation.spacer20, ";") : "".concat(_encoreFoundation.spacer16, ";");
});

var StyledContent = (0, _styledComponents["default"])(_encoreWeb.Type).withConfig({
  displayName: "TableData__StyledContent",
  componentId: "sc-168gpxx-1"
})(["", " ", " ", ""], function (props) {
  return props.alignRight ? 'text-align: right;' : '';
}, _overflow.ellipseOverflow, function (props) {
  return props.hasOverflow ? 'overflow: visible; white-space: normal;' : '';
});
var propTypes = {
  /** Can accept any HTML */
  alignRight: _propTypes["default"].bool,
  className: _propTypes["default"].string,
  condensed: _propTypes["default"].bool,
  content: _propTypes["default"].node,
  formatter: _propTypes["default"].func,
  hasOverflow: _propTypes["default"].bool,
  isPrimary: _propTypes["default"].bool,
  title: _propTypes["default"].string
};

function TableData(_ref) {
  var alignRight = _ref.alignRight,
      className = _ref.className,
      condensed = _ref.condensed,
      content = _ref.content,
      formatter = _ref.formatter,
      hasOverflow = _ref.hasOverflow,
      isPrimary = _ref.isPrimary,
      title = _ref.title;
  return /*#__PURE__*/_react["default"].createElement(StyledTableData, {
    className: className,
    condensed: condensed,
    "data-test": "table-data"
  }, /*#__PURE__*/_react["default"].createElement(StyledContent, {
    hasOverflow: hasOverflow,
    alignRight: alignRight,
    color: isPrimary ? _encoreFoundation.gray10 : _encoreFoundation.gray30,
    "data-test": "table-data-content",
    title: title,
    variant: condensed ? _encoreWeb.Type.body3 : _encoreWeb.Type.body1,
    weight: _encoreWeb.Type.book
  }, _react["default"].Children.map(content, function (child) {
    return formatter ? formatter(child) : child;
  })));
}

TableData.propTypes = propTypes;