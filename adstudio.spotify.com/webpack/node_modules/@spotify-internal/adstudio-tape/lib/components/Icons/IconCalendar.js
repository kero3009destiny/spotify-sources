"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = IconCalendar;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _styledComponents = require("styled-components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function IconCalendar(_ref) {
  var iconSize = _ref.iconSize,
      color = _ref.color,
      remainingProps = _objectWithoutProperties(_ref, ["iconSize", "color"]);

  var strokeColor;
  var theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  switch (color) {
    case 'black':
      strokeColor = _encoreFoundation.black;
      break;

    case 'gray30':
      strokeColor = _encoreFoundation.gray30;
      break;

    default:
      strokeColor = theme.colors.primaryColor;
      break;
  }

  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    width: iconSize,
    height: iconSize,
    viewBox: "0 0 50 51",
    version: "1.1"
  }, remainingProps), /*#__PURE__*/_react["default"].createElement("g", {
    id: "Screens",
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "Icons",
    transform: "translate(-854.000000, -343.000000)",
    stroke: strokeColor,
    strokeWidth: "1.5"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "Calendar-large",
    transform: "translate(855.000000, 344.000000)"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "Group-6"
  }, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M23.8976744,4 L39.9,4 C41.059798,4 42,4.94135001 42,6.1025641 L42,42.8974359 C42,44.05865 41.059798,45 39.9,45 L2.1,45 C0.940202025,45 0,44.05865 0,42.8974359 L0,22.974359",
    id: "Rectangle",
    transform: "translate(21.000000, 24.500000) rotate(-180.000000) translate(-21.000000, -24.500000) "
  }), /*#__PURE__*/_react["default"].createElement("g", {
    id: "Group",
    transform: "translate(11.000000, 0.000000)",
    strokeLinecap: "square"
  }, /*#__PURE__*/_react["default"].createElement("line", {
    x1: "0.488888889",
    y1: "-1.38777878e-16",
    x2: "0.488888889",
    y2: "9",
    id: "Line"
  }), /*#__PURE__*/_react["default"].createElement("line", {
    x1: "20.0444444",
    y1: "-1.38777878e-16",
    x2: "20.0444444",
    y2: "9",
    id: "Line-Copy"
  })), /*#__PURE__*/_react["default"].createElement("line", {
    x1: "-7.55697973e-14",
    y1: "17.5",
    x2: "41.0666667",
    y2: "17.5",
    id: "Line-3",
    strokeLinecap: "square"
  })), /*#__PURE__*/_react["default"].createElement("polyline", {
    id: "Path-2",
    points: "27 41.2437113 34.4597432 48 48 32"
  })))));
}

IconCalendar.propTypes = {
  iconSize: _propTypes["default"].number,
  color: _propTypes["default"].string
};
IconCalendar.defaultProps = {
  color: 'black',
  iconSize: '16px'
};