"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = require("styled-components");

var _encoreFoundation = require("@spotify-internal/encore-foundation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var IconCheckSquare = function IconCheckSquare(_ref) {
  var checked = _ref.checked,
      disabled = _ref.disabled,
      iconSize = _ref.iconSize,
      id = _ref.id,
      className = _ref.className,
      theme = _ref.theme;
  var fillColor;
  var strokeColor;

  if (disabled) {
    fillColor = _encoreFoundation.gray85;
    strokeColor = _encoreFoundation.white;
  } else {
    fillColor = theme.colors.primaryColor;
    strokeColor = _encoreFoundation.aquamarine;
  }

  return checked ? /*#__PURE__*/_react["default"].createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    "data-name": "Layer 1",
    height: iconSize,
    width: iconSize,
    className: className
  }, /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
    id: "iconCheckedSquare-".concat(id)
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    width: iconSize,
    height: iconSize,
    y: ".2",
    fill: "none",
    rx: "2",
    ry: "2"
  }))), /*#__PURE__*/_react["default"].createElement("g", {
    clipPath: "url(#iconCheckedSquare-".concat(id, ")")
  }, /*#__PURE__*/_react["default"].createElement("path", {
    fill: fillColor,
    d: "M-5-4.8h26v26H-5z"
  })), /*#__PURE__*/_react["default"].createElement("path", {
    fill: "none",
    stroke: strokeColor,
    strokeMiterlimit: "10",
    strokeWidth: "2",
    d: "M4 8.64l2.53 2.96L12 5.2"
  })) : /*#__PURE__*/_react["default"].createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: iconSize,
    width: iconSize,
    className: className
  }, /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
    id: "iconUnchecked-".concat(id)
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    y: ".2",
    width: iconSize,
    height: iconSize,
    rx: "2",
    ry: "2",
    fill: "none"
  }))), /*#__PURE__*/_react["default"].createElement("g", {
    clipPath: "url(#iconUnchecked-".concat(id, ")")
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    y: ".2",
    width: iconSize,
    height: iconSize,
    rx: "2",
    ry: "2",
    stroke: "#979797",
    strokeMiterlimit: "10",
    strokeWidth: "2",
    fill: "none"
  })));
};

IconCheckSquare.propTypes = {
  checked: _propTypes["default"].bool,
  className: _propTypes["default"].string,
  color: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  iconSize: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  id: _propTypes["default"].string,
  theme: _propTypes["default"].shape({
    colors: _propTypes["default"].shape({
      primaryColor: _propTypes["default"].string
    })
  })
};
IconCheckSquare.defaultProps = {
  iconSize: 16
};

var _default = (0, _styledComponents.withTheme)(IconCheckSquare);

exports["default"] = _default;