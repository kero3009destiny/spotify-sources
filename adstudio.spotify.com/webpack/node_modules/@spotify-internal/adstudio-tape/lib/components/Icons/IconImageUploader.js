"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = IconImageUploader;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = require("styled-components");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function IconImageUploader(_ref) {
  var color = _ref.color,
      remainingProps = _objectWithoutProperties(_ref, ["color"]);

  var strokeColor;
  var theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  switch (color) {
    case 'black':
      strokeColor = _encoreFoundation.black;
      break;

    case 'gray30':
      strokeColor = _encoreFoundation.gray30;
      break;

    default:
      strokeColor = theme.colors.primaryColor;
      break;
  }

  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    width: "65",
    height: "64",
    viewBox: "0 0 65 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, remainingProps), /*#__PURE__*/_react["default"].createElement("rect", {
    width: "65",
    height: "64",
    fill: "#E5E5E5"
  }), /*#__PURE__*/_react["default"].createElement("rect", {
    x: "-297",
    y: "-39.5",
    width: "659",
    height: "291",
    rx: "3.5",
    fill: "#F8F8F8"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M2.5 2H62.5V62H2.5V2ZM0.5 0H2.5H62.5H64.5V2V62V64H62.5H2.5H0.5V62V2V0ZM19.2964 26C20.374 26 21.2701 25.117 21.2701 24C21.2701 22.883 20.374 22 19.2964 22C18.2188 22 17.3228 22.883 17.3228 24C17.3228 25.117 18.2188 26 19.2964 26ZM23.2701 24C23.2701 26.2091 21.491 28 19.2964 28C17.1018 28 15.3228 26.2091 15.3228 24C15.3228 21.7909 17.1018 20 19.2964 20C21.491 20 23.2701 21.7909 23.2701 24ZM27.4682 29.3082L26.7714 28.5809L26.0491 29.2829L11.6453 43.2829L13.0393 44.7171L26.7208 31.4191L39.436 44.6918L40.8802 43.3082L37.6465 39.9328L42.1356 35.4182L51.3702 44.7051L52.7884 43.2949L42.8447 33.2949L42.1356 32.5818L41.4265 33.2949L36.2625 38.4881L27.4682 29.3082Z",
    fill: "#7F7F7F"
  }), /*#__PURE__*/_react["default"].createElement("rect", {
    x: "-297",
    y: "-39.5",
    width: "659",
    height: "291",
    rx: "3.5",
    stroke: strokeColor,
    strokeDasharray: "4"
  }));
}

IconImageUploader.propTypes = {
  iconSize: _propTypes["default"].number,
  color: _propTypes["default"].string,
  theme: _propTypes["default"].object
};
IconImageUploader.defaultProps = {
  color: 'black',
  iconSize: '32'
};