"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = IconClockAlt;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = require("styled-components");

var _encoreFoundation = require("@spotify-internal/encore-foundation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function IconClockAlt(_ref) {
  var color = _ref.color,
      className = _ref.className;
  var theme = (0, _react.useContext)(_styledComponents.ThemeContext);
  var colors = {
    black: _encoreFoundation.black,
    gray30: _encoreFoundation.gray30
  };
  var strokeColor = colors[color] || theme.colors.primaryColor;
  return /*#__PURE__*/_react["default"].createElement("svg", {
    width: "64px",
    height: "64px",
    viewBox: "0 0 64 64",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, /*#__PURE__*/_react["default"].createElement("title", null, "clock"), /*#__PURE__*/_react["default"].createElement("desc", null, "Created with Sketch."), /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("filter", {
    x: "-5.8%",
    y: "-10.7%",
    width: "112.3%",
    height: "123.0%",
    filterUnits: "objectBoundingBox",
    id: "filter-1"
  }, /*#__PURE__*/_react["default"].createElement("feOffset", {
    dx: "4",
    dy: "4",
    "in": "SourceAlpha",
    result: "shadowOffsetOuter1"
  }), /*#__PURE__*/_react["default"].createElement("feGaussianBlur", {
    stdDeviation: "4",
    "in": "shadowOffsetOuter1",
    result: "shadowBlurOuter1"
  }), /*#__PURE__*/_react["default"].createElement("feColorMatrix", {
    values: "0 0 0 0 0.0941176471   0 0 0 0 0.0941176471   0 0 0 0 0.0941176471  0 0 0 0.1 0",
    type: "matrix",
    "in": "shadowBlurOuter1",
    result: "shadowMatrixOuter1"
  }), /*#__PURE__*/_react["default"].createElement("feMerge", null, /*#__PURE__*/_react["default"].createElement("feMergeNode", {
    "in": "shadowMatrixOuter1"
  }), /*#__PURE__*/_react["default"].createElement("feMergeNode", {
    "in": "SourceGraphic"
  })))), /*#__PURE__*/_react["default"].createElement("g", {
    id: "Empty-states",
    className: className,
    stroke: strokeColor,
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "Empty-state---Pending-approval",
    transform: "translate(-702.000000, -409.000000)",
    fill: strokeColor,
    fillRule: "nonzero"
  }, /*#__PURE__*/_react["default"].createElement("g", {
    id: "lightbox",
    filter: "url(#filter-1)",
    transform: "translate(482.000000, 350.000000)"
  }, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M248,63 C234.766562,63 224,73.7660225 224,87 C224,100.233978 234.766562,111 248,111 C261.233438,111 272,100.233978 272,87 C272,73.7660225 261.233438,63 248,63 Z M248,108 C236.420759,108 227,98.5792405 227,87 C227,75.4207595 236.420759,66 248,66 C259.579241,66 269,75.4207595 269,87 C269,98.5792405 259.579241,108 248,108 Z M248.706712,86.9516206 L248.706712,70.3765736 C248.706712,69.6161543 248.10095,69 247.353356,69 C246.605762,69 246,69.6161543 246,70.3765736 L246,87.5374903 C246,87.9119183 246.149952,88.270378 246.415751,88.5297245 L255.708977,97.6156607 C255.970986,97.872254 256.308784,98 256.646582,98 C257.001702,98 257.356823,97.8584882 257.622622,97.5771166 C258.140145,97.0286897 258.123364,96.1575939 257.584728,95.6306416 L248.706712,86.9516206 Z",
    id: "clock"
  })))));
}

IconClockAlt.propTypes = {
  color: _propTypes["default"].oneOf(['black', 'gray30', 'azure']),
  className: _propTypes["default"].string
};
IconClockAlt.defaultProps = {
  color: 'black',
  className: 'icon-clock-alt'
};