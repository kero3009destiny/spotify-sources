"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = PacingMeter;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _Type = _interopRequireDefault(require("../Type"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var statusColor = {
  success: _encoreFoundation.success,
  warning: _encoreFoundation.warning,
  failure: _encoreFoundation.failure,
  budget: _encoreFoundation.azure
};
var InlinePercentageTextWidth = 60;

var Container = _styledComponents["default"].div.withConfig({
  displayName: "PacingMeter__Container",
  componentId: "sc-1s46kir-0"
})(["width:100%;"]);

var PacingMeterContainer = _styledComponents["default"].div.withConfig({
  displayName: "PacingMeter__PacingMeterContainer",
  componentId: "sc-1s46kir-1"
})(["border-radius:", ";height:", ";overflow:hidden;position:relative;", " ", ""], _encoreFoundation.spacer12, _encoreFoundation.spacer12, function (props) {
  return props.showPercentageInline && 'display: inline-block;';
}, function (props) {
  return props.showPercentageInline ? "width: calc(100% - ".concat(InlinePercentageTextWidth, "px);") : 'width: 100%;';
});

var PacingMeterWrapper = _styledComponents["default"].div.withConfig({
  displayName: "PacingMeter__PacingMeterWrapper",
  componentId: "sc-1s46kir-2"
})(["background:", ";border-radius:", ";height:", ";overflow:hidden;"], _encoreFoundation.gray90, _encoreFoundation.spacer12, _encoreFoundation.spacer12);

var Meter = _styledComponents["default"].div.withConfig({
  displayName: "PacingMeter__Meter",
  componentId: "sc-1s46kir-3"
})(["background-color:", ";height:", ";width:", "%;"], function (props) {
  return statusColor[props.status];
}, _encoreFoundation.spacer12, function (props) {
  return props.progressPercentage;
});

var ExpectedProgress = _styledComponents["default"].div.withConfig({
  displayName: "PacingMeter__ExpectedProgress",
  componentId: "sc-1s46kir-4"
})(["background-color:", ";height:", "};position:relative;top:-", "};width:", ";left:", "%;"], _encoreFoundation.gray30, _encoreFoundation.spacer12, _encoreFoundation.spacer12, _encoreFoundation.spacer4, function (props) {
  return props.expectedProgressPercentage;
});

var Budget = (0, _styledComponents["default"])(_Type["default"]).withConfig({
  displayName: "PacingMeter__Budget",
  componentId: "sc-1s46kir-5"
})(["padding-bottom:", ";"], _encoreFoundation.spacer16);

var BudgetTotal = _styledComponents["default"].small.withConfig({
  displayName: "PacingMeter__BudgetTotal",
  componentId: "sc-1s46kir-6"
})(["color:", ";display:inline-block;font-size:14px;"], _encoreFoundation.gray80);

var PacingPercentage = (0, _styledComponents["default"])(_Type["default"]).withConfig({
  displayName: "PacingMeter__PacingPercentage",
  componentId: "sc-1s46kir-7"
})(["", " ", " ", " vertical-align:middle;box-sizing:content-box;width:34px;white-space:nowrap;overflow:visible;text-overflow:clip;left:calc(", "% - ", "px);"], function (props) {
  return props.showPercentageInline && 'display: inline-block;';
}, function (props) {
  return props.showPercentageInline && "padding: 0 ".concat(_encoreFoundation.spacer12, ";");
}, function (props) {
  return !props.showPercentageInline && 'position: relative;';
}, function (props) {
  return props.progressPercentage;
}, function (props) {
  return props.percentageTextPixelAdjustment;
});

function PacingMeter(_ref) {
  var _ref$budgetMode = _ref.budgetMode,
      budgetMode = _ref$budgetMode === void 0 ? false : _ref$budgetMode,
      budgetConsumed = _ref.budgetConsumed,
      _ref$expectedProgress = _ref.expectedProgressPercentage,
      expectedProgressPercentage = _ref$expectedProgress === void 0 ? budgetMode ? 100 : 0 : _ref$expectedProgress,
      _ref$progressPercenta = _ref.progressPercentage,
      progressPercentage = _ref$progressPercenta === void 0 ? 0 : _ref$progressPercenta,
      _ref$showPercentageIn = _ref.showPercentageInline,
      showPercentageInline = _ref$showPercentageIn === void 0 ? false : _ref$showPercentageIn,
      _ref$status = _ref.status,
      status = _ref$status === void 0 ? 'success' : _ref$status,
      totalBudget = _ref.totalBudget;
  var percentageTextPixelAdjustment = Math.min(progressPercentage, 36);
  var pacingPercentage = expectedProgressPercentage === 0 ? 0 : parseInt(progressPercentage / expectedProgressPercentage * 100, 10);
  return /*#__PURE__*/_react["default"].createElement(Container, null, budgetMode && /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement(Budget, {
    element: "h3",
    variant: "heading-3-black"
  }, budgetConsumed, /*#__PURE__*/_react["default"].createElement(BudgetTotal, null, "/", totalBudget))), /*#__PURE__*/_react["default"].createElement(PacingMeterContainer, {
    showPercentageInline: showPercentageInline
  }, /*#__PURE__*/_react["default"].createElement(PacingMeterWrapper, null, /*#__PURE__*/_react["default"].createElement(Meter, {
    status: status,
    progressPercentage: progressPercentage
  })), /*#__PURE__*/_react["default"].createElement(ExpectedProgress, {
    expectedProgressPercentage: expectedProgressPercentage
  })), /*#__PURE__*/_react["default"].createElement(PacingPercentage, {
    element: "p",
    variant: "body-2-book",
    progressPercentage: progressPercentage,
    percentageTextPixelAdjustment: percentageTextPixelAdjustment,
    showPercentageInline: showPercentageInline
  }, !budgetMode && "".concat(pacingPercentage, "%")));
}

PacingMeter.propTypes = {
  budgetMode: _propTypes["default"].bool,
  budgetConsumed: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].node, _propTypes["default"].string]),
  expectedProgressPercentage: _propTypes["default"].number,
  progressPercentage: _propTypes["default"].number,
  showPercentageInline: _propTypes["default"].bool,
  status: _propTypes["default"].string,
  totalBudget: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].node, _propTypes["default"].string])
};