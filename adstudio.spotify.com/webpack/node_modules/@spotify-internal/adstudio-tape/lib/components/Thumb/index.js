"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Thumb;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var propTypes = {
  alt: _propTypes["default"].string,
  size: _propTypes["default"].number,
  src: _propTypes["default"].string
};

var StyledThumb = _styledComponents["default"].img.withConfig({
  displayName: "Thumb__StyledThumb",
  componentId: "yez5tj-0"
})(["display:block;height:", "px;width:", "px;"], function (props) {
  return props.size;
}, function (props) {
  return props.size;
});

function Thumb(_ref) {
  var src = _ref.src,
      alt = _ref.alt,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, ["src", "alt", "size"]);

  return /*#__PURE__*/_react["default"].createElement(StyledThumb, _extends({
    alt: alt,
    src: src,
    size: size
  }, props));
}

Thumb.propTypes = propTypes;