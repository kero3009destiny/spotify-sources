"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _debounce2 = _interopRequireDefault(require("lodash/debounce"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _Icons = _interopRequireDefault(require("../Icons"));

var _timeouts = _interopRequireDefault(require("../../utils/const/timeouts"));

var _tokens = require("../../styles/tokens");

var _Input = _interopRequireDefault(require("../Input"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var IconSearch = _Icons["default"].IconSearch;

var SearchContainer = _styledComponents["default"].div.withConfig({
  displayName: "Search__SearchContainer",
  componentId: "d4xxxe-0"
})(["position:relative;"]);

var SearchLabel = _styledComponents["default"].label.withConfig({
  displayName: "Search__SearchLabel",
  componentId: "d4xxxe-1"
})(["height:", ";left:", ";position:absolute;top:50%;transform:translateY(-50%);width:", ";"], _encoreFoundation.spacer24, _encoreFoundation.spacer12, _encoreFoundation.spacer24);

var SearchIcon = (0, _styledComponents["default"])(IconSearch).withConfig({
  displayName: "Search__SearchIcon",
  componentId: "d4xxxe-2"
})(["stroke:", ";transition:stroke ", ";"], function (props) {
  return props.hovered ? _encoreFoundation.black : _encoreFoundation.gray70;
}, _tokens.transitionEase);
var SearchInput = (0, _styledComponents["default"])(_Input["default"]).withConfig({
  displayName: "Search__SearchInput",
  componentId: "d4xxxe-3"
})(["padding-left:calc(", " + ", ");"], _encoreFoundation.spacer24, _encoreFoundation.spacer16);

var Search = /*#__PURE__*/function (_Component) {
  _inherits(Search, _Component);

  var _super = _createSuper(Search);

  function Search(props) {
    var _this;

    _classCallCheck(this, Search);

    _this = _super.call(this, props);
    _this.state = {
      hasFocus: false
    };
    var timeout = props.timeout;

    if (!props.timeout && typeof props.handleChange === 'function') {
      /* eslint-disable no-console */
      if (console && console.warn) {
        console.warn("\n          timeout is no longer a default property of Search. If you begin using\n          onChange, be sure to provide a timeout prop if you intend to debounce\n          the change action.\n        ");
      }
      /* eslint-enable no-console */


      timeout = _timeouts["default"].MEDIUM;
    }

    _this.debouncedHandleChange = timeout ? (0, _debounce2["default"])(function () {
      var _this2;

      return (_this2 = _this).handleChange.apply(_this2, arguments);
    }, timeout) : function () {
      var _this3;

      return (_this3 = _this).handleChange.apply(_this3, arguments);
    };
    return _this;
  }

  _createClass(Search, [{
    key: "handleChange",
    value: function handleChange(event) {
      var _this$props;

      if (typeof this.props.handleChange === 'function') {
        /* eslint-disable no-console */
        if (console && console.warn) {
          console.warn("\n          handleChange is deprecated, and will be removed in a future version of\n          adstudio-tape. You should use onChange in the future, and manage the\n          searchWord field logic from your own application.\n\n          ```\n          <Search\n            onChange={event => handleChange({ searchWord: event.target.value })}\n          />\n          ```\n        ");
        }
        /* eslint-enable no-console */


        this.props.handleChange({
          searchWord: event.target.value
        });
      }

      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        rest[_key - 1] = arguments[_key];
      }

      if (typeof this.props.onChange === 'function') (_this$props = this.props).onChange.apply(_this$props, [event].concat(rest));
    }
  }, {
    key: "handleFocus",
    value: function handleFocus() {
      var _this$props2;

      this.setState(function () {
        return {
          hasFocus: true
        };
      });
      if (typeof this.props.onFocus === 'function') (_this$props2 = this.props).onFocus.apply(_this$props2, arguments);
    }
  }, {
    key: "handleBlur",
    value: function handleBlur() {
      var _this$props3;

      this.setState(function () {
        return {
          hasFocus: false
        };
      });
      if (typeof this.props.onBlur === 'function') (_this$props3 = this.props).onBlur.apply(_this$props3, arguments);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props4 = this.props,
          className = _this$props4.className,
          handleChange = _this$props4.handleChange,
          id = _this$props4.id,
          rest = _objectWithoutProperties(_this$props4, ["className", "handleChange", "id"]);

      var hasFocus = this.state.hasFocus;
      return /*#__PURE__*/_react["default"].createElement(SearchContainer, null, /*#__PURE__*/_react["default"].createElement(SearchLabel, {
        htmlFor: id
      }, /*#__PURE__*/_react["default"].createElement(SearchIcon, {
        hovered: hasFocus,
        color: "gray",
        size: 24
      })), /*#__PURE__*/_react["default"].createElement(SearchInput, _extends({}, rest, {
        id: id,
        className: className,
        onChange: function onChange(event) {
          event.persist();

          _this4.debouncedHandleChange(event);
        },
        onBlur: function onBlur() {
          return _this4.handleBlur.apply(_this4, arguments);
        },
        onFocus: function onFocus() {
          return _this4.handleFocus.apply(_this4, arguments);
        }
      })));
    }
  }]);

  return Search;
}(_react.Component);

exports["default"] = Search;

_defineProperty(Search, "propTypes", {
  className: _propTypes["default"].string,
  handleChange: _propTypes["default"].func,
  id: _propTypes["default"].string,
  onBlur: _propTypes["default"].func,
  onChange: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  timeout: _propTypes["default"].number
});

_defineProperty(Search, "defaultProps", {
  // use a getter to define a defaultid per instance
  get id() {
    return (0, _uniqueId2["default"])('search-input');
  }

});