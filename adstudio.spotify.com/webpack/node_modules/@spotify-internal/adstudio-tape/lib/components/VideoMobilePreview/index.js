"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _encoreWeb = require("@spotify-internal/encore-web");

var _ButtonSecondary = _interopRequireDefault(require("../ButtonSecondary"));

var _VideoContainer = _interopRequireDefault(require("./styled/VideoContainer"));

var _config = require("../../config");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var PreviewBody = _styledComponents["default"].div.withConfig({
  displayName: "VideoMobilePreview__PreviewBody",
  componentId: "okw3ln-0"
})(["background:", ";border-radius:4px;color:white;height:482px;margin:", ";text-align:center;width:271px;position:relative;"], _encoreFoundation.black, function (props) {
  return props.showPanel ? '0 auto' : '0';
});

var Panel = _styledComponents["default"].div.withConfig({
  displayName: "VideoMobilePreview__Panel",
  componentId: "okw3ln-1"
})(["border-radius:4px;box-shadow:0 3px 9px 0 ", ";padding:20px 0;width:300px;"], _encoreFoundation.gray90);

var HeaderWrapper = _styledComponents["default"].div.withConfig({
  displayName: "VideoMobilePreview__HeaderWrapper",
  componentId: "okw3ln-2"
})(["display:flex;flex-direction:column;padding:12px 0 8px;z-index:5;position:relative;", " & p:last-of-type{letter-spacing:0.1em;}"], function (props) {
  return props.withoutHeadline && (0, _styledComponents.css)(["& p:first-of-type{padding-bottom:", ";}"], _encoreFoundation.spacer16);
});

var CTAButton = (0, _styledComponents["default"])(_ButtonSecondary["default"]).withConfig({
  displayName: "VideoMobilePreview__CTAButton",
  componentId: "okw3ln-3"
})(["background-color:white;border:none;color:black;padding-left:16px;padding-right:16px;pointer-events:none;z-index:5;position:relative;margin-top:", ";"], function (props) {
  return props.isLandscape ? '260px' : '320px';
});

var SkipControls = _styledComponents["default"].div.withConfig({
  displayName: "VideoMobilePreview__SkipControls",
  componentId: "okw3ln-4"
})(["position:relative;margin-top:", ";z-index:5;"], function (props) {
  return props.isLandscape ? '76px' : '16px';
});

var VideoMobilePreview = function VideoMobilePreview(_ref) {
  var title = _ref.title,
      headline = _ref.headline,
      videoUrl = _ref.videoUrl,
      ctaText = _ref.ctaText,
      showPanel = _ref.showPanel,
      aspectRatio = _ref.aspectRatio,
      skipText = _ref.skipText;

  var isLandscape = Number(aspectRatio) === _config.ASPECT_RATIOS.LANDSCAPE;

  var header = /*#__PURE__*/_react["default"].createElement(HeaderWrapper, {
    withoutHeadline: !headline
  }, /*#__PURE__*/_react["default"].createElement(_encoreWeb.Type.p, {
    variant: _encoreWeb.Type.body4,
    weight: _encoreWeb.Type.book,
    condensed: !!headline
  }, title), /*#__PURE__*/_react["default"].createElement(_encoreWeb.Type.p, {
    variant: _encoreWeb.Type.body4,
    weight: _encoreWeb.Type.bold,
    condensed: true
  }, headline));

  var body = /*#__PURE__*/_react["default"].createElement(PreviewBody, {
    showPanel: showPanel
  }, /*#__PURE__*/_react["default"].createElement(_VideoContainer["default"], {
    videoUrl: videoUrl,
    isLandscape: isLandscape
  }), header, /*#__PURE__*/_react["default"].createElement(CTAButton, {
    color: "white",
    buttonSize: "sm",
    ctaText: ctaText,
    isLandscape: isLandscape
  }, ctaText), /*#__PURE__*/_react["default"].createElement(SkipControls, {
    isLandscape: isLandscape
  }, /*#__PURE__*/_react["default"].createElement(_encoreWeb.Type, {
    variant: _encoreWeb.Type.body4,
    weight: _encoreWeb.Type.bold
  }, skipText)));

  if (showPanel) return /*#__PURE__*/_react["default"].createElement(Panel, null, body);
  return body;
};

VideoMobilePreview.propTypes = {
  title: _propTypes["default"].string,
  headline: _propTypes["default"].string,
  videoUrl: _propTypes["default"].string,
  ctaText: _propTypes["default"].string,
  showPanel: _propTypes["default"].bool,
  aspectRatio: _propTypes["default"].number,
  skipText: _propTypes["default"].string
};
VideoMobilePreview.defaultProps = {
  title: 'Advertisement',
  ctaText: 'Learn More',
  showPanel: true,
  aspectRatio: _config.ASPECT_RATIOS.LANDSCAPE
};
var _default = VideoMobilePreview;
exports["default"] = _default;