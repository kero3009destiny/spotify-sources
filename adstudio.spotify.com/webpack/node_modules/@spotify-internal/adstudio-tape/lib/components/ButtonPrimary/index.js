"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ButtonPrimary;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _encoreFoundation = require("@spotify-internal/encore-foundation");

var _encoreWeb = require("@spotify-internal/encore-web");

var _mixins = require("../../styles/mixins");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var BLUE = {
  main: (0, _styledComponents.css)(["background-color:", ";color:", ";"], function (props) {
    return props.theme.colors.primaryColor;
  }, _encoreFoundation.white),
  hover: (0, _styledComponents.css)(["background-color:", ";"], function (props) {
    return props.theme.colors.primaryColorHover;
  }),
  focus: (0, _styledComponents.css)(["background-color:", ";"], function (props) {
    return props.theme.colors.primaryColorFocus;
  }),
  active: (0, _styledComponents.css)(["background-color:", ";"], function (props) {
    return props.theme.colors.primaryColorActive;
  }),
  disabled: (0, _styledComponents.css)(["background-color:", ";"], function (props) {
    return props.theme.colors.primaryColorDisabledLight;
  })
};
var WHITE = {
  main: (0, _styledComponents.css)(["opacity:0.95;background-color:", ";color:", ";"], _encoreFoundation.white, function (props) {
    return props.theme.colors.primaryColor;
  }),
  hover: (0, _styledComponents.css)(["opacity:1;background-color:", ";color:", ";"], _encoreFoundation.white, function (props) {
    return props.theme.colors.primaryColor;
  }),
  focus: (0, _styledComponents.css)(["opacity:1;background-color:", ";color:", ";"], _encoreFoundation.white, function (props) {
    return props.theme.colors.primaryColor;
  }),
  active: (0, _styledComponents.css)(["opacity:1;background-color:", ";color:", ";"], _encoreFoundation.white, function (props) {
    return props.theme.colors.primaryColor;
  }),
  disabled: (0, _styledComponents.css)(["opacity:0.95;background-color:", ";color:", ";"], _encoreFoundation.white, function (props) {
    return props.theme.colors.primaryColor;
  })
};
var ButtonPrimaryBtn = (0, _styledComponents["default"])(_encoreWeb.ButtonPrimary).withConfig({
  displayName: "ButtonPrimary__ButtonPrimaryBtn",
  componentId: "sc-1kdrt9t-0"
})(["&&&{", ";", ";}"], function (props) {
  return props.color === 'blue' ? (0, _mixins.buttonStyleOverrides)(BLUE) : null;
}, function (props) {
  return props.color === 'white' ? (0, _mixins.buttonStyleOverrides)(WHITE) : null;
});

function ButtonPrimary(props) {
  return /*#__PURE__*/_react["default"].createElement(ButtonPrimaryBtn, props);
}

ButtonPrimary.propTypes = {
  color: _propTypes["default"].string
};
ButtonPrimary.defaultProps = {
  type: 'button',
  color: 'blue'
};