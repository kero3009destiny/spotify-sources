"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = parseToMillis;

/**
 * Parse a string that represents a number of seconds or milliseconds, e.g. '1000ms' or '1s' to an
 * integer value of milliseconds represented by the string.
 * @param {string} input String to parse.
 * @returns {number|string} Integer of milliseconds represented by the string or the original
 * string supplied if it cannot be so parsed.  If a string that can be parsed to a number (e.g.
 * '1000' is supplied, it will be returned as an integer and presumed to be a value in milliseconds.
 */
function parseToMillis(input) {
  // Firstly see if the string is actually just a number.  if it is assume Milliseconds and return
  if ("".concat(input).match(/^[0-9]+$/) && !isNaN(parseInt(input, 10))) {
    return parseInt(input, 10);
  } // match to a string that can be milliseconds or seconds, e.g. 1000ms or 1s


  var matcher = /^([0-9]+)((?:m{1})?s{1})$/;
  var match = input.match(matcher);

  if (match) {
    // Return the numeric part as a number, multiplying one-thousand fold if it was seconds
    return parseInt(match[2] === 's' ? match[1] * 1000 : match[1], 10);
  } // Return input unchanged if not matching


  return input;
}