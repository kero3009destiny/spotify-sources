// source: config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.Country', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.Currency', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.MarketType', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.Targetability', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.TargetingRules', null, global);
goog.exportSymbol('proto.com.spotify.ads.adstudio.config.proto.VatValidationType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.Targetability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.Targetability.displayName = 'proto.com.spotify.ads.adstudio.config.proto.Targetability';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.repeatedFields_, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.displayName = 'proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.TargetingRules, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.TargetingRules.displayName = 'proto.com.spotify.ads.adstudio.config.proto.TargetingRules';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.Currency.displayName = 'proto.com.spotify.ads.adstudio.config.proto.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.spotify.ads.adstudio.config.proto.Country.repeatedFields_, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.Country.displayName = 'proto.com.spotify.ads.adstudio.config.proto.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.displayName = 'proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.repeatedFields_, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.displayName = 'proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.displayName = 'proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.repeatedFields_, null);
};
goog.inherits(proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.displayName = 'proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.Targetability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Targetability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetableByAdserving: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    adstudioTargetability: jspb.Message.getFieldWithDefault(msg, 2, 0),
    supportsCities: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    supportsPostalCodes: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.Targetability;
  return proto.com.spotify.ads.adstudio.config.proto.Targetability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Targetability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTargetableByAdserving(value);
      break;
    case 2:
      var value = /** @type {!proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability} */ (reader.readEnum());
      msg.setAdstudioTargetability(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportsCities(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportsPostalCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.Targetability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Targetability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetableByAdserving();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAdstudioTargetability();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSupportsCities();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSupportsPostalCodes();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool targetable_by_adserving = 1;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.getTargetableByAdserving = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.setTargetableByAdserving = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional AdstudioTargetability adstudio_targetability = 2;
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.getAdstudioTargetability = function() {
  return /** @type {!proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.setAdstudioTargetability = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool supports_cities = 3;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.getSupportsCities = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.setSupportsCities = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool supports_postal_codes = 4;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.getSupportsPostalCodes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Targetability} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Targetability.prototype.setSupportsPostalCodes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.toObject = function(includeInstance, msg) {
  var f, obj = {
    byCountryList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    byRolloutList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    supportsPodcastBooking: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions;
  return proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addByCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addByRollout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportsPodcastBooking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getByCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getByRolloutList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSupportsPodcastBooking();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated string by_country = 1;
 * @return {!Array<string>}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.getByCountryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.setByCountryList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.addByCountry = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.clearByCountryList = function() {
  return this.setByCountryList([]);
};


/**
 * repeated string by_rollout = 2;
 * @return {!Array<string>}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.getByRolloutList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.setByRolloutList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.addByRollout = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.clearByRolloutList = function() {
  return this.setByRolloutList([]);
};


/**
 * optional bool supports_podcast_booking = 3;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.getSupportsPodcastBooking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.prototype.setSupportsPodcastBooking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.TargetingRules.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAgeTarget: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.TargetingRules;
  return proto.com.spotify.ads.adstudio.config.proto.TargetingRules.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinAgeTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.TargetingRules.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAgeTarget();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 min_age_target = 1;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.prototype.getMinAgeTarget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.TargetingRules} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.TargetingRules.prototype.setMinAgeTarget = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currencySymbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencyFormattingIncludesSpace: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    decimals: jspb.Message.getFieldWithDefault(msg, 4, 0),
    decimalSeparator: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thousandsSeparator: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currencySymbolPosition: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.Currency;
  return proto.com.spotify.ads.adstudio.config.proto.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencySymbol(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCurrencyFormattingIncludesSpace(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDecimals(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecimalSeparator(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThousandsSeparator(value);
      break;
    case 7:
      var value = /** @type {!proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition} */ (reader.readEnum());
      msg.setCurrencySymbolPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrencySymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencyFormattingIncludesSpace();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDecimalSeparator();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThousandsSeparator();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrencySymbolPosition();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional string currency_code = 1;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string currency_symbol = 2;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getCurrencySymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setCurrencySymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool currency_formatting_includes_space = 3;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getCurrencyFormattingIncludesSpace = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setCurrencyFormattingIncludesSpace = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 decimals = 4;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string decimal_separator = 5;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getDecimalSeparator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setDecimalSeparator = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string thousands_separator = 6;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getThousandsSeparator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setThousandsSeparator = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional CountryCurrencySymbolPosition currency_symbol_position = 7;
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition}
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.getCurrencySymbolPosition = function() {
  return /** @type {!proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Currency} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Currency.prototype.setCurrencySymbolPosition = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.spotify.ads.adstudio.config.proto.Country.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    targetability: (f = msg.getTargetability()) && proto.com.spotify.ads.adstudio.config.proto.Targetability.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vatValidationType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rules: (f = msg.getRules()) && proto.com.spotify.ads.adstudio.config.proto.TargetingRules.toObject(includeInstance, f),
    currency: (f = msg.getCurrency()) && proto.com.spotify.ads.adstudio.config.proto.Currency.toObject(includeInstance, f),
    marketType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    canTargetAllCostModels: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    activeAudio: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    currencyThreshold: (f = msg.getCurrencyThreshold()) && proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.toObject(includeInstance, f),
    targetingRestrictions: (f = msg.getTargetingRestrictions()) && proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.toObject(includeInstance, f),
    marketCodeList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    vatnumberrequired: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.Country;
  return proto.com.spotify.ads.adstudio.config.proto.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = new proto.com.spotify.ads.adstudio.config.proto.Targetability;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.Targetability.deserializeBinaryFromReader);
      msg.setTargetability(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {!proto.com.spotify.ads.adstudio.config.proto.VatValidationType} */ (reader.readEnum());
      msg.setVatValidationType(value);
      break;
    case 5:
      var value = new proto.com.spotify.ads.adstudio.config.proto.TargetingRules;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.TargetingRules.deserializeBinaryFromReader);
      msg.setRules(value);
      break;
    case 6:
      var value = new proto.com.spotify.ads.adstudio.config.proto.Currency;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {!proto.com.spotify.ads.adstudio.config.proto.MarketType} */ (reader.readEnum());
      msg.setMarketType(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanTargetAllCostModels(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActiveAudio(value);
      break;
    case 10:
      var value = new proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.deserializeBinaryFromReader);
      msg.setCurrencyThreshold(value);
      break;
    case 11:
      var value = new proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.deserializeBinaryFromReader);
      msg.setTargetingRestrictions(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketCode(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVatnumberrequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetability();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.spotify.ads.adstudio.config.proto.Targetability.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVatValidationType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRules();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.spotify.ads.adstudio.config.proto.TargetingRules.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.spotify.ads.adstudio.config.proto.Currency.serializeBinaryToWriter
    );
  }
  f = message.getMarketType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getCanTargetAllCostModels();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getActiveAudio();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCurrencyThreshold();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.serializeBinaryToWriter
    );
  }
  f = message.getTargetingRestrictions();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions.serializeBinaryToWriter
    );
  }
  f = message.getMarketCodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getVatnumberrequired();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string country_code = 1;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Targetability targetability = 2;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.Targetability}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getTargetability = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.Targetability} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.Targetability, 2));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.Targetability|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setTargetability = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearTargetability = function() {
  return this.setTargetability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.hasTargetability = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional VatValidationType vat_validation_type = 4;
 * @return {!proto.com.spotify.ads.adstudio.config.proto.VatValidationType}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getVatValidationType = function() {
  return /** @type {!proto.com.spotify.ads.adstudio.config.proto.VatValidationType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.VatValidationType} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setVatValidationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional TargetingRules rules = 5;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.TargetingRules}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getRules = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.TargetingRules} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.TargetingRules, 5));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.TargetingRules|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setRules = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearRules = function() {
  return this.setRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.hasRules = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Currency currency = 6;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.Currency}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getCurrency = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.Currency} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.Currency, 6));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.Currency|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MarketType market_type = 7;
 * @return {!proto.com.spotify.ads.adstudio.config.proto.MarketType}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getMarketType = function() {
  return /** @type {!proto.com.spotify.ads.adstudio.config.proto.MarketType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.MarketType} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setMarketType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool can_target_all_cost_models = 8;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getCanTargetAllCostModels = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setCanTargetAllCostModels = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool active_audio = 9;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getActiveAudio = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setActiveAudio = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional CurrencyThreshold currency_threshold = 10;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getCurrencyThreshold = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold, 10));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setCurrencyThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearCurrencyThreshold = function() {
  return this.setCurrencyThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.hasCurrencyThreshold = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional TargetingRestrictions targeting_restrictions = 11;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getTargetingRestrictions = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions, 11));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.TargetingRestrictions|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setTargetingRestrictions = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearTargetingRestrictions = function() {
  return this.setTargetingRestrictions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.hasTargetingRestrictions = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated string market_code = 12;
 * @return {!Array<string>}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getMarketCodeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setMarketCodeList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.addMarketCode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.clearMarketCodeList = function() {
  return this.setMarketCodeList([]);
};


/**
 * optional bool vatNumberRequired = 13;
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.getVatnumberrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.Country.prototype.setVatnumberrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDailyFreqCaps: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxWeeklyFreqCaps: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxMonthlyFreqCaps: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold;
  return proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDailyFreqCaps(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxWeeklyFreqCaps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxMonthlyFreqCaps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxDailyFreqCaps();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxWeeklyFreqCaps();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxMonthlyFreqCaps();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 max_daily_freq_caps = 1;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.getMaxDailyFreqCaps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.setMaxDailyFreqCaps = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 max_weekly_freq_caps = 2;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.getMaxWeeklyFreqCaps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.setMaxWeeklyFreqCaps = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 max_monthly_freq_caps = 3;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.getMaxMonthlyFreqCaps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.prototype.setMaxMonthlyFreqCaps = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepsMicrosList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions}
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions;
  return proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions}
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setStepsMicrosList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepsMicrosList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 steps_micros = 1;
 * @return {!Array<number>}
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.getStepsMicrosList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.setStepsMicrosList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.addStepsMicros = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.prototype.clearStepsMicrosList = function() {
  return this.setStepsMicrosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    billingThreshold: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minimumThreshold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maximumThreshold: jspb.Message.getFieldWithDefault(msg, 4, 0),
    budgetSuggestions: (f = msg.getBudgetSuggestions()) && proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.toObject(includeInstance, f),
    podcastMinimumBudgetMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold;
  return proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBillingThreshold(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinimumThreshold(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaximumThreshold(value);
      break;
    case 5:
      var value = new proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.deserializeBinaryFromReader);
      msg.setBudgetSuggestions(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPodcastMinimumBudgetMultiplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBillingThreshold();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMinimumThreshold();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMaximumThreshold();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBudgetSuggestions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions.serializeBinaryToWriter
    );
  }
  f = message.getPodcastMinimumBudgetMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional string currency_code = 1;
 * @return {string}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 billing_threshold = 2;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getBillingThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setBillingThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 minimum_threshold = 3;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getMinimumThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setMinimumThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 maximum_threshold = 4;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getMaximumThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setMaximumThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional BudgetSuggestions budget_suggestions = 5;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getBudgetSuggestions = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions, 5));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.BudgetSuggestions|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setBudgetSuggestions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.clearBudgetSuggestions = function() {
  return this.setBudgetSuggestions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.hasBudgetSuggestions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double podcast_minimum_budget_multiplier = 7;
 * @return {number}
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.getPodcastMinimumBudgetMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.prototype.setPodcastMinimumBudgetMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    countriesList: jspb.Message.toObjectList(msg.getCountriesList(),
    proto.com.spotify.ads.adstudio.config.proto.Country.toObject, includeInstance),
    currencyThresholdsList: jspb.Message.toObjectList(msg.getCurrencyThresholdsList(),
    proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.toObject, includeInstance),
    frequencyCapThreshold: (f = msg.getFrequencyCapThreshold()) && proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration;
  return proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.spotify.ads.adstudio.config.proto.Country;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.Country.deserializeBinaryFromReader);
      msg.addCountries(value);
      break;
    case 2:
      var value = new proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.deserializeBinaryFromReader);
      msg.addCurrencyThresholds(value);
      break;
    case 3:
      var value = new proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold;
      reader.readMessage(value,proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.deserializeBinaryFromReader);
      msg.setFrequencyCapThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.spotify.ads.adstudio.config.proto.Country.serializeBinaryToWriter
    );
  }
  f = message.getCurrencyThresholdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold.serializeBinaryToWriter
    );
  }
  f = message.getFrequencyCapThreshold();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Country countries = 1;
 * @return {!Array<!proto.com.spotify.ads.adstudio.config.proto.Country>}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.getCountriesList = function() {
  return /** @type{!Array<!proto.com.spotify.ads.adstudio.config.proto.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.Country, 1));
};


/**
 * @param {!Array<!proto.com.spotify.ads.adstudio.config.proto.Country>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.setCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.Country}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.addCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.spotify.ads.adstudio.config.proto.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * repeated CurrencyThreshold currency_thresholds = 2;
 * @return {!Array<!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold>}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.getCurrencyThresholdsList = function() {
  return /** @type{!Array<!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold, 2));
};


/**
 * @param {!Array<!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold>} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.setCurrencyThresholdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.addCurrencyThresholds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.spotify.ads.adstudio.config.proto.CurrencyThreshold, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.clearCurrencyThresholdsList = function() {
  return this.setCurrencyThresholdsList([]);
};


/**
 * optional FrequencyCapThreshold frequency_cap_threshold = 3;
 * @return {?proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.getFrequencyCapThreshold = function() {
  return /** @type{?proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold} */ (
    jspb.Message.getWrapperField(this, proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold, 3));
};


/**
 * @param {?proto.com.spotify.ads.adstudio.config.proto.FrequencyCapThreshold|undefined} value
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
*/
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.setFrequencyCapThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration} returns this
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.clearFrequencyCapThreshold = function() {
  return this.setFrequencyCapThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration.prototype.hasFrequencyCapThreshold = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.com.spotify.ads.adstudio.config.proto.VatValidationType = {
  UNSUPPORTED: 0,
  NO_VALIDATION_REQUIRED: 1,
  AUTOMATED_VALIDATION_REQUIRED: 2,
  MANUAL_VALIDATION_REQUIRED: 3
};

/**
 * @enum {number}
 */
proto.com.spotify.ads.adstudio.config.proto.AdstudioTargetability = {
  TARGETABLE: 0,
  UNTARGETABLE: 1
};

/**
 * @enum {number}
 */
proto.com.spotify.ads.adstudio.config.proto.CountryCurrencySymbolPosition = {
  START: 0,
  END: 1
};

/**
 * @enum {number}
 */
proto.com.spotify.ads.adstudio.config.proto.MarketType = {
  BETA: 0,
  GA: 1,
  UNAVAILABLE: 2
};

goog.object.extend(exports, proto.com.spotify.ads.adstudio.config.proto);
