/**
 * @fileoverview gRPC-Web generated client stub for com.spotify.ads.adstudio.config.proto
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var config_pb = require('./config_pb.js')

var com_spotify_ads_protobuf_annotations_pb = require('./com/spotify/ads/protobuf/annotations_pb.js')
const proto = {};
proto.com = {};
proto.com.spotify = {};
proto.com.spotify.ads = {};
proto.com.spotify.ads.adstudio = {};
proto.com.spotify.ads.adstudio.config = {};
proto.com.spotify.ads.adstudio.config.proto = require('./service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.ads.adstudio.config.proto.ConfigurationServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.com.spotify.ads.adstudio.config.proto.ConfigurationServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest,
 *   !proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration>}
 */
const methodDescriptor_ConfigurationService_getConfiguration = new grpc.web.MethodDescriptor(
  '/com.spotify.ads.adstudio.config.proto.ConfigurationService/getConfiguration',
  grpc.web.MethodType.UNARY,
  proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest,
  config_pb.AdstudioConfiguration,
  /**
   * @param {!proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  config_pb.AdstudioConfiguration.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest,
 *   !proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration>}
 */
const methodInfo_ConfigurationService_getConfiguration = new grpc.web.AbstractClientBase.MethodInfo(
  config_pb.AdstudioConfiguration,
  /**
   * @param {!proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  config_pb.AdstudioConfiguration.deserializeBinary
);


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration>|undefined}
 *     The XHR Node Readable Stream
 */
proto.com.spotify.ads.adstudio.config.proto.ConfigurationServiceClient.prototype.getConfiguration =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/com.spotify.ads.adstudio.config.proto.ConfigurationService/getConfiguration',
      request,
      metadata || {},
      methodDescriptor_ConfigurationService_getConfiguration,
      callback);
};


/**
 * @param {!proto.com.spotify.ads.adstudio.config.proto.ConfigurationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.com.spotify.ads.adstudio.config.proto.AdstudioConfiguration>}
 *     A native promise that resolves to the response
 */
proto.com.spotify.ads.adstudio.config.proto.ConfigurationServicePromiseClient.prototype.getConfiguration =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/com.spotify.ads.adstudio.config.proto.ConfigurationService/getConfiguration',
      request,
      metadata || {},
      methodDescriptor_ConfigurationService_getConfiguration);
};


module.exports = proto.com.spotify.ads.adstudio.config.proto;

