'use strict';

function HarmonyError(code, message) {
  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-harmony/types/Errors}
   */
  this.code = code;

  /**
   * Error message string.
   *
   * @type {string}
   */
  this.message = message;

  /**
   * If error is thrown due to an unexpected response, the response (for
   * example `<FAILED_ERROR_TYPE>_WITH_STATUS`), the response status can be
   * stored here.
   *
   * @type {number}
   */
  this.status = -1;

  /**
   * Object for storing properties of an event that's useful for debugging.
   *
   * @type {object}
   */
  this.debug = {};
}

HarmonyError.prototype = new Error();
HarmonyError.prototype.constructor =
  new HarmonyError();
HarmonyError.prototype.name = 'HarmonyError';


/**
 * Sets the unrecoverable function to `true`.
 *
 * @return {HarmonyError}
 */
HarmonyError.prototype.fatal = function() {
  this.unrecoverable = true;
  return this;
};

module.exports = HarmonyError;
