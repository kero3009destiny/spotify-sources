'use strict';

function PlayerAPIClientError(code, message) {
  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-harmony/types/Errors}
   */
  this.code = code;

  /**
   * Error message string.
   *
   * @type {string}
   */
  this.message = message;


  /**
   * The status of the response from the tp-service that caused the error to
   *     be created.
   *
   * @type {number}
   */
  this.status = -1;

  /**
   * Will be true if max subscriptions is (ie. response from the tp-service
   *     has http status 429) is reached.
   *
   * @type {string}
   */
  this.maxedSubscriptions = false;

  /**
   * Object for storing properties of an event that's useful for debugging.
   *
   * @type {object}
   */
  this.debug = {};
}

PlayerAPIClientError.prototype = new Error();
PlayerAPIClientError.prototype.constructor = new PlayerAPIClientError();
PlayerAPIClientError.prototype.name = 'PlayerAPIClientError';

/**
 * Sets the unrecoverable function to `true`.
 *
 * @return {HarmonyError}
 */
PlayerAPIClientError.prototype.fatal = function() {
  this.unrecoverable = true;
  return this;
};

module.exports = PlayerAPIClientError;
