'use strict';

var slice = Array.prototype.slice;

function delegate(obj, method, target) {
  obj[method] = function() {
    var args = slice.call(arguments);
    var _target = this[target];
    return args.length <= 1 ?
      _target[method].call(_target, args[0]) :
      _target[method].apply(_target, args);
  };
}

function delegateAll(obj, properties) {
  for (var method in properties) {
    if (!properties.hasOwnProperty(method)) {
      continue;
    }
    delegate(obj, method, properties[method]);
  }
}

module.exports = {
  delegate: delegate,
  delegateAll: delegateAll
};
