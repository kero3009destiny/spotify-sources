'use strict';

/**
 * Checks whether two DeviceInfo objects are the same.
 *
 *
 * @param {module:spotify-harmony/_internal/types.DeviceInfo} deviceA The first
 *     device to compare.
 * @param {module:spotify-harmony/_internal/types.DeviceInfo} deviceB The second
 *     device to compare.
 * @return {boolean} True if both devices are equal, false otherwise.
 * @protected
 */
function areDevicesEqual(deviceA, deviceB) {
  if (!deviceA && !deviceB) {
    return true;
  } else if (!deviceA || !deviceB) {
    return false;
  }

  return deviceA.id === deviceB.id &&
    deviceA.is_active === deviceB.is_active &&
    deviceA.is_controllable === deviceB.is_controllable &&
    deviceA.is_observable === deviceB.is_observable &&
    deviceA.local === deviceB.local &&
    deviceA.name === deviceB.name &&
    deviceA.type === deviceB.type &&
    deviceA.version === deviceB.version &&
    deviceA.volume === deviceB.volume;
}

function areDeviceListsEqual(listA, listB) {
  if (!Array.isArray(listA) || !Array.isArray(listB)) {
    throw new TypeError('Invalid devices list.');
  }

  if (listA.length !== listB.length) {
    return false;
  }

  for (var i = 0, l = listA.length; i < l; i++) {
    if (!areDevicesEqual(listA[i], listB[i])) {
      return false;
    }
  }

  return true;
}

module.exports = {

  areDevicesEqual: areDevicesEqual,
  areDeviceListsEqual: areDeviceListsEqual

};
