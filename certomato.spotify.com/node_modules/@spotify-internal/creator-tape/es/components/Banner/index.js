import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import { ThemeProvider } from 'styled-components';
import CloseButton from './CloseButton';
import Message from './Message';
import Wrapper from './Wrapper';
import Icon from './Icon';
import { announcement, success, warning, failure, info, black, white } from '../../styles';
var variants = {
  announcement: {
    color: white,
    backgroundColor: announcement
  },
  error: {
    color: white,
    backgroundColor: failure
  },
  informational: {
    color: black,
    backgroundColor: info
  },
  success: {
    color: white,
    backgroundColor: success
  },
  warning: {
    color: white,
    backgroundColor: warning
  }
};
var propTypes = {
  children: PropTypes.node,
  contextual: PropTypes.bool,
  variant: PropTypes.oneOf(Object.keys(variants)),
  align: PropTypes.oneOf(['center']),
  onClose: PropTypes.func,
  renderIcon: PropTypes.func,
  renderMessage: PropTypes.func,
  renderCloseButton: PropTypes.func
};
var defaultProps = {
  variant: 'informational',
  contextual: false,
  renderIcon: function renderIcon(props) {
    return React.createElement(Icon, props);
  },
  renderMessage: function renderMessage(props) {
    return React.createElement(Message, props);
  },
  renderCloseButton: function renderCloseButton(props) {
    return React.createElement(CloseButton, props);
  }
};
export default function Banner(_ref) {
  var variant = _ref.variant,
      align = _ref.align,
      contextual = _ref.contextual,
      children = _ref.children,
      onClose = _ref.onClose,
      renderIcon = _ref.renderIcon,
      renderMessage = _ref.renderMessage,
      renderCloseButton = _ref.renderCloseButton,
      props = _objectWithoutProperties(_ref, ["variant", "align", "contextual", "children", "onClose", "renderIcon", "renderMessage", "renderCloseButton"]);

  var _variants$variant = variants[variant],
      color = _variants$variant.color,
      backgroundColor = _variants$variant.backgroundColor;
  return React.createElement(ThemeProvider, {
    theme: {
      banner: {
        color: color,
        backgroundColor: backgroundColor,
        align: align,
        contextual: contextual
      }
    }
  }, React.createElement(Wrapper, Object.assign({
    showClose: onClose ? true : undefined
  }, props), renderIcon({
    variant: variant
  }), renderMessage({
    children: children
  }), onClose && renderCloseButton({
    onClose: onClose
  })));
}
Banner.propTypes = propTypes;
Banner.defaultProps = defaultProps;
Banner.Icon = Icon;
Banner.Message = Message;
Banner.CloseButton = CloseButton; // export variants

Object.keys(variants).forEach(function (key) {
  Banner[key] = key;
});