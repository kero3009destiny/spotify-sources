import styled, { css } from 'styled-components';
import { textOverflow, typeStyleBody2, gray10, gray45, gray95, gray60, screenXsMax, screenSmMin, screenSmMax, screenMdMin, spacer4, spacer12, fontWeightBold } from '../../styles';
import Svg from '../Icon/Svg';
import ButtonIcon from '../ButtonIcon';
import Trigger from '../OverlayTrigger/Trigger';
import Overlay from '../OverlayTrigger/Overlay';
export default styled.td.withConfig({
  displayName: "TableCell",
  componentId: "b2ra0q-0"
})(["", ";font-feature-settings:", ";font-weight:", ";text-align:", ";vertical-align:middle;padding:", ";", ";&:first-child{@media (max-width:", "){padding-left:", ";}}&:last-child{@media (max-width:", "){padding-right:", ";}}", ";> ", ",> ", ",> ", " span:not(", ") ", "{position:relative;top:3px;}"], typeStyleBody2(), function (props) {
  return props.numerical ? "'tnum'" : undefined;
}, function (props) {
  return props.highlight ? fontWeightBold : undefined;
}, function (props) {
  return props.align;
}, function (props) {
  return props.condensed ? 0 : spacer12;
}, function (props) {
  return props.theme.tableCell === 'dark' ? css(["color:", ";"], props.highlight ? gray95 : gray60) : "\n      color: ".concat(props.highlight ? gray10 : gray45, ";\n  ");
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, screenXsMax, function (props) {
  return props.condensed ? 0 : spacer4;
}, function (props) {
  return props.truncate && css(["", ";max-width:0;width:100%;@media (min-width:", "){max-width:150px;width:auto;}@media (min-width:", ") and (max-width:", "){max-width:85px;width:auto;}"], textOverflow(), screenMdMin, screenSmMin, screenSmMax);
}, Svg, ButtonIcon, Trigger, Overlay, ButtonIcon);