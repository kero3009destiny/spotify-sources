import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Dialog from './Dialog';
import Header from './Header';
import Title from './Title';
import Body from './Body';
import Footer from './Footer';
import LegalContainer from './LegalContainer';
import Legal from './Legal';

var DialogConfirmation =
/*#__PURE__*/
function (_Component) {
  _inherits(DialogConfirmation, _Component);

  function DialogConfirmation() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, DialogConfirmation);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DialogConfirmation)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      hasBorder: false
    };
    return _this;
  }

  _createClass(DialogConfirmation, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          dialogTitle = _this$props.dialogTitle,
          body = _this$props.body,
          footer = _this$props.footer,
          legal = _this$props.legal,
          legalStrict = _this$props.legalStrict,
          props = _objectWithoutProperties(_this$props, ["dialogTitle", "body", "footer", "legal", "legalStrict"]);

      var hasBorder = this.state.hasBorder;
      return React.createElement(Dialog, props, React.createElement(Header, {
        hasBorder: hasBorder
      }, React.createElement(Title, null, dialogTitle)), React.createElement(Body, {
        onScroll: function onScroll(e) {
          return _this2.setState({
            hasBorder: e.target.scrollTop !== 0
          });
        }
      }, body), React.createElement(Footer, null, legal && React.createElement(LegalContainer, {
        legalStrict: legalStrict
      }, React.createElement(Legal, {
        legalStrict: legalStrict
      }, legal)), footer));
    }
  }]);

  return DialogConfirmation;
}(Component);

DialogConfirmation.propTypes = {
  /** Can accept any JSX */
  dialogTitle: PropTypes.node,

  /** Can accept any JSX */
  body: PropTypes.node,

  /** Can accept any JSX, meant for dismiss + accept buttons */
  footer: PropTypes.node,
  legal: PropTypes.node,
  legalStrict: PropTypes.bool
};
export { DialogConfirmation as default };