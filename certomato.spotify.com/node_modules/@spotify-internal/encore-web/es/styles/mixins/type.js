import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
var _excluded = ["fontWeight"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { body1, body2, body3, body4, breakpoint, cta1, cta2, cta3, cta4, desktopAlto, desktopAltoBrio, desktopBallad, desktopBalladBold, desktopBass, desktopBrio, desktopCanon, desktopCello, desktopCelloCanon, desktopFinale, desktopFinaleBold, desktopForte, desktopMesto, desktopMestoBold, desktopMetronome, desktopMinuet, desktopMinuetBold, desktopViola, desktopViolaBold, heading4, mobileAlto, mobileAltoBrio, mobileBallad, mobileBalladBold, mobileBass, mobileBrio, mobileCanon, mobileCello, mobileCelloCanon, mobileFinale, mobileFinaleBold, mobileForte, mobileMesto, mobileMestoBold, mobileMetronome, mobileMinuet, mobileMinuetBold, mobileViola, mobileViolaBold, type } from '@spotify-internal/encore-foundation';
import { css } from 'styled-components';
export var typeStyleDisplay1 = function typeStyleDisplay1() {
  return css(["font-size:", ";font-weight:", ";letter-spacing:", ";line-height:", ";padding-bottom:", ";@media (min-width:", "){font-size:", ";line-height:", ";letter-spacing:", ";}@media (min-width:", "){font-size:", ";line-height:", ";}"], type.display1FontSizeXSmall, type.display1FontWeightXSmall, type.display1LetterSpacingXSmall, type.display1LineHeightXSmall, type.display1PaddingBottomXSmall, breakpoint.screenSmMin, type.display1FontSizeSmall, type.display1LineHeightSmall, type.display1LetterSpacingSmall, breakpoint.screenMdMin, type.display1FontSize, type.display1LineHeight);
};
export var typeStyleDisplay2 = function typeStyleDisplay2() {
  return css(["font-size:", ";font-weight:", ";letter-spacing:", ";line-height:", ";padding-bottom:", ";@media (min-width:", "){font-size:", ";line-height:", ";letter-spacing:", ";}@media (min-width:", "){font-size:", ";line-height:", ";}"], type.display2FontSizeXSmall, type.display2FontWeightXSmall, type.display2LetterSpacingXSmall, type.display2LineHeightXSmall, type.display2PaddingBottomXSmall, breakpoint.screenSmMin, type.display2FontSizeSmall, type.display2LineHeightSmall, type.display2LetterSpacingSmall, breakpoint.screenMdMin, type.display2FontSize, type.display2LineHeight);
};
export var typeStyleH1 = function typeStyleH1() {
  return css(["font-size:", ";font-weight:", ";letter-spacing:", ";line-height:", ";padding-bottom:", ";@media (min-width:", "){font-size:", ";line-height:", ";}@media (min-width:", "){font-size:", ";line-height:", ";}"], type.heading1FontSizeXSmall, type.heading1FontWeightXSmall, type.heading1LetterSpacingXSmall, type.heading1LineHeightXSmall, type.heading1PaddingBottomXSmall, breakpoint.screenSmMin, type.heading1FontSizeSmall, type.heading1LineHeightSmall, breakpoint.screenMdMin, type.heading1FontSize, type.heading1LineHeight);
};
export var typeStyleH2 = function typeStyleH2() {
  return css(["font-size:", ";font-weight:", ";letter-spacing:", ";line-height:", ";padding-bottom:", ";@media (min-width:", "){font-size:", ";line-height:", ";letter-spacing:", ";}"], type.heading2FontSizeSmall, type.heading2FontWeightSmall, type.heading2LetterSpacingSmall, type.heading2LineHeightSmall, type.heading2PaddingBottomSmall, breakpoint.screenSmMin, type.heading2FontSize, type.heading2LineHeight, type.heading2LetterSpacing);
};
export var typeStyleH3 = function typeStyleH3() {
  return css(["font-size:", ";font-weight:", ";line-height:", ";letter-spacing:", ";@media (min-width:", "){font-size:", ";line-height:", ";}"], type.heading3FontSizeSmall, type.heading3FontWeightSmall, type.heading3LineHeightSmall, type.heading3LetterSpacingSmall, breakpoint.screenSmMin, type.heading3FontSize, type.heading3LineHeight);
};
export var typeStyleH4 = function typeStyleH4() {
  return css(["", ";"], heading4);
};
export var typeStyleBody1 = function typeStyleBody1() {
  return css(["", ";"], body1);
};
export var typeStyleBody2 = function typeStyleBody2() {
  return css(["", ";"], body2);
};
export var typeStyleBody3 = function typeStyleBody3() {
  return css(["", ";"], body3);
};
export var typeStyleBody4 = function typeStyleBody4() {
  return css(["", ";"], body4);
};
export var typeStyleCta1 = function typeStyleCta1() {
  return css(["", ";"], cta1);
};
export var typeStyleCta2 = function typeStyleCta2() {
  return css(["", ";"], cta2);
};
export var typeStyleCta3 = function typeStyleCta3() {
  return css(["", ";"], cta3);
};
export var typeStyleCta4 = function typeStyleCta4() {
  return css(["", ";"], cta4);
}; //
// Experimental Type
// --------------------------------------------------------------

var sharedFontMixin = function sharedFontMixin() {
  return css(["[lang='ar'] &{letter-spacing:initial;line-height:$line-height * 1.5;}"]);
};

var pxToRem = function pxToRem(value) {
  var BASE_FONT_SIZE = 16;
  return "".concat(parseFloat(value) / BASE_FONT_SIZE, "rem");
};

var applyPxLegacy = function applyPxLegacy(typeStyle, pxLegacy) {
  return _objectSpread(_objectSpread({}, typeStyle), {}, {
    fontSize: pxLegacy ? typeStyle.fontSize : pxToRem(typeStyle.fontSize),
    lineHeight: pxLegacy ? typeStyle.lineHeight : pxToRem(typeStyle.lineHeight)
  });
};

var responsiveVariant = function responsiveVariant(mobileToken, desktopToken) {
  var pxLegacy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var fontWeight = desktopToken.fontWeight,
      rest = _objectWithoutProperties(desktopToken, _excluded);

  return css(["", ";", ";@media (min-width:", "){", ";}"], sharedFontMixin(), applyPxLegacy(mobileToken, pxLegacy), breakpoint.screenSmMin, applyPxLegacy(rest, pxLegacy));
};

export var bass = function bass() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileBass, desktopBass, pxLegacy);
};
export var forte = function forte() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var weight = arguments.length > 1 ? arguments[1] : undefined;
  return css(["", ";", ";@media (min-width:", "){", ";", ";}"], sharedFontMixin(), applyPxLegacy(mobileForte, pxLegacy), breakpoint.screenSmMin, applyPxLegacy(desktopForte, pxLegacy), weight && css(["font-weight:", ";"], weight));
};
export var brio = function brio() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileBrio, desktopBrio, pxLegacy);
};
export var alto = function alto() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileAlto, desktopAlto, pxLegacy);
};
export var altoBrio = function altoBrio() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileAltoBrio, desktopAltoBrio, pxLegacy);
};
export var canon = function canon() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileCanon, desktopCanon, pxLegacy);
};
export var cello = function cello() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileCello, desktopCello, pxLegacy);
};
export var celloCanon = function celloCanon() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileCelloCanon, desktopCelloCanon, pxLegacy);
};
export var ballad = function ballad() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileBallad, desktopBallad, pxLegacy);
};
export var balladBold = function balladBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileBalladBold, desktopBalladBold, pxLegacy);
};
export var viola = function viola() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileViola, desktopViola, pxLegacy);
};
export var violaBold = function violaBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileViolaBold, desktopViolaBold, pxLegacy);
};
export var mesto = function mesto() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileMesto, desktopMesto, pxLegacy);
};
export var mestoBold = function mestoBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileMestoBold, desktopMestoBold, pxLegacy);
};
export var metronome = function metronome() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileMetronome, desktopMetronome, pxLegacy);
};
export var finale = function finale() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileFinale, desktopFinale, pxLegacy);
};
export var finaleBold = function finaleBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileFinaleBold, desktopFinaleBold, pxLegacy);
};
export var minuet = function minuet() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileMinuet, desktopMinuet, pxLegacy);
};
export var minuetBold = function minuetBold() {
  var pxLegacy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return responsiveVariant(mobileMinuetBold, desktopMinuetBold, pxLegacy);
};