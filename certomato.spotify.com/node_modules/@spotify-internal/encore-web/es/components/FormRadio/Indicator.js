import styled, { css } from 'styled-components';
import { cssColorValue, cursorDisabled, focusGapBorder, formCheckIndicator, opacityDisabled, semanticColors } from "../../styles";
export var Indicator = styled.span.withConfig({
  displayName: "Indicator",
  componentId: "hjfusp-0"
})(["", ""], function (props) {
  var unselectedStyles = css(["background-color:", ";border:1px solid ", ";"], cssColorValue(semanticColors.backgroundBase), cssColorValue(semanticColors.essentialSubdued));
  var selectedStyles = css(["background:", ";&::before{background-color:", ";border-radius:50%;content:'';height:0.5em;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:0.5em;}"], cssColorValue(props.semanticColor), cssColorValue(semanticColors.backgroundBase));
  var disabledStyles = css(["opacity:", ";cursor:", ";"], opacityDisabled, cursorDisabled);
  var focusStyles = css(["&::after{border-color:", ";}"], cssColorValue(semanticColors.essentialBase));
  var unselectedHoverStyles = css(["border-color:", ";"], cssColorValue(props.semanticColor));
  var unselectedActiveStyles = css(["border-color:", ";border-width:2px;"], cssColorValue(props.semanticColor));
  var unselectedDisabledStyles = css(["border-color:", ";border-width:1px;"], cssColorValue(semanticColors.essentialSubdued));
  return css(["", ";", " input:focus + label &{", "}", " input:disabled + label &{", "}input:not(:checked) + label &{", "}input:not(:checked):hover + label &{", "}", " input:not(:checked):active + label &{", "}", " input:not(:checked):disabled + label &{", "}input:checked + label &{", "}"], formCheckIndicator('50%'), focusGapBorder('50%', props.isUsingKeyboard), focusStyles, props.isFocus && css(["input + label &{", "}"], focusStyles), disabledStyles, unselectedStyles, unselectedHoverStyles, props.isHover && css(["input:not(:checked) + label &{", "}"], unselectedHoverStyles), unselectedActiveStyles, props.isActive && css(["input:not(:checked) + label &{", "}"], unselectedActiveStyles), unselectedDisabledStyles, selectedStyles);
});