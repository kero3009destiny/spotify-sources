import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["semanticColor", "color"];
import React from 'react';
import { colorWarning } from "../../deprecationWarnings";
import { Indicator } from "./Indicator";
export var StatusIndicator = function StatusIndicator(_ref) {
  var _ref$semanticColor = _ref.semanticColor,
      semanticColor = _ref$semanticColor === void 0 ? 'essentialBrightAccent' : _ref$semanticColor,
      color = _ref.color,
      props = _objectWithoutProperties(_ref, _excluded);

  colorWarning({
    color: color
  });
  return /*#__PURE__*/React.createElement(Indicator, Object.assign({
    statusColor: semanticColor
  }, props));
};
/**
* **StatusIndicator** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/StatusIndicator) | [Storybook](https://encore-web.spotify.net/?path=/story/components-statusindicator--default) | [Encore](https://encore.spotify.net/web/components/indicators) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=423:1073) |
*
* StatusIndicator tells users about the current status of something using a colored dot and text label.
*
* @example
* () => (
*  <StatusIndicator>
*    <Type semanticColor="textSubdued">Default Status</Type>
*  </StatusIndicator>
*);
*
*/

export default StatusIndicator;