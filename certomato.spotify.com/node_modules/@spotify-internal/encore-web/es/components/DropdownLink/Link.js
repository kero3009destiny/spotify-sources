import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["divider", "isHover", "isActive", "component"];
import React from 'react';
import { spacer16 } from '@spotify-internal/encore-foundation';
import styled, { css } from 'styled-components';
import { useEncoreContextType } from "../../hooks/useEncoreContextType";
import { buttonLinkReset, cssColorValue, cursorDisabled, opacityDisabled, rootStyle, semanticColors, typeStyleBody2, viola } from "../../styles";

var hoverStyles = function hoverStyles(href) {
  return css(["background-color:", ";color:", ";", ";"], cssColorValue(semanticColors.backgroundElevatedHighlight), cssColorValue(semanticColors.textSubdued), href && css(["cursor:default;"]));
};

var activeStyles = css(["&,&:hover{background-color:", ";color:", ";}"], cssColorValue(semanticColors.backgroundElevatedPress), cssColorValue(semanticColors.textSubdued));
var selectedStyles = css(["&,&:hover{background-color:", ";color:", ";}"], cssColorValue(semanticColors.backgroundElevatedPress), cssColorValue(semanticColors.textBase));
var dividerStyles = css(["border-top:1px solid ", ";"], cssColorValue(semanticColors.decorativeSubdued));
var disabledStyles = css(["&,&:hover{opacity:", ";color:", ";background-color:transparent;cursor:", ";}"], opacityDisabled, cssColorValue(semanticColors.textSubdued), cursorDisabled);
export var Link = styled(function NavigationItemLink(_ref) {
  var divider = _ref.divider,
      isHover = _ref.isHover,
      isActive = _ref.isActive,
      Component = _ref.component,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Component, props);
}).withConfig({
  displayName: "Link",
  componentId: "qrqq4c-0"
})(["", ";", ";", ";display:block;padding:14px ", ";color:", ";text-decoration:none;&:hover{", "}&:active{", "}", " ", ";", " ", ";", ";"], rootStyle(), function (props) {
  return props.component === 'button' && css(["", ";text-align:left;width:100%;"], buttonLinkReset());
}, function () {
  return useEncoreContextType(typeStyleBody2(), viola());
}, spacer16, cssColorValue(semanticColors.textSubdued), function (props) {
  return hoverStyles(props.href);
}, activeStyles, function (props) {
  return props.isHover && hoverStyles(props.href);
}, function (props) {
  return props.isActive && activeStyles;
}, function (props) {
  return props.selected && selectedStyles;
}, function (props) {
  return props.disabled && disabledStyles;
}, function (props) {
  return props.divider && dividerStyles;
});