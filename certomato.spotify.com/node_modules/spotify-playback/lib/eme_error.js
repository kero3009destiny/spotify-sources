'use strict';

var Errors = require('../types/errors');

function EMEError(code, message) {
  Error.call(this, message);

  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-playback/types/Errors}
   */
  this.code = code || Errors.EME_ERROR_UNKNOWN;

  /**
   * Error message.
   *
   * @type {string}
   */
  this.message = message;

  /**
   * Error status for network related eme errors.
   *
   * @type {number}
   */
  this.status = -1;

  /**
   * The license server that was in use when the eror was thrown.
   *
   * @type {string}
   */
  this.licenseServer = '';

  /**
   * True if the error should cause an endpoint refresh.
   *
   * @type {boolean}
   */
  this.shouldRefreshEndpoint = false;

  /**
   * True if we cannot recover from this error.
   *
   * @type {boolean}
   */
  this.unrecoverable = false;

  /**
   * Object for storing properties of an event that's usefull for debugging.
   *
   * @type {object}
   */
  this.debug = {};
}

EMEError.prototype = new Error();
EMEError.prototype.constructor = EMEError;
EMEError.prototype.name = 'EMEError';

EMEError.prototype.fatal = function() {
  this.unrecoverable = true;
  return this;
};

module.exports = EMEError;
