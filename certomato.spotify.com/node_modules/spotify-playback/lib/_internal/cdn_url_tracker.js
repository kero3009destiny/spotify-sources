'use strict';

var LinkedList = require('spotify-linkedlist');

function URLTracker() {
  this._version = '1.0.0';
  this._list = null;
  this._map = null;
  this.clear();
}

URLTracker.prototype.clear = function() {
  this._list = new LinkedList();
  this._map = {};
};

URLTracker.prototype.track = function(url, data) {
  var entry = this._map[url];
  if (!entry) {
    entry = new LinkedList.Node({
      url: url,
      segments: 0,
      bandwidths: []
    });
    this._list.append(entry);
    this._map[url] = entry;
  }
  var value = entry.value;
  value.segments += 1;
  value.bandwidths.push(data.bandwidth);
};

URLTracker.prototype.toJSON = function() {
  var urls = [];
  var current = this._list.first;
  while (current) {
    var value = current.value;

    // Calculate average bandwidth.
    var bandwidths = value.bandwidths;
    var total = 0;
    var len = bandwidths.length;
    while (len--) {
      total += bandwidths[len];
    }

    urls.push({
      url: value.url,
      segments: value.segments,
      avg_bw: parseFloat((total / bandwidths.length).toFixed(7))
    });

    current = current.next;
  }
  return {
    version: this._version,
    urls: urls
  };
};

module.exports = URLTracker;
