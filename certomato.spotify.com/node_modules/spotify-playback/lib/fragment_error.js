'use strict';

/**
 * Error used when a media fragment failed to load.
 *
 * @constructor
 * @param {module:spotify-playback/types/Errors} code String representation of
 *     error code.
 * @param {string} message Error message.
 * @param {?number=} status HTTP status code for fragment request.
 * @param {?object=} debug Optional object for debug data related to the error.
 */
function FragmentError(code, message, status, debug) {
  Error.call(this, message);

  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-playback/types/Errors}
   */
  this.code = code;

  /**
   * Error message.
   *
   * @type {string}
   */
  this.message = message;

  /**
   * Error status for network related fragment errors.
   *
   * @type {number}
   */
  this.status = status !== undefined ? status : -1;

  /**
   * Optional object for debug data related to the error.
   *
   * @type {object}
   */
  this.debug = debug || {};

  /**
   *
   */
  this.target = null;
}

/**
 * Error inheritance.
 */
FragmentError.prototype = new Error();
FragmentError.prototype.constructor = FragmentError;
FragmentError.prototype.name = 'FragmentError';

module.exports = FragmentError;
