'use strict';

function LicenseError(code, message) {
  Error.call(this, message);

  /**
   * Error code.
   *
   * @type {string}
   * @see {module:spotify-playback/types/Errors}
   */
  this.code = code;

  /**
   * Error message string.
   *
   * @type {string}
   */
  this.message = message;

  /**
   * Status code for http-related license errors.
   *
   * @type {number}
   */
  this.status = -1;


  /**
   * Object for storing properties of an event that's useful for debugging.
   *
   * @type {object}
   */
  this.debug = {};

  /**
   * Indicates whether we can play the next track.
   *
   * @type {string}
   */
  this.canPlayNext = true;
}

LicenseError.prototype = new Error();
LicenseError.prototype.constructor = LicenseError;
LicenseError.prototype.name = 'LicenseError';

LicenseError.prototype.fatal = function() {
  this.unrecoverable = true;
  return this;
};

module.exports = LicenseError;
