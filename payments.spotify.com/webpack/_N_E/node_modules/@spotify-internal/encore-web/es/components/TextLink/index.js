import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "color", "semanticColor", "textColor", "theme"];
import React, { useContext } from 'react';
import { KeyboardDetectionContext } from "../../contexts/KeyboardDetectionContext";
import { renamedPropWarning } from "../../deprecationWarnings";
import { Link } from "./Link";
export var TextLink = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      color = _ref.color,
      semanticColor = _ref.semanticColor,
      textColor = _ref.textColor,
      theme = _ref.theme,
      props = _objectWithoutProperties(_ref, _excluded);

  if (textColor) {
    renamedPropWarning('textColor', 'semanticColor');
  }

  if (theme) {
    renamedPropWarning('theme', 'semanticColor');
  }

  var _useContext = useContext(KeyboardDetectionContext),
      isUsingKeyboard = _useContext.isUsingKeyboard;

  return /*#__PURE__*/React.createElement(Link, Object.assign({
    isUsingKeyboard: isUsingKeyboard,
    color: color,
    semanticColor: semanticColor,
    ref: ref
  }, props), children);
});
/**
* **TextLink** ![Status: Production](https://img.shields.io/badge/PRODUCTION-%2357B560|height=14)
*
* [GitHub](https://ghe.spotify.net/encore/web/tree/master/src/core/components/TextLink) | [Storybook](https://encore-web.spotify.net/?path=/story/components-textlink--default) | [Encore](https://encore.spotify.net/web/components/textlink) | [Figma](https://www.figma.com/file/bnQXqGkLeiTlbk8JXGDcsX/Encore-Web---Light-Theme-Toolkit?node-id=423:1058) |
*
* A text link is a text-based anchor link that users can follow to another place. It comes in standalone or inline variants.
*
* @example
* () => <TextLink href="#">Text link</TextLink>;
*
*/

export default TextLink;