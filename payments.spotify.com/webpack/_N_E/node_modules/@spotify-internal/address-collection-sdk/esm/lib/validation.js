const REQUIRED_FIELD = 'required_field';
const fieldsErrorMap = {
    street: 'required_field_street',
    city: 'required_field_city',
    state: 'required_field_state',
    postal_code_short: 'required_five_digit_zip_code',
};
const allowedCharactersRegExp = /^[a-zA-Z0-9 ÀàÁáÂâÃãÄäÉéÈèÊêËëÎîÏïÔôÕõÒòÖÿÇçÍíÑñÓóÚÜü,.'"()#:;]+$/;
export default function validate(values) {
    const errors = {};
    for (const key of Object.keys(values)) {
        if (values[key].length === 0) {
            errors[key] = getTranslationKey(key);
            continue;
        }
        if ((key === 'street' || key === 'city') &&
            !allowedCharactersRegExp.test(values[key])) {
            errors[key] = getTranslationKey(key);
        }
    }
    if (!/^([0-9]{5})$/.test(values.postal_code_short)) {
        errors.postal_code_short = fieldsErrorMap.postal_code_short;
    }
    return errors;
}
function getTranslationKey(key) {
    return fieldsErrorMap[key] || REQUIRED_FIELD;
}
//# sourceMappingURL=validation.js.map