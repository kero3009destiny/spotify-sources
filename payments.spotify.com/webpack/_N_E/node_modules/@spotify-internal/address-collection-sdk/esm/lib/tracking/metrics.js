import { createSemanticMetrics, createUniversalReporter, MetricTypes, } from '@spotify-internal/semantic-metrics';
import { Environment } from '../../api/environment';
let context;
let semanticMetric;
export const initializeSemanticMetrics = (environmentValue, contextValue) => {
    context = contextValue;
    semanticMetric = createSemanticMetrics({
        key: 'address-collection-sdk',
        reporter: createUniversalReporter(),
        dev: environmentValue !== Environment.PRODUCTION,
    });
};
export const sendAddressApiMetric = (eventName, isUsingAutocomplete = false) => {
    if (!context || !semanticMetric) {
        throw new Error('Address collection sdk semantic metrics has not been initialized');
    }
    semanticMetric.sendMetric({
        metric_type: MetricTypes.COUNTER,
        what: eventName,
        value: 1,
        tags: {
            context: context,
            isUsingAutocomplete: isUsingAutocomplete.toString(),
        },
    });
};
//# sourceMappingURL=metrics.js.map