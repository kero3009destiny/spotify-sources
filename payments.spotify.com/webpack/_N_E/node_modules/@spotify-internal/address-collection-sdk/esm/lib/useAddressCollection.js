import React, { useCallback, useRef, useState } from 'react';
import AddressCollection from '../components/AddressCollection';
import { getLegalTerms } from './getLegalTerms';
const useOnSubmit = (submitRef) => {
    const resolvePromise = useRef();
    const rejectPromise = useRef();
    const onSuccess = () => { var _a; return (_a = resolvePromise.current) === null || _a === void 0 ? void 0 : _a.call(resolvePromise); };
    const onCancel = () => { var _a; return (_a = rejectPromise.current) === null || _a === void 0 ? void 0 : _a.call(rejectPromise); };
    const onSubmit = () => new Promise((resolve, reject) => {
        resolvePromise.current = resolve;
        rejectPromise.current = reject;
        const submit = submitRef.current;
        if (!submit) {
            reject();
            return;
        }
        submit().catch(reject);
    });
    return { onSubmit, onSuccess, onCancel };
};
export default function useAddressCollection(options) {
    var _a;
    const submitRef = useRef();
    const postalCodeRef = useRef('');
    const addressRef = useRef(null);
    const _getPostalCode = useCallback(() => postalCodeRef.current, []);
    const _getAddress = useCallback(() => addressRef.current, []);
    const onSetPostalCode = useCallback((value) => {
        postalCodeRef.current = value;
    }, []);
    const onSetAddress = useCallback((address) => {
        addressRef.current = address;
    }, []);
    const [isLoading, setIsLoading] = useState(false);
    const { onSubmit, onSuccess, onCancel } = useOnSubmit(submitRef);
    return {
        name: 'address-collection-sdk',
        position: 'above',
        isLoading: isLoading,
        component: (React.createElement(AddressCollection, Object.assign({}, options, { isStandalone: false, useEncoreStyle: options.useEncoreStyle, submitRef: submitRef, onSuccess: onSuccess, onCancel: onCancel, onSetIsLoading: setIsLoading, onSetPostalCode: onSetPostalCode, onSetAddress: onSetAddress, fallbackEnabled: (_a = options.fallbackEnabled) !== null && _a !== void 0 ? _a : true, addressProfile: options.addressProfile }))),
        hooks: {
            onSubmit: onSubmit,
            _getPostalCode: _getPostalCode,
            _getAddress: _getAddress,
        },
        legalTerms: getLegalTerms(),
    };
}
//# sourceMappingURL=useAddressCollection.js.map