import { Field } from 'formik';
import { FormGroup, FormHelpText, FormInput, } from '@spotify-internal/encore-web';
import React from 'react';
export const InputField = (props) => {
    const id = `address-${props.name}`;
    return (React.createElement(Field, { name: props.name }, ({ field, meta }) => {
        return (React.createElement(React.Fragment, null, props.useEncoreStyle ? (React.createElement(FormGroup, { label: props.label, labelFor: id },
            React.createElement(FormInput, Object.assign({ id: id, type: "text" }, field, { error: meta.touched && meta.error !== undefined, onBlur: (e) => {
                    field.onBlur(e);
                } })),
            meta.touched && meta.error && (React.createElement(FormHelpText, { error: true }, meta.error)))) : (React.createElement("div", { className: "floating-label-form-group" },
            React.createElement("input", Object.assign({ id: id, type: "text" }, field, { placeholder: " ", className: `${meta.touched && meta.error !== undefined
                    ? 'invalid-input'
                    : ''}` })),
            React.createElement("label", { htmlFor: id }, props.label),
            meta.touched && meta.error && (React.createElement("div", null,
                React.createElement("p", { className: "field-error" }, meta.error)))))));
    }));
};
//# sourceMappingURL=InputField.js.map